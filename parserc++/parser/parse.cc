// Generated by Bisonc++ V4.08.00 on Wed, 12 Mar 2014 18:27:28 +0100

// $insert class.ih
#include "Parser.ih"

// The FIRST element of SR arrays shown below uses `d_type', defining the
// state's type, and `d_lastIdx' containing the last element's index. If
// d_lastIdx contains the REQ_TOKEN bitflag (see below) then the state needs
// a token: if in this state d_token__ is _UNDETERMINED_, nextToken() will be
// called

// The LAST element of SR arrays uses `d_token' containing the last retrieved
// token to speed up the (linear) seach.  Except for the first element of SR
// arrays, the field `d_action' is used to determine what to do next. If
// positive, it represents the next state (used with SHIFT); if zero, it
// indicates `ACCEPT', if negative, -d_action represents the number of the
// rule to reduce to.

// `lookup()' tries to find d_token__ in the current SR array. If it fails, and
// there is no default reduction UNEXPECTED_TOKEN__ is thrown, which is then
// caught by the error-recovery function.

// The error-recovery function will pop elements off the stack until a state
// having bit flag ERR_ITEM is found. This state has a transition on _error_
// which is applied. In this _error_ state, while the current token is not a
// proper continuation, new tokens are obtained by nextToken(). If such a
// token is found, error recovery is successful and the token is
// handled according to the error state's SR table and parsing continues.
// During error recovery semantic actions are ignored.

// A state flagged with the DEF_RED flag will perform a default
// reduction if no other continuations are available for the current token.

// The ACCEPT STATE never shows a default reduction: when it is reached the
// parser returns ACCEPT(). During the grammar
// analysis phase a default reduction may have been defined, but it is
// removed during the state-definition phase.

// So:
//      s_x[] = 
//      {
//                  [_field_1_]         [_field_2_]
//
// First element:   {state-type,        idx of last element},
// Other elements:  {required token,    action to perform},
//                                      ( < 0: reduce, 
//                                          0: ACCEPT,
//                                        > 0: next state)
// Last element:    {set to d_token__,    action to perform}
//      }

// When the --thread-safe option is specified, all static data are defined as
// const. If --thread-safe is not provided, the state-tables are not defined
// as const, since the lookup() function below will modify them


namespace // anonymous
{
    char const author[] = "Frank B. Brokken (f.b.brokken@rug.nl)";

    enum 
    {
        STACK_EXPANSION = 5     // size to expand the state-stack with when
                                // full
    };

    enum ReservedTokens
    {
        PARSE_ACCEPT     = 0,   // `ACCEPT' TRANSITION
        _UNDETERMINED_   = -2,
        _EOF_            = -1,
        _error_          = 256
    };
    enum StateType       // modify statetype/data.cc when this enum changes
    {
        NORMAL,
        ERR_ITEM,
        REQ_TOKEN,
        ERR_REQ,    // ERR_ITEM | REQ_TOKEN
        DEF_RED,    // state having default reduction
        ERR_DEF,    // ERR_ITEM | DEF_RED
        REQ_DEF,    // REQ_TOKEN | DEF_RED
        ERR_REQ_DEF // ERR_ITEM | REQ_TOKEN | DEF_RED
    };    
    struct PI__     // Production Info
    {
        size_t d_nonTerm; // identification number of this production's
                            // non-terminal 
        size_t d_size;    // number of elements in this production 
    };

    struct SR__     // Shift Reduce info, see its description above
    {
        union
        {
            int _field_1_;      // initializer, allowing initializations 
                                // of the SR s_[] arrays
            int d_type;
            int d_token;
        };
        union
        {
            int _field_2_;

            int d_lastIdx;          // if negative, the state uses SHIFT
            int d_action;           // may be negative (reduce), 
                                    // postive (shift), or 0 (accept)
            size_t d_errorState;    // used with Error states
        };
    };

    // $insert staticdata
    
// Productions Info Records:
PI__ const s_productionInfo[] = 
{
     {0, 0}, // not used: reduction values are negative
     {361, 1}, // 1: begin ->  domain
     {361, 1}, // 2: begin ->  problem
     {362, 7}, // 3: domain (L_P) ->  L_P DEFINE L_P DOMAIN name R_P domain_option1
     {365, 1}, // 4: domain_option1 ->  domain_option2
     {365, 1}, // 5: domain_option1 ->  require_def
     {366, 1}, // 6: domain_option2 ->  domain_option3
     {366, 1}, // 7: domain_option2 ->  types_def
     {368, 1}, // 8: domain_option3 ->  domain_option4
     {368, 1}, // 9: domain_option3 ->  constants_def
     {370, 1}, // 10: domain_option4 ->  domain_option5
     {370, 1}, // 11: domain_option4 ->  predicates_def
     {372, 1}, // 12: domain_option5 ->  domain_option6
     {372, 1}, // 13: domain_option5 ->  functions_def
     {374, 1}, // 14: domain_option6 ->  domain_option7
     {374, 1}, // 15: domain_option6 ->  constraints_domain
     {376, 2}, // 16: domain_option7 (R_P) ->  list_structure_def R_P
     {364, 1}, // 17: name (NAME) ->  NAME
     {367, 4}, // 18: require_def (L_P) ->  L_P REQUIREMENTS nvList_require_key R_P
     {380, 1}, // 19: require_key (STRIPS) ->  STRIPS
     {380, 1}, // 20: require_key (TYPING) ->  TYPING
     {380, 1}, // 21: require_key (NEGATIVE_PRECONDITIONS) ->  NEGATIVE_PRECONDITIONS
     {380, 1}, // 22: require_key (DISJUNCTIVE_PRECONDITIONS) ->  DISJUNCTIVE_PRECONDITIONS
     {380, 1}, // 23: require_key (EQUALITY) ->  EQUALITY
     {380, 1}, // 24: require_key (EXISTENTIAL_PRECONDITIONS) ->  EXISTENTIAL_PRECONDITIONS
     {380, 1}, // 25: require_key (UNIVERSAL_PRECONDITIONS) ->  UNIVERSAL_PRECONDITIONS
     {380, 1}, // 26: require_key (QUANTIFIED_PRECONDITIONS) ->  QUANTIFIED_PRECONDITIONS
     {380, 1}, // 27: require_key (CONDITIONAL_EFFECTS) ->  CONDITIONAL_EFFECTS
     {380, 1}, // 28: require_key (FLUENTS) ->  FLUENTS
     {380, 1}, // 29: require_key (NUMERIC_FLUENTS) ->  NUMERIC_FLUENTS
     {380, 1}, // 30: require_key (ADL) ->  ADL
     {380, 1}, // 31: require_key (DURACTIVE_ACTIONS) ->  DURACTIVE_ACTIONS
     {380, 1}, // 32: require_key (DURATION_INEQUALITIES) ->  DURATION_INEQUALITIES
     {380, 1}, // 33: require_key (CONTINUOUS_EFFECTS) ->  CONTINUOUS_EFFECTS
     {380, 1}, // 34: require_key (DERIVED_PREDICATES) ->  DERIVED_PREDICATES
     {380, 1}, // 35: require_key (TIMED_INITIAL_LITERALS) ->  TIMED_INITIAL_LITERALS
     {380, 1}, // 36: require_key (PREFERENCES) ->  PREFERENCES
     {380, 1}, // 37: require_key (CONSTRAINTS) ->  CONSTRAINTS
     {380, 1}, // 38: require_key (ACTION_COSTS) ->  ACTION_COSTS
     {380, 1}, // 39: require_key (TEMPORALLY_EXTENDED) ->  TEMPORALLY_EXTENDED
     {369, 4}, // 40: types_def (L_P) ->  L_P TYPES typed_list_name R_P
     {371, 4}, // 41: constants_def (L_P) ->  L_P CONSTANTS typed_list_name R_P
     {373, 4}, // 42: predicates_def (L_P) ->  L_P PREDICATES nvList_atomic_formula_skeleton R_P
     {383, 4}, // 43: atomic_formula_skeleton (L_P) ->  L_P predicate typed_list_variable R_P
     {384, 1}, // 44: predicate ->  name
     {386, 2}, // 45: variable (Q_M) ->  Q_M name
     {387, 4}, // 46: atomic_function_skeleton (L_P) ->  L_P function_symbol typed_list_variable R_P
     {388, 1}, // 47: function_symbol ->  name
     {375, 4}, // 48: functions_def (L_P) ->  L_P FUNCTIONS function_typed_list_atomic_function_skeleton R_P
     {390, 1}, // 49: function_type (NUMBER) ->  NUMBER
     {390, 1}, // 50: function_type ->  type
     {377, 4}, // 51: constraints_domain (L_P) ->  L_P CONSTRAINTS con_GD R_P
     {393, 1}, // 52: structure_def ->  action_def
     {393, 1}, // 53: structure_def ->  durative_action_def
     {393, 1}, // 54: structure_def ->  te_durative_action_def
     {393, 1}, // 55: structure_def ->  derived_def
     {398, 1}, // 56: primitive_type ->  name
     {398, 1}, // 57: primitive_type (OBJECT) ->  OBJECT
     {391, 1}, // 58: type ->  primitive_type
     {391, 4}, // 59: type (L_P) ->  L_P EITHER nvList_primitive_type R_P
     {394, 9}, // 60: action_def (L_P) ->  L_P ACTION action_symbol PARAMETERS L_P typed_list_variable R_P action_def_body R_P
     {400, 1}, // 61: action_symbol ->  name
     {401, 1}, // 62: action_def_body ->  action_def_body_option1
     {402, 1}, // 63: action_def_body_option1 ->  action_def_body_option2
     {402, 3}, // 64: action_def_body_option1 (PRECONDITION) ->  PRECONDITION emptyOr_pre_GD action_def_body_option2
     {403, 0}, // 65: action_def_body_option2 ->  <empty>
     {403, 2}, // 66: action_def_body_option2 (EFFECT) ->  EFFECT emptyOr_effect
     {406, 1}, // 67: pre_GD ->  pref_GD
     {406, 4}, // 68: pre_GD (L_P) ->  L_P AND list_pre_GD R_P
     {406, 7}, // 69: pre_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P pre_GD R_P
     {407, 1}, // 70: pref_GD ->  GD
     {407, 3}, // 71: pref_GD (L_P) ->  L_P PREFERENCE pref_GD_option1
     {410, 2}, // 72: pref_GD_option1 (R_P) ->  GD R_P
     {410, 3}, // 73: pref_GD_option1 (R_P) ->  pref_name GD R_P
     {411, 1}, // 74: pref_name ->  name
     {409, 1}, // 75: GD ->  atomic_formula_term
     {409, 1}, // 76: GD ->  literal_term
     {409, 4}, // 77: GD (L_P) ->  L_P AND list_GD R_P
     {409, 4}, // 78: GD (L_P) ->  L_P OR list_GD R_P
     {409, 4}, // 79: GD (L_P) ->  L_P NOT GD R_P
     {409, 5}, // 80: GD (L_P) ->  L_P IMPLY GD GD R_P
     {409, 9}, // 81: GD (L_P) ->  L_P EXISTS L_P L_P typed_list_variable R_P R_P GD R_P
     {409, 9}, // 82: GD (L_P) ->  L_P FORALL L_P L_P typed_list_variable R_P R_P GD R_P
     {409, 1}, // 83: GD ->  f_comp
     {415, 5}, // 84: f_comp (L_P) ->  L_P binary_comp f_exp f_exp R_P
     {418, 1}, // 85: term ->  name
     {418, 1}, // 86: term ->  variable
     {418, 1}, // 87: term ->  function_term
     {419, 4}, // 88: function_term (L_P) ->  L_P function_symbol list_term R_P
     {417, 1}, // 89: f_exp ->  number
     {417, 5}, // 90: f_exp (L_P) ->  L_P binary_op f_exp f_exp R_P
     {417, 5}, // 91: f_exp (L_P) ->  L_P multi_op f_exp nvList_f_exp R_P
     {417, 4}, // 92: f_exp (L_P) ->  L_P MINUS f_exp R_P
     {417, 1}, // 93: f_exp ->  f_head
     {421, 1}, // 94: number (NUM) ->  NUM
     {425, 4}, // 95: f_head (L_P) ->  L_P function_symbol list_term R_P
     {425, 1}, // 96: f_head ->  function_symbol
     {422, 1}, // 97: binary_op ->  multi_op
     {422, 1}, // 98: binary_op (MINUS) ->  MINUS
     {422, 1}, // 99: binary_op (SLASH) ->  SLASH
     {423, 1}, // 100: multi_op (STAR) ->  STAR
     {423, 1}, // 101: multi_op (PLUS) ->  PLUS
     {416, 1}, // 102: binary_comp (GT) ->  GT
     {416, 1}, // 103: binary_comp (LT) ->  LT
     {416, 1}, // 104: binary_comp (EQ) ->  EQ
     {416, 1}, // 105: binary_comp (GOE) ->  GOE
     {416, 1}, // 106: binary_comp (LOE) ->  LOE
     {364, 2}, // 107: name ->  letter list_any_char
     {426, 1}, // 108: letter (LETTER) ->  LETTER
     {428, 1}, // 109: any_char ->  letter
     {428, 1}, // 110: any_char ->  digit
     {428, 1}, // 111: any_char (MINUS) ->  MINUS
     {428, 1}, // 112: any_char (UNSC) ->  UNSC
     {429, 1}, // 113: digit (DIGIT) ->  DIGIT
     {430, 2}, // 114: decimal (DOT) ->  DOT nvList_digit
     {432, 4}, // 115: effect (L_P) ->  L_P AND list_c_effect R_P
     {432, 1}, // 116: effect ->  c_effect
     {434, 7}, // 117: c_effect (L_P) ->  L_P FORALL L_P typed_list_variable R_P effect R_P
     {434, 5}, // 118: c_effect (L_P) ->  L_P WHEN GD cond_effect R_P
     {434, 1}, // 119: c_effect ->  p_effect
     {436, 4}, // 120: p_effect (L_P) ->  L_P NOT atomic_formula_term R_P
     {436, 1}, // 121: p_effect ->  atomic_formula_term
     {436, 4}, // 122: p_effect (L_P) ->  L_P assign_op f_head f_exp
     {436, 5}, // 123: p_effect (L_P) ->  L_P ASSIGN function_term term R_P
     {436, 5}, // 124: p_effect (L_P) ->  L_P ASSIGN function_term UNDEFINED R_P
     {435, 4}, // 125: cond_effect (L_P) ->  L_P AND list_p_effect R_P
     {435, 1}, // 126: cond_effect ->  p_effect
     {437, 1}, // 127: assign_op (ASSIGN) ->  ASSIGN
     {437, 1}, // 128: assign_op (SCALE_UP) ->  SCALE_UP
     {437, 1}, // 129: assign_op (SCALE_DOWN) ->  SCALE_DOWN
     {437, 1}, // 130: assign_op (INCREASE) ->  INCREASE
     {437, 1}, // 131: assign_op (DECREASE) ->  DECREASE
     {395, 9}, // 132: durative_action_def (L_P) ->  L_P DURATIVE_ACTION da_symbol PARAMETERS L_P typed_list_variable R_P da_def_body R_P
     {439, 1}, // 133: da_symbol ->  name
     {440, 6}, // 134: da_def_body (DURATION) ->  DURATION duration_constraint CONDITION emptyOr_da_GD EFFECT emptyOr_da_effect
     {444, 1}, // 135: da_GD ->  pref_timed_GD
     {444, 4}, // 136: da_GD (L_P) ->  L_P AND list_da_GD R_P
     {444, 7}, // 137: da_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P da_GD R_P
     {445, 1}, // 138: pref_timed_GD ->  timed_GD
     {445, 3}, // 139: pref_timed_GD (L_P) ->  L_P PREFERENCE pref_name_option1
     {448, 2}, // 140: pref_name_option1 (R_P) ->  timed_GD R_P
     {448, 3}, // 141: pref_name_option1 (R_P) ->  pref_name timed_GD R_P
     {447, 5}, // 142: timed_GD (L_P) ->  L_P AT time_specifier GD R_P
     {447, 5}, // 143: timed_GD (L_P) ->  L_P OVER interval GD R_P
     {449, 1}, // 144: time_specifier (START) ->  START
     {449, 1}, // 145: time_specifier (END) ->  END
     {450, 1}, // 146: interval (ALL) ->  ALL
     {441, 4}, // 147: duration_constraint (L_P) ->  L_P AND nvList_simple_duration_constraint R_P
     {441, 2}, // 148: duration_constraint (L_P) ->  L_P R_P
     {441, 1}, // 149: duration_constraint ->  simple_duration_constraint
     {452, 5}, // 150: simple_duration_constraint (L_P) ->  L_P d_op Q_M_DURATION d_value R_P
     {452, 5}, // 151: simple_duration_constraint (L_P) ->  L_P AT time_specifier simple_duration_constraint R_P
     {453, 1}, // 152: d_op (LOE) ->  LOE
     {453, 1}, // 153: d_op (GOE) ->  GOE
     {453, 1}, // 154: d_op (EQ) ->  EQ
     {454, 1}, // 155: d_value (NUMBER) ->  NUMBER
     {454, 1}, // 156: d_value ->  f_exp
     {455, 4}, // 157: da_effect (L_P) ->  L_P AND list_da_effect R_P
     {455, 1}, // 158: da_effect ->  timed_effect
     {455, 7}, // 159: da_effect (L_P) ->  L_P FORALL L_P typed_list_variable R_P da_effect R_P
     {455, 5}, // 160: da_effect (L_P) ->  L_P WHEN da_GD timed_effect R_P
     {456, 0}, // 161: list_da_effect ->  <empty>
     {456, 2}, // 162: list_da_effect ->  da_effect list_da_effect
     {457, 5}, // 163: timed_effect (L_P) ->  L_P AT time_specifier cond_effect R_P
     {457, 5}, // 164: timed_effect (L_P) ->  L_P AT time_specifier f_assign_da R_P
     {457, 5}, // 165: timed_effect (L_P) ->  L_P assign_op_t f_head f_exp_t R_P
     {458, 5}, // 166: f_assign_da (L_P) ->  L_P assign_op f_head f_exp_da R_P
     {461, 5}, // 167: f_exp_da (L_P) ->  L_P binary_op f_exp_da f_exp_da R_P
     {461, 5}, // 168: f_exp_da (L_P) ->  L_P multi_op f_exp_da nvList_f_exp_da R_P
     {461, 4}, // 169: f_exp_da (L_P) ->  L_P MINUS f_exp_da R_P
     {461, 1}, // 170: f_exp_da (Q_M_DURATION) ->  Q_M_DURATION
     {461, 1}, // 171: f_exp_da ->  f_exp
     {459, 1}, // 172: assign_op_t (INCREASE) ->  INCREASE
     {459, 1}, // 173: assign_op_t (DECREASE) ->  DECREASE
     {460, 5}, // 174: f_exp_t (L_P) ->  L_P STAR f_exp NS_T R_P
     {460, 5}, // 175: f_exp_t (L_P) ->  L_P STAR NS_T f_exp R_P
     {460, 1}, // 176: f_exp_t (NS_T) ->  NS_T
     {397, 5}, // 177: derived_def (L_P) ->  L_P DERIVED atomic_formula_skeleton GD R_P
     {363, 11}, // 178: problem (L_P) ->  L_P DEFINE L_P PROBLEM name R_P L_P DD_DOMAIN name R_P problem_option1
     {463, 1}, // 179: problem_option1 ->  problem_option2
     {463, 2}, // 180: problem_option1 ->  require_def problem_option2
     {464, 1}, // 181: problem_option2 ->  problem_option3
     {464, 2}, // 182: problem_option2 ->  object_declaration problem_option3
     {465, 3}, // 183: problem_option3 ->  init goal problem_option4
     {465, 4}, // 184: problem_option3 ->  init goal constraints_problem problem_option4
     {469, 1}, // 185: problem_option4 ->  problem_option5
     {469, 2}, // 186: problem_option4 ->  metric_spec problem_option5
     {471, 1}, // 187: problem_option5 (R_P) ->  R_P
     {471, 2}, // 188: problem_option5 (R_P) ->  length_spec R_P
     {466, 4}, // 189: object_declaration (L_P) ->  L_P OBJECTS typed_list_name R_P
     {467, 4}, // 190: init (L_P) ->  L_P INIT list_init_el R_P
     {475, 1}, // 191: init_el ->  literal_name
     {475, 5}, // 192: init_el (L_P) ->  L_P AT number literal_name R_P
     {475, 5}, // 193: init_el (L_P) ->  L_P EQ basic_function_term number R_P
     {475, 5}, // 194: init_el (L_P) ->  L_P EQ basic_function_term name R_P
     {477, 1}, // 195: basic_function_term ->  function_symbol
     {477, 4}, // 196: basic_function_term (L_P) ->  L_P function_symbol list_name R_P
     {468, 3}, // 197: goal (L_P) ->  L_P GOAL pre_GD
     {470, 4}, // 198: constraints_problem (L_P) ->  L_P CONSTRAINTS pref_con_GD R_P
     {479, 4}, // 199: pref_con_GD (L_P) ->  L_P AND list_pref_con_GD R_P
     {479, 7}, // 200: pref_con_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P pref_con_GD R_P
     {479, 3}, // 201: pref_con_GD (L_P) ->  L_P PREFERENCE pref_con_GD_option1
     {479, 1}, // 202: pref_con_GD ->  con_GD
     {481, 2}, // 203: pref_con_GD_option1 (R_P) ->  con_GD R_P
     {481, 3}, // 204: pref_con_GD_option1 (R_P) ->  pref_name con_GD R_P
     {392, 4}, // 205: con_GD (L_P) ->  L_P AND list_con_GD R_P
     {392, 7}, // 206: con_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P con_GD R_P
     {392, 5}, // 207: con_GD (L_P) ->  L_P AT END GD R_P
     {392, 4}, // 208: con_GD (L_P) ->  L_P ALWAYS con2_GD R_P
     {392, 4}, // 209: con_GD (L_P) ->  L_P SOMETIME con2_GD R_P
     {392, 5}, // 210: con_GD (L_P) ->  L_P WITHIN number con2_GD R_P
     {392, 5}, // 211: con_GD (L_P) ->  L_P AT_MOST_ONCE con2_GD con2_GD R_P
     {392, 5}, // 212: con_GD (L_P) ->  L_P SOMETIME_AFTER con2_GD con2_GD R_P
     {392, 5}, // 213: con_GD (L_P) ->  L_P SOMETIME_BEFORE con2_GD con2_GD R_P
     {392, 6}, // 214: con_GD (L_P) ->  L_P ALWAYS_WITHIN number con2_GD con2_GD R_P
     {392, 6}, // 215: con_GD (L_P) ->  L_P HOLD_DURING number number con2_GD R_P
     {392, 5}, // 216: con_GD (L_P) ->  L_P HOLD_AFTER number con2_GD R_P
     {483, 1}, // 217: con2_GD ->  con_GD
     {483, 1}, // 218: con2_GD ->  GD
     {472, 5}, // 219: metric_spec (L_P) ->  L_P METRIC optimization metric_f_exp R_P
     {484, 1}, // 220: optimization (MINIMIZE) ->  MINIMIZE
     {484, 1}, // 221: optimization (MAXIMIZE) ->  MAXIMIZE
     {485, 5}, // 222: metric_f_exp (L_P) ->  L_P binary_op metric_f_exp metric_f_exp R_P
     {485, 5}, // 223: metric_f_exp (L_P) ->  L_P multi_op metric_f_exp nvList_metric_f_exp R_P
     {485, 4}, // 224: metric_f_exp (L_P) ->  L_P MINUS metric_f_exp R_P
     {485, 1}, // 225: metric_f_exp ->  number
     {485, 4}, // 226: metric_f_exp (L_P) ->  L_P function_symbol list_name R_P
     {485, 1}, // 227: metric_f_exp ->  function_symbol
     {485, 1}, // 228: metric_f_exp (TOTAL_TIME) ->  TOTAL_TIME
     {485, 4}, // 229: metric_f_exp (L_P) ->  L_P IS_VIOLATED pref_name R_P
     {473, 3}, // 230: length_spec (L_P) ->  L_P LENGTH length_spec_option1
     {487, 1}, // 231: length_spec_option1 ->  length_spec_option2
     {487, 5}, // 232: length_spec_option1 (L_P) ->  L_P SERIAL integer R_P length_spec_option2
     {488, 1}, // 233: length_spec_option2 (R_P) ->  R_P
     {488, 5}, // 234: length_spec_option2 (L_P) ->  L_P PARALLEL integer R_P R_P
     {489, 1}, // 235: integer (NUM) ->  NUM
     {396, 9}, // 236: te_durative_action_def (L_P) ->  L_P DURATIVE_ACTION da_symbol PARAMETERS L_P typed_list_variable R_P te_da_def_body R_P
     {490, 34}, // 237: te_da_def_body (DURATION) ->  DURATION duration_constraint TIMEPOINTS L_P START END list_te_time_specifier R_P TIMEALIASES L_P ALL L_B START END L_B list_te_time_interval R_P TIMECONSTRAINTS L_P L_P EQ L_P MINUS END START R_P Q_M_DURATION R_P list_te_time_constraints R_P CONDITION emptyOr_da_GD EFFECT emptyOr_da_effect
     {494, 1}, // 238: te_time_specifier ->  time_specifier
     {494, 1}, // 239: te_time_specifier ->  name
     {495, 5}, // 240: te_time_interval (L_B) ->  interval L_B te_time_specifier te_time_specifier L_B
     {496, 5}, // 241: te_time_constraints (L_P) ->  L_P binary_comp te_time_specifier te_time_specifier R_P
     {389, 0}, // 242: function_typed_list_atomic_function_skeleton ->  <empty>
     {389, 4}, // 243: function_typed_list_atomic_function_skeleton (MINUS) ->  nvList_atomic_function_skeleton MINUS function_type function_typed_list_atomic_function_skeleton
     {389, 1}, // 244: function_typed_list_atomic_function_skeleton ->  nvList_atomic_function_skeleton
     {381, 1}, // 245: typed_list_name ->  list_name
     {381, 4}, // 246: typed_list_name (MINUS) ->  nvList_name MINUS type typed_list_name
     {385, 1}, // 247: typed_list_variable ->  list_variable
     {385, 4}, // 248: typed_list_variable (MINUS) ->  nvList_variable MINUS type typed_list_variable
     {404, 2}, // 249: emptyOr_pre_GD (L_P) ->  L_P R_P
     {404, 1}, // 250: emptyOr_pre_GD ->  pre_GD
     {405, 2}, // 251: emptyOr_effect (L_P) ->  L_P R_P
     {405, 1}, // 252: emptyOr_effect ->  effect
     {442, 2}, // 253: emptyOr_da_GD (L_P) ->  L_P R_P
     {442, 1}, // 254: emptyOr_da_GD ->  da_GD
     {443, 2}, // 255: emptyOr_da_effect (L_P) ->  L_P R_P
     {443, 1}, // 256: emptyOr_da_effect ->  da_effect
     {413, 1}, // 257: literal_term ->  atomic_formula_term
     {413, 4}, // 258: literal_term (L_P) ->  L_P NOT atomic_formula_term R_P
     {476, 1}, // 259: literal_name ->  atomic_formula_name
     {476, 4}, // 260: literal_name (L_P) ->  L_P NOT atomic_formula_name R_P
     {412, 4}, // 261: atomic_formula_term (L_P) ->  L_P predicate list_term R_P
     {412, 5}, // 262: atomic_formula_term (L_P) ->  L_P EQ term term R_P
     {501, 4}, // 263: atomic_formula_name (L_P) ->  L_P predicate list_name R_P
     {501, 5}, // 264: atomic_formula_name (L_P) ->  L_P EQ name name R_P
     {379, 2}, // 265: nvList_require_key ->  require_key list_require_key
     {498, 2}, // 266: nvList_name ->  name list_name
     {382, 2}, // 267: nvList_atomic_formula_skeleton ->  atomic_formula_skeleton list_atomic_formula_skeleton
     {500, 2}, // 268: nvList_variable ->  variable list_variable
     {497, 2}, // 269: nvList_atomic_function_skeleton ->  atomic_function_skeleton list_atomic_function_skeleton
     {399, 2}, // 270: nvList_primitive_type ->  primitive_type list_primitive_type
     {424, 2}, // 271: nvList_f_exp ->  f_exp list_f_exp
     {431, 2}, // 272: nvList_digit ->  digit list_digit
     {508, 2}, // 273: nvList_te_time_specifier ->  te_time_specifier list_te_time_specifier
     {509, 2}, // 274: nvList_te_time_interval ->  te_time_interval list_te_time_interval
     {451, 2}, // 275: nvList_simple_duration_constraint ->  simple_duration_constraint list_simple_duration_constraint
     {462, 2}, // 276: nvList_f_exp_da ->  f_exp_da list_f_exp_da
     {486, 2}, // 277: nvList_metric_f_exp ->  metric_f_exp list_metric_f_exp
     {378, 0}, // 278: list_structure_def ->  <empty>
     {378, 2}, // 279: list_structure_def ->  structure_def list_structure_def
     {502, 0}, // 280: list_require_key ->  <empty>
     {502, 2}, // 281: list_require_key ->  require_key list_require_key
     {478, 0}, // 282: list_name ->  <empty>
     {478, 2}, // 283: list_name ->  name list_name
     {503, 0}, // 284: list_atomic_formula_skeleton ->  <empty>
     {503, 2}, // 285: list_atomic_formula_skeleton ->  atomic_formula_skeleton list_atomic_formula_skeleton
     {499, 0}, // 286: list_variable ->  <empty>
     {499, 2}, // 287: list_variable ->  variable list_variable
     {504, 0}, // 288: list_atomic_function_skeleton ->  <empty>
     {504, 2}, // 289: list_atomic_function_skeleton ->  atomic_function_skeleton list_atomic_function_skeleton
     {505, 0}, // 290: list_primitive_type ->  <empty>
     {505, 2}, // 291: list_primitive_type ->  primitive_type list_primitive_type
     {408, 2}, // 292: list_pre_GD ->  pre_GD list_pre_GD
     {420, 0}, // 293: list_term ->  <empty>
     {420, 2}, // 294: list_term ->  term list_term
     {414, 0}, // 295: list_GD ->  <empty>
     {414, 2}, // 296: list_GD ->  GD list_GD
     {506, 0}, // 297: list_f_exp ->  <empty>
     {506, 2}, // 298: list_f_exp ->  f_exp list_f_exp
     {427, 0}, // 299: list_any_char ->  <empty>
     {427, 2}, // 300: list_any_char ->  any_char list_any_char
     {507, 0}, // 301: list_digit ->  <empty>
     {507, 2}, // 302: list_digit ->  digit list_digit
     {433, 0}, // 303: list_c_effect ->  <empty>
     {433, 2}, // 304: list_c_effect ->  c_effect list_c_effect
     {438, 0}, // 305: list_p_effect ->  <empty>
     {438, 2}, // 306: list_p_effect ->  p_effect list_p_effect
     {491, 0}, // 307: list_te_time_specifier ->  <empty>
     {491, 2}, // 308: list_te_time_specifier ->  te_time_specifier list_te_time_specifier
     {492, 0}, // 309: list_te_time_interval ->  <empty>
     {492, 2}, // 310: list_te_time_interval ->  te_time_interval list_te_time_interval
     {493, 0}, // 311: list_te_time_constraints ->  <empty>
     {493, 2}, // 312: list_te_time_constraints ->  te_time_constraints list_te_time_constraints
     {446, 0}, // 313: list_da_GD ->  <empty>
     {446, 2}, // 314: list_da_GD ->  da_GD list_da_GD
     {510, 0}, // 315: list_simple_duration_constraint ->  <empty>
     {510, 2}, // 316: list_simple_duration_constraint ->  simple_duration_constraint list_simple_duration_constraint
     {511, 0}, // 317: list_f_exp_da ->  <empty>
     {511, 2}, // 318: list_f_exp_da ->  f_exp_da list_f_exp_da
     {474, 0}, // 319: list_init_el ->  <empty>
     {474, 2}, // 320: list_init_el ->  init_el list_init_el
     {480, 0}, // 321: list_pref_con_GD ->  <empty>
     {480, 2}, // 322: list_pref_con_GD ->  pref_con_GD list_pref_con_GD
     {482, 0}, // 323: list_con_GD ->  <empty>
     {482, 2}, // 324: list_con_GD ->  con_GD list_con_GD
     {512, 0}, // 325: list_metric_f_exp ->  <empty>
     {512, 2}, // 326: list_metric_f_exp ->  metric_f_exp list_metric_f_exp
     {513, 1}, // 327: begin_$ ->  begin
};

// State info and SR__ transitions for each state.


SR__ s_0[] =
{
    { { REQ_TOKEN}, { 5} },           
    { {       361}, { 1} }, // begin  
    { {       362}, { 2} }, // domain 
    { {       363}, { 3} }, // problem
    { {       257}, { 4} }, // L_P    
    { {         0}, { 0} },           
};

SR__ s_1[] =
{
    { { REQ_TOKEN}, {            2} }, 
    { {     _EOF_}, { PARSE_ACCEPT} }, 
    { {         0}, {            0} }, 
};

SR__ s_2[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -1} }, 
};

SR__ s_3[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -2} }, 
};

SR__ s_4[] =
{
    { { REQ_TOKEN}, { 2} },          
    { {       276}, { 5} }, // DEFINE
    { {         0}, { 0} },          
};

SR__ s_5[] =
{
    { { REQ_TOKEN}, { 2} },       
    { {       257}, { 6} }, // L_P
    { {         0}, { 0} },       
};

SR__ s_6[] =
{
    { { REQ_TOKEN}, { 3} },           
    { {       277}, { 7} }, // DOMAIN 
    { {       335}, { 8} }, // PROBLEM
    { {         0}, { 0} },           
};

SR__ s_7[] =
{
    { { REQ_TOKEN}, {  5} },          
    { {       364}, {  9} }, // name  
    { {       360}, { 10} }, // NAME  
    { {       426}, { 11} }, // letter
    { {       273}, { 12} }, // LETTER
    { {         0}, {  0} },          
};

SR__ s_8[] =
{
    { { REQ_TOKEN}, {  5} },          
    { {       364}, { 13} }, // name  
    { {       360}, { 10} }, // NAME  
    { {       426}, { 11} }, // letter
    { {       273}, { 12} }, // LETTER
    { {         0}, {  0} },          
};

SR__ s_9[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       258}, { 14} }, // R_P
    { {         0}, {  0} },       
};

SR__ s_10[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -17} }, 
};

SR__ s_11[] =
{
    { { REQ_DEF}, {    9} },                 
    { {     427}, {   15} }, // list_any_char
    { {     428}, {   16} }, // any_char     
    { {     426}, {   17} }, // letter       
    { {     429}, {   18} }, // digit        
    { {     263}, {   19} }, // MINUS        
    { {     271}, {   20} }, // UNSC         
    { {     273}, {   12} }, // LETTER       
    { {     274}, {   21} }, // DIGIT        
    { {       0}, { -299} },                 
};

SR__ s_12[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -108} }, 
};

SR__ s_13[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       258}, { 22} }, // R_P
    { {         0}, {  0} },       
};

SR__ s_14[] =
{
    { { REQ_DEF}, {   21} },                          
    { {     365}, {   23} }, // domain_option1        
    { {     366}, {   24} }, // domain_option2        
    { {     367}, {   25} }, // require_def           
    { {     368}, {   26} }, // domain_option3        
    { {     369}, {   27} }, // types_def             
    { {     257}, {   28} }, // L_P                   
    { {     370}, {   29} }, // domain_option4        
    { {     371}, {   30} }, // constants_def         
    { {     372}, {   31} }, // domain_option5        
    { {     373}, {   32} }, // predicates_def        
    { {     374}, {   33} }, // domain_option6        
    { {     375}, {   34} }, // functions_def         
    { {     376}, {   35} }, // domain_option7        
    { {     377}, {   36} }, // constraints_domain    
    { {     378}, {   37} }, // list_structure_def    
    { {     393}, {   38} }, // structure_def         
    { {     394}, {   39} }, // action_def            
    { {     395}, {   40} }, // durative_action_def   
    { {     396}, {   41} }, // te_durative_action_def
    { {     397}, {   42} }, // derived_def           
    { {       0}, { -278} },                          
};

SR__ s_15[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -107} }, 
};

SR__ s_16[] =
{
    { { REQ_DEF}, {    9} },                 
    { {     427}, {   43} }, // list_any_char
    { {     428}, {   16} }, // any_char     
    { {     426}, {   17} }, // letter       
    { {     429}, {   18} }, // digit        
    { {     263}, {   19} }, // MINUS        
    { {     271}, {   20} }, // UNSC         
    { {     273}, {   12} }, // LETTER       
    { {     274}, {   21} }, // DIGIT        
    { {       0}, { -299} },                 
};

SR__ s_17[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -109} }, 
};

SR__ s_18[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -110} }, 
};

SR__ s_19[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -111} }, 
};

SR__ s_20[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -112} }, 
};

SR__ s_21[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -113} }, 
};

SR__ s_22[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       257}, { 44} }, // L_P
    { {         0}, {  0} },       
};

SR__ s_23[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -3} }, 
};

SR__ s_24[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -4} }, 
};

SR__ s_25[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -5} }, 
};

SR__ s_26[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -6} }, 
};

SR__ s_27[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -7} }, 
};

SR__ s_28[] =
{
    { { REQ_TOKEN}, { 10} },                   
    { {       278}, { 45} }, // REQUIREMENTS   
    { {       300}, { 46} }, // TYPES          
    { {       301}, { 47} }, // CONSTANTS      
    { {       302}, { 48} }, // PREDICATES     
    { {       303}, { 49} }, // FUNCTIONS      
    { {       297}, { 50} }, // CONSTRAINTS    
    { {       307}, { 51} }, // ACTION         
    { {       325}, { 52} }, // DURATIVE_ACTION
    { {       334}, { 53} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_29[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -8} }, 
};

SR__ s_30[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -9} }, 
};

SR__ s_31[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -10} }, 
};

SR__ s_32[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -11} }, 
};

SR__ s_33[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -12} }, 
};

SR__ s_34[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -13} }, 
};

SR__ s_35[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -14} }, 
};

SR__ s_36[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -15} }, 
};

SR__ s_37[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       258}, { 54} }, // R_P
    { {         0}, {  0} },       
};

SR__ s_38[] =
{
    { { REQ_DEF}, {    8} },                          
    { {     378}, {   55} }, // list_structure_def    
    { {     393}, {   38} }, // structure_def         
    { {     394}, {   39} }, // action_def            
    { {     395}, {   40} }, // durative_action_def   
    { {     396}, {   41} }, // te_durative_action_def
    { {     397}, {   42} }, // derived_def           
    { {     257}, {   56} }, // L_P                   
    { {       0}, { -278} },                          
};

SR__ s_39[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -52} }, 
};

SR__ s_40[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -53} }, 
};

SR__ s_41[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -54} }, 
};

SR__ s_42[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -55} }, 
};

SR__ s_43[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -300} }, 
};

SR__ s_44[] =
{
    { { REQ_TOKEN}, {  2} },             
    { {       336}, { 57} }, // DD_DOMAIN
    { {         0}, {  0} },             
};

SR__ s_45[] =
{
    { { REQ_TOKEN}, { 24} },                             
    { {       379}, { 58} }, // nvList_require_key       
    { {       380}, { 59} }, // require_key              
    { {       279}, { 60} }, // STRIPS                   
    { {       280}, { 61} }, // TYPING                   
    { {       281}, { 62} }, // NEGATIVE_PRECONDITIONS   
    { {       282}, { 63} }, // DISJUNCTIVE_PRECONDITIONS
    { {       283}, { 64} }, // EQUALITY                 
    { {       284}, { 65} }, // EXISTENTIAL_PRECONDITIONS
    { {       285}, { 66} }, // UNIVERSAL_PRECONDITIONS  
    { {       286}, { 67} }, // QUANTIFIED_PRECONDITIONS 
    { {       287}, { 68} }, // CONDITIONAL_EFFECTS      
    { {       288}, { 69} }, // FLUENTS                  
    { {       289}, { 70} }, // NUMERIC_FLUENTS          
    { {       290}, { 71} }, // ADL                      
    { {       291}, { 72} }, // DURACTIVE_ACTIONS        
    { {       292}, { 73} }, // DURATION_INEQUALITIES    
    { {       293}, { 74} }, // CONTINUOUS_EFFECTS       
    { {       294}, { 75} }, // DERIVED_PREDICATES       
    { {       295}, { 76} }, // TIMED_INITIAL_LITERALS   
    { {       296}, { 77} }, // PREFERENCES              
    { {       297}, { 78} }, // CONSTRAINTS              
    { {       298}, { 79} }, // ACTION_COSTS             
    { {       299}, { 80} }, // TEMPORALLY_EXTENDED      
    { {         0}, {  0} },                             
};

SR__ s_46[] =
{
    { { REQ_DEF}, {    8} },                   
    { {     381}, {   81} }, // typed_list_name
    { {     478}, {   82} }, // list_name      
    { {     498}, {   83} }, // nvList_name    
    { {     364}, {   84} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -282} },                   
};

SR__ s_47[] =
{
    { { REQ_DEF}, {    8} },                   
    { {     381}, {   85} }, // typed_list_name
    { {     478}, {   82} }, // list_name      
    { {     498}, {   83} }, // nvList_name    
    { {     364}, {   84} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -282} },                   
};

SR__ s_48[] =
{
    { { REQ_TOKEN}, {  4} },                                  
    { {       382}, { 86} }, // nvList_atomic_formula_skeleton
    { {       383}, { 87} }, // atomic_formula_skeleton       
    { {       257}, { 88} }, // L_P                           
    { {         0}, {  0} },                                  
};

SR__ s_49[] =
{
    { { REQ_DEF}, {    5} },                                                
    { {     389}, {   89} }, // function_typed_list_atomic_function_skeleton
    { {     497}, {   90} }, // nvList_atomic_function_skeleton             
    { {     387}, {   91} }, // atomic_function_skeleton                    
    { {     257}, {   92} }, // L_P                                         
    { {       0}, { -242} },                                                
};

SR__ s_50[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       392}, { 93} }, // con_GD
    { {       257}, { 94} }, // L_P   
    { {         0}, {  0} },          
};

SR__ s_51[] =
{
    { { REQ_TOKEN}, {  6} },                 
    { {       400}, { 95} }, // action_symbol
    { {       364}, { 96} }, // name         
    { {       360}, { 10} }, // NAME         
    { {       426}, { 11} }, // letter       
    { {       273}, { 12} }, // LETTER       
    { {         0}, {  0} },                 
};

SR__ s_52[] =
{
    { { REQ_TOKEN}, {  6} },             
    { {       439}, { 97} }, // da_symbol
    { {       364}, { 98} }, // name     
    { {       360}, { 10} }, // NAME     
    { {       426}, { 11} }, // letter   
    { {       273}, { 12} }, // LETTER   
    { {         0}, {  0} },             
};

SR__ s_53[] =
{
    { { REQ_TOKEN}, {  3} },                           
    { {       383}, { 99} }, // atomic_formula_skeleton
    { {       257}, { 88} }, // L_P                    
    { {         0}, {  0} },                           
};

SR__ s_54[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -16} }, 
};

SR__ s_55[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -279} }, 
};

SR__ s_56[] =
{
    { { REQ_TOKEN}, {  4} },                   
    { {       307}, { 51} }, // ACTION         
    { {       325}, { 52} }, // DURATIVE_ACTION
    { {       334}, { 53} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_57[] =
{
    { { REQ_TOKEN}, {   5} },          
    { {       364}, { 100} }, // name  
    { {       360}, {  10} }, // NAME  
    { {       426}, {  11} }, // letter
    { {       273}, {  12} }, // LETTER
    { {         0}, {   0} },          
};

SR__ s_58[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 101} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_59[] =
{
    { { REQ_DEF}, {   24} },                             
    { {     502}, {  102} }, // list_require_key         
    { {     380}, {  103} }, // require_key              
    { {     279}, {   60} }, // STRIPS                   
    { {     280}, {   61} }, // TYPING                   
    { {     281}, {   62} }, // NEGATIVE_PRECONDITIONS   
    { {     282}, {   63} }, // DISJUNCTIVE_PRECONDITIONS
    { {     283}, {   64} }, // EQUALITY                 
    { {     284}, {   65} }, // EXISTENTIAL_PRECONDITIONS
    { {     285}, {   66} }, // UNIVERSAL_PRECONDITIONS  
    { {     286}, {   67} }, // QUANTIFIED_PRECONDITIONS 
    { {     287}, {   68} }, // CONDITIONAL_EFFECTS      
    { {     288}, {   69} }, // FLUENTS                  
    { {     289}, {   70} }, // NUMERIC_FLUENTS          
    { {     290}, {   71} }, // ADL                      
    { {     291}, {   72} }, // DURACTIVE_ACTIONS        
    { {     292}, {   73} }, // DURATION_INEQUALITIES    
    { {     293}, {   74} }, // CONTINUOUS_EFFECTS       
    { {     294}, {   75} }, // DERIVED_PREDICATES       
    { {     295}, {   76} }, // TIMED_INITIAL_LITERALS   
    { {     296}, {   77} }, // PREFERENCES              
    { {     297}, {   78} }, // CONSTRAINTS              
    { {     298}, {   79} }, // ACTION_COSTS             
    { {     299}, {   80} }, // TEMPORALLY_EXTENDED      
    { {       0}, { -280} },                             
};

SR__ s_60[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -19} }, 
};

SR__ s_61[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -20} }, 
};

SR__ s_62[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -21} }, 
};

SR__ s_63[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -22} }, 
};

SR__ s_64[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -23} }, 
};

SR__ s_65[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -24} }, 
};

SR__ s_66[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -25} }, 
};

SR__ s_67[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -26} }, 
};

SR__ s_68[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -27} }, 
};

SR__ s_69[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -28} }, 
};

SR__ s_70[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -29} }, 
};

SR__ s_71[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -30} }, 
};

SR__ s_72[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -31} }, 
};

SR__ s_73[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -32} }, 
};

SR__ s_74[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -33} }, 
};

SR__ s_75[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -34} }, 
};

SR__ s_76[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -35} }, 
};

SR__ s_77[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -36} }, 
};

SR__ s_78[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -37} }, 
};

SR__ s_79[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -38} }, 
};

SR__ s_80[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -39} }, 
};

SR__ s_81[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 104} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_82[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -245} }, 
};

SR__ s_83[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       263}, { 105} }, // MINUS
    { {         0}, {   0} },         
};

SR__ s_84[] =
{
    { { REQ_DEF}, {    6} },             
    { {     478}, {  106} }, // list_name
    { {     364}, {  107} }, // name     
    { {     360}, {   10} }, // NAME     
    { {     426}, {   11} }, // letter   
    { {     273}, {   12} }, // LETTER   
    { {       0}, { -282} },             
};

SR__ s_85[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 108} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_86[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 109} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_87[] =
{
    { { REQ_DEF}, {    4} },                                
    { {     503}, {  110} }, // list_atomic_formula_skeleton
    { {     383}, {  111} }, // atomic_formula_skeleton     
    { {     257}, {   88} }, // L_P                         
    { {       0}, { -284} },                                
};

SR__ s_88[] =
{
    { { REQ_TOKEN}, {   6} },             
    { {       384}, { 112} }, // predicate
    { {       364}, { 113} }, // name     
    { {       360}, {  10} }, // NAME     
    { {       426}, {  11} }, // letter   
    { {       273}, {  12} }, // LETTER   
    { {         0}, {   0} },             
};

SR__ s_89[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 114} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_90[] =
{
    { { REQ_DEF}, {    2} },         
    { {     263}, {  115} }, // MINUS
    { {       0}, { -244} },         
};

SR__ s_91[] =
{
    { { REQ_DEF}, {    4} },                                 
    { {     504}, {  116} }, // list_atomic_function_skeleton
    { {     387}, {  117} }, // atomic_function_skeleton     
    { {     257}, {   92} }, // L_P                          
    { {       0}, { -288} },                                 
};

SR__ s_92[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       388}, { 118} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_93[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 120} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_94[] =
{
    { { REQ_TOKEN}, {  13} },                   
    { {       311}, { 121} }, // AND            
    { {       312}, { 122} }, // FORALL         
    { {       328}, { 123} }, // AT             
    { {       340}, { 124} }, // ALWAYS         
    { {       341}, { 125} }, // SOMETIME       
    { {       342}, { 126} }, // WITHIN         
    { {       343}, { 127} }, // AT_MOST_ONCE   
    { {       344}, { 128} }, // SOMETIME_AFTER 
    { {       345}, { 129} }, // SOMETIME_BEFORE
    { {       346}, { 130} }, // ALWAYS_WITHIN  
    { {       347}, { 131} }, // HOLD_DURING    
    { {       348}, { 132} }, // HOLD_AFTER     
    { {         0}, {   0} },                   
};

SR__ s_95[] =
{
    { { REQ_TOKEN}, {   2} },              
    { {       308}, { 133} }, // PARAMETERS
    { {         0}, {   0} },              
};

SR__ s_96[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -61} }, 
};

SR__ s_97[] =
{
    { { REQ_TOKEN}, {   2} },              
    { {       308}, { 134} }, // PARAMETERS
    { {         0}, {   0} },              
};

SR__ s_98[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -133} }, 
};

SR__ s_99[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 135} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_100[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 140} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_101[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -18} }, 
};

SR__ s_102[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -265} }, 
};

SR__ s_103[] =
{
    { { REQ_DEF}, {   24} },                             
    { {     502}, {  141} }, // list_require_key         
    { {     380}, {  103} }, // require_key              
    { {     279}, {   60} }, // STRIPS                   
    { {     280}, {   61} }, // TYPING                   
    { {     281}, {   62} }, // NEGATIVE_PRECONDITIONS   
    { {     282}, {   63} }, // DISJUNCTIVE_PRECONDITIONS
    { {     283}, {   64} }, // EQUALITY                 
    { {     284}, {   65} }, // EXISTENTIAL_PRECONDITIONS
    { {     285}, {   66} }, // UNIVERSAL_PRECONDITIONS  
    { {     286}, {   67} }, // QUANTIFIED_PRECONDITIONS 
    { {     287}, {   68} }, // CONDITIONAL_EFFECTS      
    { {     288}, {   69} }, // FLUENTS                  
    { {     289}, {   70} }, // NUMERIC_FLUENTS          
    { {     290}, {   71} }, // ADL                      
    { {     291}, {   72} }, // DURACTIVE_ACTIONS        
    { {     292}, {   73} }, // DURATION_INEQUALITIES    
    { {     293}, {   74} }, // CONTINUOUS_EFFECTS       
    { {     294}, {   75} }, // DERIVED_PREDICATES       
    { {     295}, {   76} }, // TIMED_INITIAL_LITERALS   
    { {     296}, {   77} }, // PREFERENCES              
    { {     297}, {   78} }, // CONSTRAINTS              
    { {     298}, {   79} }, // ACTION_COSTS             
    { {     299}, {   80} }, // TEMPORALLY_EXTENDED      
    { {       0}, { -280} },                             
};

SR__ s_104[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -40} }, 
};

SR__ s_105[] =
{
    { { REQ_TOKEN}, {   9} },                  
    { {       391}, { 142} }, // type          
    { {       398}, { 143} }, // primitive_type
    { {       257}, { 144} }, // L_P           
    { {       364}, { 145} }, // name          
    { {       305}, { 146} }, // OBJECT        
    { {       360}, {  10} }, // NAME          
    { {       426}, {  11} }, // letter        
    { {       273}, {  12} }, // LETTER        
    { {         0}, {   0} },                  
};

SR__ s_106[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, { -283} }, // R_P
    { {       0}, { -266} },       
};

SR__ s_107[] =
{
    { { REQ_DEF}, {    6} },             
    { {     478}, {  147} }, // list_name
    { {     364}, {  107} }, // name     
    { {     360}, {   10} }, // NAME     
    { {     426}, {   11} }, // letter   
    { {     273}, {   12} }, // LETTER   
    { {       0}, { -282} },             
};

SR__ s_108[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -41} }, 
};

SR__ s_109[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -42} }, 
};

SR__ s_110[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -267} }, 
};

SR__ s_111[] =
{
    { { REQ_DEF}, {    4} },                                
    { {     503}, {  148} }, // list_atomic_formula_skeleton
    { {     383}, {  111} }, // atomic_formula_skeleton     
    { {     257}, {   88} }, // L_P                         
    { {       0}, { -284} },                                
};

SR__ s_112[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  149} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_113[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -44} }, 
};

SR__ s_114[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -48} }, 
};

SR__ s_115[] =
{
    { { REQ_TOKEN}, {  11} },                  
    { {       390}, { 154} }, // function_type 
    { {       275}, { 155} }, // NUMBER        
    { {       391}, { 156} }, // type          
    { {       398}, { 143} }, // primitive_type
    { {       257}, { 144} }, // L_P           
    { {       364}, { 145} }, // name          
    { {       305}, { 146} }, // OBJECT        
    { {       360}, {  10} }, // NAME          
    { {       426}, {  11} }, // letter        
    { {       273}, {  12} }, // LETTER        
    { {         0}, {   0} },                  
};

SR__ s_116[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -269} }, 
};

SR__ s_117[] =
{
    { { REQ_DEF}, {    4} },                                 
    { {     504}, {  157} }, // list_atomic_function_skeleton
    { {     387}, {  117} }, // atomic_function_skeleton     
    { {     257}, {   92} }, // L_P                          
    { {       0}, { -288} },                                 
};

SR__ s_118[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  158} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_119[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -47} }, 
};

SR__ s_120[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -51} }, 
};

SR__ s_121[] =
{
    { { REQ_DEF}, {    4} },               
    { {     482}, {  159} }, // list_con_GD
    { {     392}, {  160} }, // con_GD     
    { {     257}, {   94} }, // L_P        
    { {       0}, { -323} },               
};

SR__ s_122[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 161} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_123[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       331}, { 162} }, // END
    { {         0}, {   0} },       
};

SR__ s_124[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 163} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_125[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 167} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_126[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       421}, { 168} }, // number
    { {       304}, { 169} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_127[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 170} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_128[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 171} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_129[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 172} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_130[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       421}, { 173} }, // number
    { {       304}, { 169} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_131[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       421}, { 174} }, // number
    { {       304}, { 169} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_132[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       421}, { 175} }, // number
    { {       304}, { 169} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_133[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 176} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_134[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 177} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_135[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 178} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_136[] =
{
    { { REQ_DEF}, {   1} }, 
    { {       0}, { -75} }, 
};

SR__ s_137[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -76} }, 
};

SR__ s_138[] =
{
    { { REQ_TOKEN}, {  18} },               
    { {       311}, { 179} }, // AND        
    { {       314}, { 180} }, // OR         
    { {       315}, { 181} }, // NOT        
    { {       316}, { 182} }, // IMPLY      
    { {       317}, { 183} }, // EXISTS     
    { {       312}, { 184} }, // FORALL     
    { {       384}, { 185} }, // predicate  
    { {       262}, { 186} }, // EQ         
    { {       416}, { 187} }, // binary_comp
    { {       364}, { 113} }, // name       
    { {       267}, { 188} }, // GT         
    { {       268}, { 189} }, // LT         
    { {       269}, { 190} }, // GOE        
    { {       270}, { 191} }, // LOE        
    { {       360}, {  10} }, // NAME       
    { {       426}, {  11} }, // letter     
    { {       273}, {  12} }, // LETTER     
    { {         0}, {   0} },               
};

SR__ s_139[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -83} }, 
};

SR__ s_140[] =
{
    { { REQ_TOKEN}, {   8} },                      
    { {       463}, { 192} }, // problem_option1   
    { {       464}, { 193} }, // problem_option2   
    { {       367}, { 194} }, // require_def       
    { {       465}, { 195} }, // problem_option3   
    { {       466}, { 196} }, // object_declaration
    { {       257}, { 197} }, // L_P               
    { {       467}, { 198} }, // init              
    { {         0}, {   0} },                      
};

SR__ s_141[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -281} }, 
};

SR__ s_142[] =
{
    { { REQ_DEF}, {    8} },                   
    { {     381}, {  199} }, // typed_list_name
    { {     478}, {   82} }, // list_name      
    { {     498}, {   83} }, // nvList_name    
    { {     364}, {   84} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -282} },                   
};

SR__ s_143[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -58} }, 
};

SR__ s_144[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       306}, { 200} }, // EITHER
    { {         0}, {   0} },          
};

SR__ s_145[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -56} }, 
};

SR__ s_146[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -57} }, 
};

SR__ s_147[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -283} }, 
};

SR__ s_148[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -285} }, 
};

SR__ s_149[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 201} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_150[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -247} }, 
};

SR__ s_151[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       263}, { 202} }, // MINUS
    { {         0}, {   0} },         
};

SR__ s_152[] =
{
    { { REQ_DEF}, {    4} },                 
    { {     499}, {  203} }, // list_variable
    { {     386}, {  204} }, // variable     
    { {     260}, {  153} }, // Q_M          
    { {       0}, { -286} },                 
};

SR__ s_153[] =
{
    { { REQ_TOKEN}, {   5} },          
    { {       364}, { 205} }, // name  
    { {       360}, {  10} }, // NAME  
    { {       426}, {  11} }, // letter
    { {       273}, {  12} }, // LETTER
    { {         0}, {   0} },          
};

SR__ s_154[] =
{
    { { REQ_DEF}, {    5} },                                                
    { {     389}, {  206} }, // function_typed_list_atomic_function_skeleton
    { {     497}, {   90} }, // nvList_atomic_function_skeleton             
    { {     387}, {   91} }, // atomic_function_skeleton                    
    { {     257}, {   92} }, // L_P                                         
    { {       0}, { -242} },                                                
};

SR__ s_155[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -49} }, 
};

SR__ s_156[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -50} }, 
};

SR__ s_157[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -289} }, 
};

SR__ s_158[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 207} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_159[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 208} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_160[] =
{
    { { REQ_DEF}, {    4} },               
    { {     482}, {  209} }, // list_con_GD
    { {     392}, {  160} }, // con_GD     
    { {     257}, {   94} }, // L_P        
    { {       0}, { -323} },               
};

SR__ s_161[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  210} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_162[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 211} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_163[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 212} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_164[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -217} }, 
};

SR__ s_165[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -218} }, 
};

SR__ s_166[] =
{
    { { REQ_TOKEN}, {  28} },                   
    { {       311}, { 213} }, // AND            
    { {       312}, { 214} }, // FORALL         
    { {       328}, { 123} }, // AT             
    { {       340}, { 124} }, // ALWAYS         
    { {       341}, { 125} }, // SOMETIME       
    { {       342}, { 126} }, // WITHIN         
    { {       343}, { 127} }, // AT_MOST_ONCE   
    { {       344}, { 128} }, // SOMETIME_AFTER 
    { {       345}, { 129} }, // SOMETIME_BEFORE
    { {       346}, { 130} }, // ALWAYS_WITHIN  
    { {       347}, { 131} }, // HOLD_DURING    
    { {       348}, { 132} }, // HOLD_AFTER     
    { {       314}, { 180} }, // OR             
    { {       315}, { 181} }, // NOT            
    { {       316}, { 182} }, // IMPLY          
    { {       317}, { 183} }, // EXISTS         
    { {       384}, { 185} }, // predicate      
    { {       262}, { 186} }, // EQ             
    { {       416}, { 187} }, // binary_comp    
    { {       364}, { 113} }, // name           
    { {       267}, { 188} }, // GT             
    { {       268}, { 189} }, // LT             
    { {       269}, { 190} }, // GOE            
    { {       270}, { 191} }, // LOE            
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_167[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 215} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_168[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 216} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_169[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -94} }, 
};

SR__ s_170[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 217} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_171[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 218} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_172[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 219} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_173[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 220} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_174[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       421}, { 221} }, // number
    { {       304}, { 169} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_175[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 222} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_176[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  223} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_177[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  224} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_178[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -177} }, 
};

SR__ s_179[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     414}, {  225} }, // list_GD            
    { {     409}, {  226} }, // GD                 
    { {     412}, {  136} }, // atomic_formula_term
    { {     413}, {  137} }, // literal_term       
    { {     257}, {  138} }, // L_P                
    { {     415}, {  139} }, // f_comp             
    { {       0}, { -295} },                       
};

SR__ s_180[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     414}, {  227} }, // list_GD            
    { {     409}, {  226} }, // GD                 
    { {     412}, {  136} }, // atomic_formula_term
    { {     413}, {  137} }, // literal_term       
    { {     257}, {  138} }, // L_P                
    { {     415}, {  139} }, // f_comp             
    { {       0}, { -295} },                       
};

SR__ s_181[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 228} }, // GD                 
    { {       412}, { 229} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_182[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 230} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_183[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 231} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_184[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 232} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_185[] =
{
    { { REQ_DEF}, {   11} },                 
    { {     420}, {  233} }, // list_term    
    { {     418}, {  234} }, // term         
    { {     364}, {  235} }, // name         
    { {     386}, {  236} }, // variable     
    { {     419}, {  237} }, // function_term
    { {     360}, {   10} }, // NAME         
    { {     426}, {   11} }, // letter       
    { {     260}, {  153} }, // Q_M          
    { {     257}, {  238} }, // L_P          
    { {     273}, {   12} }, // LETTER       
    { {       0}, { -293} },                 
};

SR__ s_186[] =
{
    { { REQ_DEF}, {   10} },                 
    { {     418}, {  239} }, // term         
    { {     364}, {  235} }, // name         
    { {     386}, {  236} }, // variable     
    { {     419}, {  237} }, // function_term
    { {     360}, {   10} }, // NAME         
    { {     426}, {   11} }, // letter       
    { {     260}, {  153} }, // Q_M          
    { {     257}, {  238} }, // L_P          
    { {     273}, {   12} }, // LETTER       
    { {       0}, { -104} },                 
};

SR__ s_187[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       417}, { 240} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_188[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -102} }, 
};

SR__ s_189[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -103} }, 
};

SR__ s_190[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -105} }, 
};

SR__ s_191[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -106} }, 
};

SR__ s_192[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -178} }, 
};

SR__ s_193[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -179} }, 
};

SR__ s_194[] =
{
    { { REQ_TOKEN}, {   6} },                      
    { {       464}, { 245} }, // problem_option2   
    { {       465}, { 195} }, // problem_option3   
    { {       466}, { 196} }, // object_declaration
    { {       467}, { 198} }, // init              
    { {       257}, { 246} }, // L_P               
    { {         0}, {   0} },                      
};

SR__ s_195[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -181} }, 
};

SR__ s_196[] =
{
    { { REQ_TOKEN}, {   4} },                   
    { {       465}, { 247} }, // problem_option3
    { {       467}, { 198} }, // init           
    { {       257}, { 248} }, // L_P            
    { {         0}, {   0} },                   
};

SR__ s_197[] =
{
    { { REQ_TOKEN}, {   4} },                
    { {       278}, {  45} }, // REQUIREMENTS
    { {       337}, { 249} }, // OBJECTS     
    { {       338}, { 250} }, // INIT        
    { {         0}, {   0} },                
};

SR__ s_198[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       468}, { 251} }, // goal
    { {       257}, { 252} }, // L_P 
    { {         0}, {   0} },        
};

SR__ s_199[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -246} }, 
};

SR__ s_200[] =
{
    { { REQ_TOKEN}, {   8} },                         
    { {       399}, { 253} }, // nvList_primitive_type
    { {       398}, { 254} }, // primitive_type       
    { {       364}, { 145} }, // name                 
    { {       305}, { 146} }, // OBJECT               
    { {       360}, {  10} }, // NAME                 
    { {       426}, {  11} }, // letter               
    { {       273}, {  12} }, // LETTER               
    { {         0}, {   0} },                         
};

SR__ s_201[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -43} }, 
};

SR__ s_202[] =
{
    { { REQ_TOKEN}, {   9} },                  
    { {       391}, { 255} }, // type          
    { {       398}, { 143} }, // primitive_type
    { {       257}, { 144} }, // L_P           
    { {       364}, { 145} }, // name          
    { {       305}, { 146} }, // OBJECT        
    { {       360}, {  10} }, // NAME          
    { {       426}, {  11} }, // letter        
    { {       273}, {  12} }, // LETTER        
    { {         0}, {   0} },                  
};

SR__ s_203[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, { -287} }, // R_P
    { {       0}, { -268} },       
};

SR__ s_204[] =
{
    { { REQ_DEF}, {    4} },                 
    { {     499}, {  256} }, // list_variable
    { {     386}, {  204} }, // variable     
    { {     260}, {  153} }, // Q_M          
    { {       0}, { -286} },                 
};

SR__ s_205[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -45} }, 
};

SR__ s_206[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -243} }, 
};

SR__ s_207[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -46} }, 
};

SR__ s_208[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -205} }, 
};

SR__ s_209[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -324} }, 
};

SR__ s_210[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 257} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_211[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 258} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_212[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -208} }, 
};

SR__ s_213[] =
{
    { { REQ_DEF}, {   11} },                       
    { {     482}, {  159} }, // list_con_GD        
    { {     414}, {  225} }, // list_GD            
    { {     392}, {  160} }, // con_GD             
    { {     409}, {  226} }, // GD                 
    { {     257}, {  166} }, // L_P                
    { {     412}, {  136} }, // atomic_formula_term
    { {     413}, {  137} }, // literal_term       
    { {     415}, {  139} }, // f_comp             
    { {       0}, { -295} },                       
};

SR__ s_214[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 259} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_215[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -209} }, 
};

SR__ s_216[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 260} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_217[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 261} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_218[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 262} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_219[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 263} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_220[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 264} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_221[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       483}, { 265} }, // con2_GD            
    { {       392}, { 164} }, // con_GD             
    { {       409}, { 165} }, // GD                 
    { {       257}, { 166} }, // L_P                
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_222[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 266} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_223[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 267} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_224[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 268} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_225[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 269} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_226[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     414}, {  270} }, // list_GD            
    { {     409}, {  226} }, // GD                 
    { {     412}, {  136} }, // atomic_formula_term
    { {     413}, {  137} }, // literal_term       
    { {     257}, {  138} }, // L_P                
    { {     415}, {  139} }, // f_comp             
    { {       0}, { -295} },                       
};

SR__ s_227[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 271} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_228[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 272} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_229[] =
{
    { { REQ_DEF}, {   2} },       
    { {     258}, { 273} }, // R_P
    { {       0}, { -75} },       
};

SR__ s_230[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 274} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_231[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 275} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_232[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 276} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_233[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 277} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_234[] =
{
    { { REQ_DEF}, {   11} },                 
    { {     420}, {  278} }, // list_term    
    { {     418}, {  234} }, // term         
    { {     364}, {  235} }, // name         
    { {     386}, {  236} }, // variable     
    { {     419}, {  237} }, // function_term
    { {     360}, {   10} }, // NAME         
    { {     426}, {   11} }, // letter       
    { {     260}, {  153} }, // Q_M          
    { {     257}, {  238} }, // L_P          
    { {     273}, {   12} }, // LETTER       
    { {       0}, { -293} },                 
};

SR__ s_235[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -85} }, 
};

SR__ s_236[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -86} }, 
};

SR__ s_237[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -87} }, 
};

SR__ s_238[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       388}, { 279} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_239[] =
{
    { { REQ_TOKEN}, {  10} },                 
    { {       418}, { 280} }, // term         
    { {       364}, { 235} }, // name         
    { {       386}, { 236} }, // variable     
    { {       419}, { 237} }, // function_term
    { {       360}, {  10} }, // NAME         
    { {       426}, {  11} }, // letter       
    { {       260}, { 153} }, // Q_M          
    { {       257}, { 238} }, // L_P          
    { {       273}, {  12} }, // LETTER       
    { {         0}, {   0} },                 
};

SR__ s_240[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       417}, { 281} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_241[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -89} }, 
};

SR__ s_242[] =
{
    { { REQ_TOKEN}, {  12} },                   
    { {       422}, { 282} }, // binary_op      
    { {       423}, { 283} }, // multi_op       
    { {       263}, { 284} }, // MINUS          
    { {       388}, { 285} }, // function_symbol
    { {       264}, { 286} }, // SLASH          
    { {       265}, { 287} }, // STAR           
    { {       266}, { 288} }, // PLUS           
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_243[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -93} }, 
};

SR__ s_244[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -96} }, 
};

SR__ s_245[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -180} }, 
};

SR__ s_246[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       337}, { 249} }, // OBJECTS
    { {       338}, { 250} }, // INIT   
    { {         0}, {   0} },           
};

SR__ s_247[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -182} }, 
};

SR__ s_248[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       338}, { 250} }, // INIT
    { {         0}, {   0} },        
};

SR__ s_249[] =
{
    { { REQ_DEF}, {    8} },                   
    { {     381}, {  289} }, // typed_list_name
    { {     478}, {   82} }, // list_name      
    { {     498}, {   83} }, // nvList_name    
    { {     364}, {   84} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -282} },                   
};

SR__ s_250[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     474}, {  290} }, // list_init_el       
    { {     475}, {  291} }, // init_el            
    { {     476}, {  292} }, // literal_name       
    { {     257}, {  293} }, // L_P                
    { {     501}, {  294} }, // atomic_formula_name
    { {       0}, { -319} },                       
};

SR__ s_251[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       469}, { 295} }, // problem_option4    
    { {       470}, { 296} }, // constraints_problem
    { {       471}, { 297} }, // problem_option5    
    { {       472}, { 298} }, // metric_spec        
    { {       257}, { 299} }, // L_P                
    { {       258}, { 300} }, // R_P                
    { {       473}, { 301} }, // length_spec        
    { {         0}, {   0} },                       
};

SR__ s_252[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       339}, { 302} }, // GOAL
    { {         0}, {   0} },        
};

SR__ s_253[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 303} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_254[] =
{
    { { REQ_DEF}, {    8} },                       
    { {     505}, {  304} }, // list_primitive_type
    { {     398}, {  305} }, // primitive_type     
    { {     364}, {  145} }, // name               
    { {     305}, {  146} }, // OBJECT             
    { {     360}, {   10} }, // NAME               
    { {     426}, {   11} }, // letter             
    { {     273}, {   12} }, // LETTER             
    { {       0}, { -290} },                       
};

SR__ s_255[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  306} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_256[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -287} }, 
};

SR__ s_257[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       392}, { 307} }, // con_GD
    { {       257}, {  94} }, // L_P   
    { {         0}, {   0} },          
};

SR__ s_258[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -207} }, 
};

SR__ s_259[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     385}, {  210} }, // typed_list_variable
    { {     257}, {  276} }, // L_P                
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_260[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -210} }, 
};

SR__ s_261[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -211} }, 
};

SR__ s_262[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -212} }, 
};

SR__ s_263[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -213} }, 
};

SR__ s_264[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 308} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_265[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 309} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_266[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -216} }, 
};

SR__ s_267[] =
{
    { { REQ_DEF}, {   6} },                           
    { {     401}, { 310} }, // action_def_body        
    { {     402}, { 311} }, // action_def_body_option1
    { {     403}, { 312} }, // action_def_body_option2
    { {     309}, { 313} }, // PRECONDITION           
    { {     310}, { 314} }, // EFFECT                 
    { {       0}, { -65} },                           
};

SR__ s_268[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       440}, { 315} }, // da_def_body   
    { {       490}, { 316} }, // te_da_def_body
    { {       326}, { 317} }, // DURATION      
    { {         0}, {   0} },                  
};

SR__ s_269[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -77} }, 
};

SR__ s_270[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -296} }, 
};

SR__ s_271[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -78} }, 
};

SR__ s_272[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -79} }, 
};

SR__ s_273[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -258} }, 
};

SR__ s_274[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 318} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_275[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  319} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_276[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  320} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_277[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -261} }, 
};

SR__ s_278[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -294} }, 
};

SR__ s_279[] =
{
    { { REQ_DEF}, {   11} },                 
    { {     420}, {  321} }, // list_term    
    { {     418}, {  234} }, // term         
    { {     364}, {  235} }, // name         
    { {     386}, {  236} }, // variable     
    { {     419}, {  237} }, // function_term
    { {     360}, {   10} }, // NAME         
    { {     426}, {   11} }, // letter       
    { {     260}, {  153} }, // Q_M          
    { {     257}, {  238} }, // L_P          
    { {     273}, {   12} }, // LETTER       
    { {       0}, { -293} },                 
};

SR__ s_280[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 322} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_281[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 323} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_282[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       417}, { 324} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_283[] =
{
    { { REQ_DEF}, {  11} },                   
    { {     417}, { 325} }, // f_exp          
    { {     421}, { 241} }, // number         
    { {     257}, { 242} }, // L_P            
    { {     425}, { 243} }, // f_head         
    { {     304}, { 169} }, // NUM            
    { {     388}, { 244} }, // function_symbol
    { {     364}, { 119} }, // name           
    { {     360}, {  10} }, // NAME           
    { {     426}, {  11} }, // letter         
    { {     273}, {  12} }, // LETTER         
    { {       0}, { -97} },                   
};

SR__ s_284[] =
{
    { { REQ_DEF}, {  11} },                   
    { {     417}, { 326} }, // f_exp          
    { {     421}, { 241} }, // number         
    { {     257}, { 242} }, // L_P            
    { {     425}, { 243} }, // f_head         
    { {     304}, { 169} }, // NUM            
    { {     388}, { 244} }, // function_symbol
    { {     364}, { 119} }, // name           
    { {     360}, {  10} }, // NAME           
    { {     426}, {  11} }, // letter         
    { {     273}, {  12} }, // LETTER         
    { {       0}, { -98} },                   
};

SR__ s_285[] =
{
    { { REQ_DEF}, {   11} },                 
    { {     420}, {  327} }, // list_term    
    { {     418}, {  234} }, // term         
    { {     364}, {  235} }, // name         
    { {     386}, {  236} }, // variable     
    { {     419}, {  237} }, // function_term
    { {     360}, {   10} }, // NAME         
    { {     426}, {   11} }, // letter       
    { {     260}, {  153} }, // Q_M          
    { {     257}, {  238} }, // L_P          
    { {     273}, {   12} }, // LETTER       
    { {       0}, { -293} },                 
};

SR__ s_286[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -99} }, 
};

SR__ s_287[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -100} }, 
};

SR__ s_288[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -101} }, 
};

SR__ s_289[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 328} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_290[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 329} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_291[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     474}, {  330} }, // list_init_el       
    { {     475}, {  291} }, // init_el            
    { {     476}, {  292} }, // literal_name       
    { {     257}, {  293} }, // L_P                
    { {     501}, {  294} }, // atomic_formula_name
    { {       0}, { -319} },                       
};

SR__ s_292[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -191} }, 
};

SR__ s_293[] =
{
    { { REQ_TOKEN}, {   9} },             
    { {       328}, { 331} }, // AT       
    { {       262}, { 332} }, // EQ       
    { {       315}, { 333} }, // NOT      
    { {       384}, { 334} }, // predicate
    { {       364}, { 113} }, // name     
    { {       360}, {  10} }, // NAME     
    { {       426}, {  11} }, // letter   
    { {       273}, {  12} }, // LETTER   
    { {         0}, {   0} },             
};

SR__ s_294[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -259} }, 
};

SR__ s_295[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -183} }, 
};

SR__ s_296[] =
{
    { { REQ_TOKEN}, {   7} },                   
    { {       469}, { 335} }, // problem_option4
    { {       471}, { 297} }, // problem_option5
    { {       472}, { 298} }, // metric_spec    
    { {       258}, { 300} }, // R_P            
    { {       473}, { 301} }, // length_spec    
    { {       257}, { 336} }, // L_P            
    { {         0}, {   0} },                   
};

SR__ s_297[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -185} }, 
};

SR__ s_298[] =
{
    { { REQ_TOKEN}, {   5} },                   
    { {       471}, { 337} }, // problem_option5
    { {       258}, { 300} }, // R_P            
    { {       473}, { 301} }, // length_spec    
    { {       257}, { 338} }, // L_P            
    { {         0}, {   0} },                   
};

SR__ s_299[] =
{
    { { REQ_TOKEN}, {   4} },               
    { {       297}, { 339} }, // CONSTRAINTS
    { {       349}, { 340} }, // METRIC     
    { {       354}, { 341} }, // LENGTH     
    { {         0}, {   0} },               
};

SR__ s_300[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -187} }, 
};

SR__ s_301[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 342} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_302[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       406}, { 343} }, // pre_GD             
    { {       407}, { 344} }, // pref_GD            
    { {       257}, { 345} }, // L_P                
    { {       409}, { 346} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_303[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -59} }, 
};

SR__ s_304[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -270} }, 
};

SR__ s_305[] =
{
    { { REQ_DEF}, {    8} },                       
    { {     505}, {  347} }, // list_primitive_type
    { {     398}, {  305} }, // primitive_type     
    { {     364}, {  145} }, // name               
    { {     305}, {  146} }, // OBJECT             
    { {     360}, {   10} }, // NAME               
    { {     426}, {   11} }, // letter             
    { {     273}, {   12} }, // LETTER             
    { {       0}, { -290} },                       
};

SR__ s_306[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -248} }, 
};

SR__ s_307[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 348} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_308[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -214} }, 
};

SR__ s_309[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -215} }, 
};

SR__ s_310[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 349} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_311[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -62} }, 
};

SR__ s_312[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -63} }, 
};

SR__ s_313[] =
{
    { { REQ_TOKEN}, {   9} },                       
    { {       404}, { 350} }, // emptyOr_pre_GD     
    { {       257}, { 351} }, // L_P                
    { {       406}, { 352} }, // pre_GD             
    { {       407}, { 344} }, // pref_GD            
    { {       409}, { 346} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_314[] =
{
    { { REQ_TOKEN}, {   7} },                       
    { {       405}, { 353} }, // emptyOr_effect     
    { {       257}, { 354} }, // L_P                
    { {       432}, { 355} }, // effect             
    { {       434}, { 356} }, // c_effect           
    { {       436}, { 357} }, // p_effect           
    { {       412}, { 358} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_315[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 359} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_316[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 360} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_317[] =
{
    { { REQ_TOKEN}, {   4} },                              
    { {       441}, { 361} }, // duration_constraint       
    { {       257}, { 362} }, // L_P                       
    { {       452}, { 363} }, // simple_duration_constraint
    { {         0}, {   0} },                              
};

SR__ s_318[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -80} }, 
};

SR__ s_319[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 364} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_320[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 365} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_321[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 366} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_322[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -262} }, 
};

SR__ s_323[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -84} }, 
};

SR__ s_324[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       417}, { 367} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_325[] =
{
    { { REQ_TOKEN}, {  12} },                   
    { {       424}, { 368} }, // nvList_f_exp   
    { {       417}, { 369} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_326[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 370} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_327[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 371} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_328[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -189} }, 
};

SR__ s_329[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -190} }, 
};

SR__ s_330[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -320} }, 
};

SR__ s_331[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       421}, { 372} }, // number
    { {       304}, { 169} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_332[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       477}, { 373} }, // basic_function_term
    { {       364}, { 374} }, // name               
    { {       388}, { 375} }, // function_symbol    
    { {       257}, { 376} }, // L_P                
    { {       360}, {  10} }, // NAME               
    { {       426}, {  11} }, // letter             
    { {       273}, {  12} }, // LETTER             
    { {         0}, {   0} },                       
};

SR__ s_333[] =
{
    { { REQ_TOKEN}, {   3} },                       
    { {       501}, { 377} }, // atomic_formula_name
    { {       257}, { 378} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_334[] =
{
    { { REQ_DEF}, {    6} },             
    { {     478}, {  379} }, // list_name
    { {     364}, {  107} }, // name     
    { {     360}, {   10} }, // NAME     
    { {     426}, {   11} }, // letter   
    { {     273}, {   12} }, // LETTER   
    { {       0}, { -282} },             
};

SR__ s_335[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -184} }, 
};

SR__ s_336[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       349}, { 340} }, // METRIC
    { {       354}, { 341} }, // LENGTH
    { {         0}, {   0} },          
};

SR__ s_337[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -186} }, 
};

SR__ s_338[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       354}, { 341} }, // LENGTH
    { {         0}, {   0} },          
};

SR__ s_339[] =
{
    { { REQ_TOKEN}, {   4} },               
    { {       479}, { 380} }, // pref_con_GD
    { {       257}, { 381} }, // L_P        
    { {       392}, { 382} }, // con_GD     
    { {         0}, {   0} },               
};

SR__ s_340[] =
{
    { { REQ_TOKEN}, {   4} },                
    { {       484}, { 383} }, // optimization
    { {       350}, { 384} }, // MINIMIZE    
    { {       351}, { 385} }, // MAXIMIZE    
    { {         0}, {   0} },                
};

SR__ s_341[] =
{
    { { REQ_TOKEN}, {   5} },                       
    { {       487}, { 386} }, // length_spec_option1
    { {       488}, { 387} }, // length_spec_option2
    { {       257}, { 388} }, // L_P                
    { {       258}, { 389} }, // R_P                
    { {         0}, {   0} },                       
};

SR__ s_342[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -188} }, 
};

SR__ s_343[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -197} }, 
};

SR__ s_344[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -67} }, 
};

SR__ s_345[] =
{
    { { REQ_TOKEN}, {  19} },               
    { {       311}, { 390} }, // AND        
    { {       312}, { 391} }, // FORALL     
    { {       313}, { 392} }, // PREFERENCE 
    { {       314}, { 180} }, // OR         
    { {       315}, { 181} }, // NOT        
    { {       316}, { 182} }, // IMPLY      
    { {       317}, { 183} }, // EXISTS     
    { {       384}, { 185} }, // predicate  
    { {       262}, { 186} }, // EQ         
    { {       416}, { 187} }, // binary_comp
    { {       364}, { 113} }, // name       
    { {       267}, { 188} }, // GT         
    { {       268}, { 189} }, // LT         
    { {       269}, { 190} }, // GOE        
    { {       270}, { 191} }, // LOE        
    { {       360}, {  10} }, // NAME       
    { {       426}, {  11} }, // letter     
    { {       273}, {  12} }, // LETTER     
    { {         0}, {   0} },               
};

SR__ s_346[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -70} }, 
};

SR__ s_347[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -291} }, 
};

SR__ s_348[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -206} }, 
};

SR__ s_349[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -60} }, 
};

SR__ s_350[] =
{
    { { REQ_DEF}, {   3} },                           
    { {     403}, { 393} }, // action_def_body_option2
    { {     310}, { 314} }, // EFFECT                 
    { {       0}, { -65} },                           
};

SR__ s_351[] =
{
    { { REQ_TOKEN}, {  20} },               
    { {       258}, { 394} }, // R_P        
    { {       311}, { 390} }, // AND        
    { {       312}, { 391} }, // FORALL     
    { {       313}, { 392} }, // PREFERENCE 
    { {       314}, { 180} }, // OR         
    { {       315}, { 181} }, // NOT        
    { {       316}, { 182} }, // IMPLY      
    { {       317}, { 183} }, // EXISTS     
    { {       384}, { 185} }, // predicate  
    { {       262}, { 186} }, // EQ         
    { {       416}, { 187} }, // binary_comp
    { {       364}, { 113} }, // name       
    { {       267}, { 188} }, // GT         
    { {       268}, { 189} }, // LT         
    { {       269}, { 190} }, // GOE        
    { {       270}, { 191} }, // LOE        
    { {       360}, {  10} }, // NAME       
    { {       426}, {  11} }, // letter     
    { {       273}, {  12} }, // LETTER     
    { {         0}, {   0} },               
};

SR__ s_352[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -250} }, 
};

SR__ s_353[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -66} }, 
};

SR__ s_354[] =
{
    { { REQ_TOKEN}, {  18} },              
    { {       258}, { 395} }, // R_P       
    { {       311}, { 396} }, // AND       
    { {       312}, { 397} }, // FORALL    
    { {       318}, { 398} }, // WHEN      
    { {       315}, { 399} }, // NOT       
    { {       437}, { 400} }, // assign_op 
    { {       319}, { 401} }, // ASSIGN    
    { {       384}, { 185} }, // predicate 
    { {       262}, { 402} }, // EQ        
    { {       321}, { 403} }, // SCALE_UP  
    { {       322}, { 404} }, // SCALE_DOWN
    { {       323}, { 405} }, // INCREASE  
    { {       324}, { 406} }, // DECREASE  
    { {       364}, { 113} }, // name      
    { {       360}, {  10} }, // NAME      
    { {       426}, {  11} }, // letter    
    { {       273}, {  12} }, // LETTER    
    { {         0}, {   0} },              
};

SR__ s_355[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -252} }, 
};

SR__ s_356[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -116} }, 
};

SR__ s_357[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -119} }, 
};

SR__ s_358[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -121} }, 
};

SR__ s_359[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -132} }, 
};

SR__ s_360[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -236} }, 
};

SR__ s_361[] =
{
    { { REQ_TOKEN}, {   3} },              
    { {       327}, { 407} }, // CONDITION 
    { {       357}, { 408} }, // TIMEPOINTS
    { {         0}, {   0} },              
};

SR__ s_362[] =
{
    { { REQ_TOKEN}, {   8} },        
    { {       311}, { 409} }, // AND 
    { {       258}, { 410} }, // R_P 
    { {       453}, { 411} }, // d_op
    { {       328}, { 412} }, // AT  
    { {       270}, { 413} }, // LOE 
    { {       269}, { 414} }, // GOE 
    { {       262}, { 415} }, // EQ  
    { {         0}, {   0} },        
};

SR__ s_363[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -149} }, 
};

SR__ s_364[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 416} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_365[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 417} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_366[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -88} }, 
};

SR__ s_367[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 418} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_368[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 419} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_369[] =
{
    { { REQ_DEF}, {   12} },                   
    { {     506}, {  420} }, // list_f_exp     
    { {     417}, {  421} }, // f_exp          
    { {     421}, {  241} }, // number         
    { {     257}, {  242} }, // L_P            
    { {     425}, {  243} }, // f_head         
    { {     304}, {  169} }, // NUM            
    { {     388}, {  244} }, // function_symbol
    { {     364}, {  119} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -297} },                   
};

SR__ s_370[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -92} }, 
};

SR__ s_371[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -95} }, 
};

SR__ s_372[] =
{
    { { REQ_TOKEN}, {   4} },                       
    { {       476}, { 422} }, // literal_name       
    { {       501}, { 294} }, // atomic_formula_name
    { {       257}, { 423} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_373[] =
{
    { { REQ_TOKEN}, {   7} },          
    { {       421}, { 424} }, // number
    { {       364}, { 425} }, // name  
    { {       304}, { 169} }, // NUM   
    { {       360}, {  10} }, // NAME  
    { {       426}, {  11} }, // letter
    { {       273}, {  12} }, // LETTER
    { {         0}, {   0} },          
};

SR__ s_374[] =
{
    { { REQ_DEF}, {   5} },          
    { {     364}, { 426} }, // name  
    { {     360}, {  10} }, // NAME  
    { {     426}, {  11} }, // letter
    { {     273}, {  12} }, // LETTER
    { {       0}, { -47} },          
};

SR__ s_375[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -195} }, 
};

SR__ s_376[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       388}, { 427} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_377[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 428} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_378[] =
{
    { { REQ_TOKEN}, {   7} },             
    { {       384}, { 334} }, // predicate
    { {       262}, { 429} }, // EQ       
    { {       364}, { 113} }, // name     
    { {       360}, {  10} }, // NAME     
    { {       426}, {  11} }, // letter   
    { {       273}, {  12} }, // LETTER   
    { {         0}, {   0} },             
};

SR__ s_379[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 430} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_380[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 431} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_381[] =
{
    { { REQ_TOKEN}, {  14} },                   
    { {       311}, { 432} }, // AND            
    { {       312}, { 433} }, // FORALL         
    { {       313}, { 434} }, // PREFERENCE     
    { {       328}, { 123} }, // AT             
    { {       340}, { 124} }, // ALWAYS         
    { {       341}, { 125} }, // SOMETIME       
    { {       342}, { 126} }, // WITHIN         
    { {       343}, { 127} }, // AT_MOST_ONCE   
    { {       344}, { 128} }, // SOMETIME_AFTER 
    { {       345}, { 129} }, // SOMETIME_BEFORE
    { {       346}, { 130} }, // ALWAYS_WITHIN  
    { {       347}, { 131} }, // HOLD_DURING    
    { {       348}, { 132} }, // HOLD_AFTER     
    { {         0}, {   0} },                   
};

SR__ s_382[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -202} }, 
};

SR__ s_383[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       485}, { 435} }, // metric_f_exp   
    { {       257}, { 436} }, // L_P            
    { {       421}, { 437} }, // number         
    { {       388}, { 438} }, // function_symbol
    { {       352}, { 439} }, // TOTAL_TIME     
    { {       304}, { 169} }, // NUM            
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_384[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -220} }, 
};

SR__ s_385[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -221} }, 
};

SR__ s_386[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -230} }, 
};

SR__ s_387[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -231} }, 
};

SR__ s_388[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       355}, { 440} }, // SERIAL  
    { {       356}, { 441} }, // PARALLEL
    { {         0}, {   0} },            
};

SR__ s_389[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -233} }, 
};

SR__ s_390[] =
{
    { { REQ_DEF}, {   10} },                       
    { {     408}, {  442} }, // list_pre_GD        
    { {     414}, {  225} }, // list_GD            
    { {     406}, {  443} }, // pre_GD             
    { {     409}, {  444} }, // GD                 
    { {     407}, {  344} }, // pref_GD            
    { {     257}, {  345} }, // L_P                
    { {     412}, {  136} }, // atomic_formula_term
    { {     413}, {  137} }, // literal_term       
    { {     415}, {  139} }, // f_comp             
    { {       0}, { -295} },                       
};

SR__ s_391[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 445} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_392[] =
{
    { { REQ_TOKEN}, {  12} },                       
    { {       410}, { 446} }, // pref_GD_option1    
    { {       409}, { 447} }, // GD                 
    { {       411}, { 448} }, // pref_name          
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {       364}, { 449} }, // name               
    { {       360}, {  10} }, // NAME               
    { {       426}, {  11} }, // letter             
    { {       273}, {  12} }, // LETTER             
    { {         0}, {   0} },                       
};

SR__ s_393[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -64} }, 
};

SR__ s_394[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -249} }, 
};

SR__ s_395[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -251} }, 
};

SR__ s_396[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     433}, {  450} }, // list_c_effect      
    { {     434}, {  451} }, // c_effect           
    { {     257}, {  452} }, // L_P                
    { {     436}, {  357} }, // p_effect           
    { {     412}, {  358} }, // atomic_formula_term
    { {       0}, { -303} },                       
};

SR__ s_397[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 453} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_398[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 454} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_399[] =
{
    { { REQ_TOKEN}, {   3} },                       
    { {       412}, { 455} }, // atomic_formula_term
    { {       257}, { 456} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_400[] =
{
    { { REQ_TOKEN}, {   8} },                   
    { {       425}, { 457} }, // f_head         
    { {       257}, { 458} }, // L_P            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_401[] =
{
    { { REQ_DEF}, {    3} },                 
    { {     419}, {  459} }, // function_term
    { {     257}, {  238} }, // L_P          
    { {       0}, { -127} },                 
};

SR__ s_402[] =
{
    { { REQ_TOKEN}, {  10} },                 
    { {       418}, { 239} }, // term         
    { {       364}, { 235} }, // name         
    { {       386}, { 236} }, // variable     
    { {       419}, { 237} }, // function_term
    { {       360}, {  10} }, // NAME         
    { {       426}, {  11} }, // letter       
    { {       260}, { 153} }, // Q_M          
    { {       257}, { 238} }, // L_P          
    { {       273}, {  12} }, // LETTER       
    { {         0}, {   0} },                 
};

SR__ s_403[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -128} }, 
};

SR__ s_404[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -129} }, 
};

SR__ s_405[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -130} }, 
};

SR__ s_406[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -131} }, 
};

SR__ s_407[] =
{
    { { REQ_TOKEN}, {   6} },                 
    { {       442}, { 460} }, // emptyOr_da_GD
    { {       257}, { 461} }, // L_P          
    { {       444}, { 462} }, // da_GD        
    { {       445}, { 463} }, // pref_timed_GD
    { {       447}, { 464} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_408[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 465} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_409[] =
{
    { { REQ_TOKEN}, {   4} },                                     
    { {       451}, { 466} }, // nvList_simple_duration_constraint
    { {       452}, { 467} }, // simple_duration_constraint       
    { {       257}, { 468} }, // L_P                              
    { {         0}, {   0} },                                     
};

SR__ s_410[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -148} }, 
};

SR__ s_411[] =
{
    { { REQ_TOKEN}, {   2} },                
    { {       333}, { 469} }, // Q_M_DURATION
    { {         0}, {   0} },                
};

SR__ s_412[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       449}, { 470} }, // time_specifier
    { {       330}, { 471} }, // START         
    { {       331}, { 472} }, // END           
    { {         0}, {   0} },                  
};

SR__ s_413[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -152} }, 
};

SR__ s_414[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -153} }, 
};

SR__ s_415[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -154} }, 
};

SR__ s_416[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 473} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_417[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 474} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_418[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -90} }, 
};

SR__ s_419[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -91} }, 
};

SR__ s_420[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -271} }, 
};

SR__ s_421[] =
{
    { { REQ_DEF}, {   12} },                   
    { {     506}, {  475} }, // list_f_exp     
    { {     417}, {  421} }, // f_exp          
    { {     421}, {  241} }, // number         
    { {     257}, {  242} }, // L_P            
    { {     425}, {  243} }, // f_head         
    { {     304}, {  169} }, // NUM            
    { {     388}, {  244} }, // function_symbol
    { {     364}, {  119} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -297} },                   
};

SR__ s_422[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 476} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_423[] =
{
    { { REQ_TOKEN}, {   8} },             
    { {       315}, { 333} }, // NOT      
    { {       384}, { 334} }, // predicate
    { {       262}, { 429} }, // EQ       
    { {       364}, { 113} }, // name     
    { {       360}, {  10} }, // NAME     
    { {       426}, {  11} }, // letter   
    { {       273}, {  12} }, // LETTER   
    { {         0}, {   0} },             
};

SR__ s_424[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 477} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_425[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 478} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_426[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 479} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_427[] =
{
    { { REQ_DEF}, {    6} },             
    { {     478}, {  480} }, // list_name
    { {     364}, {  107} }, // name     
    { {     360}, {   10} }, // NAME     
    { {     426}, {   11} }, // letter   
    { {     273}, {   12} }, // LETTER   
    { {       0}, { -282} },             
};

SR__ s_428[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -260} }, 
};

SR__ s_429[] =
{
    { { REQ_TOKEN}, {   5} },          
    { {       364}, { 481} }, // name  
    { {       360}, {  10} }, // NAME  
    { {       426}, {  11} }, // letter
    { {       273}, {  12} }, // LETTER
    { {         0}, {   0} },          
};

SR__ s_430[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -263} }, 
};

SR__ s_431[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -198} }, 
};

SR__ s_432[] =
{
    { { REQ_DEF}, {    8} },                    
    { {     480}, {  482} }, // list_pref_con_GD
    { {     482}, {  159} }, // list_con_GD     
    { {     479}, {  483} }, // pref_con_GD     
    { {     392}, {  484} }, // con_GD          
    { {     257}, {  381} }, // L_P             
    { {     258}, { -321} }, // R_P             
    { {       0}, { -323} },                    
};

SR__ s_433[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 485} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_434[] =
{
    { { REQ_TOKEN}, {   9} },                       
    { {       481}, { 486} }, // pref_con_GD_option1
    { {       392}, { 487} }, // con_GD             
    { {       411}, { 488} }, // pref_name          
    { {       257}, {  94} }, // L_P                
    { {       364}, { 449} }, // name               
    { {       360}, {  10} }, // NAME               
    { {       426}, {  11} }, // letter             
    { {       273}, {  12} }, // LETTER             
    { {         0}, {   0} },                       
};

SR__ s_435[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 489} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_436[] =
{
    { { REQ_TOKEN}, {  13} },                   
    { {       422}, { 490} }, // binary_op      
    { {       423}, { 491} }, // multi_op       
    { {       263}, { 492} }, // MINUS          
    { {       388}, { 493} }, // function_symbol
    { {       353}, { 494} }, // IS_VIOLATED    
    { {       264}, { 286} }, // SLASH          
    { {       265}, { 287} }, // STAR           
    { {       266}, { 288} }, // PLUS           
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_437[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -225} }, 
};

SR__ s_438[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -227} }, 
};

SR__ s_439[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -228} }, 
};

SR__ s_440[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       489}, { 495} }, // integer
    { {       304}, { 496} }, // NUM    
    { {         0}, {   0} },           
};

SR__ s_441[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       489}, { 497} }, // integer
    { {       304}, { 496} }, // NUM    
    { {         0}, {   0} },           
};

SR__ s_442[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 498} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_443[] =
{
    { { REQ_TOKEN}, {   9} },                       
    { {       408}, { 499} }, // list_pre_GD        
    { {       406}, { 443} }, // pre_GD             
    { {       407}, { 344} }, // pref_GD            
    { {       257}, { 345} }, // L_P                
    { {       409}, { 346} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_444[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     414}, {  270} }, // list_GD            
    { {     409}, {  226} }, // GD                 
    { {     412}, {  136} }, // atomic_formula_term
    { {     413}, {  137} }, // literal_term       
    { {     257}, {  138} }, // L_P                
    { {     415}, {  139} }, // f_comp             
    { {     258}, { -295} }, // R_P                
    { {       0}, {  -70} },                       
};

SR__ s_445[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     385}, {  500} }, // typed_list_variable
    { {     257}, {  276} }, // L_P                
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_446[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -71} }, 
};

SR__ s_447[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 501} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_448[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 502} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_449[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -74} }, 
};

SR__ s_450[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 503} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_451[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     433}, {  504} }, // list_c_effect      
    { {     434}, {  451} }, // c_effect           
    { {     257}, {  452} }, // L_P                
    { {     436}, {  357} }, // p_effect           
    { {     412}, {  358} }, // atomic_formula_term
    { {       0}, { -303} },                       
};

SR__ s_452[] =
{
    { { REQ_TOKEN}, {  16} },              
    { {       312}, { 397} }, // FORALL    
    { {       318}, { 398} }, // WHEN      
    { {       315}, { 399} }, // NOT       
    { {       437}, { 400} }, // assign_op 
    { {       319}, { 401} }, // ASSIGN    
    { {       384}, { 185} }, // predicate 
    { {       262}, { 402} }, // EQ        
    { {       321}, { 403} }, // SCALE_UP  
    { {       322}, { 404} }, // SCALE_DOWN
    { {       323}, { 405} }, // INCREASE  
    { {       324}, { 406} }, // DECREASE  
    { {       364}, { 113} }, // name      
    { {       360}, {  10} }, // NAME      
    { {       426}, {  11} }, // letter    
    { {       273}, {  12} }, // LETTER    
    { {         0}, {   0} },              
};

SR__ s_453[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  505} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_454[] =
{
    { { REQ_TOKEN}, {   5} },                       
    { {       435}, { 506} }, // cond_effect        
    { {       257}, { 507} }, // L_P                
    { {       436}, { 508} }, // p_effect           
    { {       412}, { 358} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_455[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 509} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_456[] =
{
    { { REQ_TOKEN}, {   7} },             
    { {       384}, { 185} }, // predicate
    { {       262}, { 402} }, // EQ       
    { {       364}, { 113} }, // name     
    { {       360}, {  10} }, // NAME     
    { {       426}, {  11} }, // letter   
    { {       273}, {  12} }, // LETTER   
    { {         0}, {   0} },             
};

SR__ s_457[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       417}, { 510} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_458[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       388}, { 285} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_459[] =
{
    { { REQ_TOKEN}, {  11} },                 
    { {       418}, { 511} }, // term         
    { {       320}, { 512} }, // UNDEFINED    
    { {       364}, { 235} }, // name         
    { {       386}, { 236} }, // variable     
    { {       419}, { 237} }, // function_term
    { {       360}, {  10} }, // NAME         
    { {       426}, {  11} }, // letter       
    { {       260}, { 153} }, // Q_M          
    { {       257}, { 238} }, // L_P          
    { {       273}, {  12} }, // LETTER       
    { {         0}, {   0} },                 
};

SR__ s_460[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       310}, { 513} }, // EFFECT
    { {         0}, {   0} },          
};

SR__ s_461[] =
{
    { { REQ_TOKEN}, {   7} },              
    { {       258}, { 514} }, // R_P       
    { {       311}, { 515} }, // AND       
    { {       312}, { 516} }, // FORALL    
    { {       313}, { 517} }, // PREFERENCE
    { {       328}, { 518} }, // AT        
    { {       329}, { 519} }, // OVER      
    { {         0}, {   0} },              
};

SR__ s_462[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -254} }, 
};

SR__ s_463[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -135} }, 
};

SR__ s_464[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -138} }, 
};

SR__ s_465[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       330}, { 520} }, // START
    { {         0}, {   0} },         
};

SR__ s_466[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 521} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_467[] =
{
    { { REQ_DEF}, {    4} },                                   
    { {     510}, {  522} }, // list_simple_duration_constraint
    { {     452}, {  523} }, // simple_duration_constraint     
    { {     257}, {  468} }, // L_P                            
    { {       0}, { -315} },                                   
};

SR__ s_468[] =
{
    { { REQ_TOKEN}, {   6} },        
    { {       453}, { 411} }, // d_op
    { {       328}, { 412} }, // AT  
    { {       270}, { 413} }, // LOE 
    { {       269}, { 414} }, // GOE 
    { {       262}, { 415} }, // EQ  
    { {         0}, {   0} },        
};

SR__ s_469[] =
{
    { { REQ_TOKEN}, {  13} },                   
    { {       454}, { 524} }, // d_value        
    { {       275}, { 525} }, // NUMBER         
    { {       417}, { 526} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_470[] =
{
    { { REQ_TOKEN}, {   3} },                              
    { {       452}, { 527} }, // simple_duration_constraint
    { {       257}, { 468} }, // L_P                       
    { {         0}, {   0} },                              
};

SR__ s_471[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -144} }, 
};

SR__ s_472[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -145} }, 
};

SR__ s_473[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 528} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_474[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 529} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_475[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -298} }, 
};

SR__ s_476[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -192} }, 
};

SR__ s_477[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -193} }, 
};

SR__ s_478[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -194} }, 
};

SR__ s_479[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -264} }, 
};

SR__ s_480[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 530} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_481[] =
{
    { { REQ_TOKEN}, {   5} },          
    { {       364}, { 426} }, // name  
    { {       360}, {  10} }, // NAME  
    { {       426}, {  11} }, // letter
    { {       273}, {  12} }, // LETTER
    { {         0}, {   0} },          
};

SR__ s_482[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 531} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_483[] =
{
    { { REQ_DEF}, {    5} },                    
    { {     480}, {  532} }, // list_pref_con_GD
    { {     479}, {  483} }, // pref_con_GD     
    { {     257}, {  381} }, // L_P             
    { {     392}, {  382} }, // con_GD          
    { {       0}, { -321} },                    
};

SR__ s_484[] =
{
    { { REQ_DEF}, {    5} },               
    { {     482}, {  209} }, // list_con_GD
    { {     392}, {  160} }, // con_GD     
    { {     257}, {   94} }, // L_P        
    { {     258}, { -202} }, // R_P        
    { {       0}, { -323} },               
};

SR__ s_485[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  533} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_486[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -201} }, 
};

SR__ s_487[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 534} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_488[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       392}, { 535} }, // con_GD
    { {       257}, {  94} }, // L_P   
    { {         0}, {   0} },          
};

SR__ s_489[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -219} }, 
};

SR__ s_490[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       485}, { 536} }, // metric_f_exp   
    { {       257}, { 436} }, // L_P            
    { {       421}, { 437} }, // number         
    { {       388}, { 438} }, // function_symbol
    { {       352}, { 439} }, // TOTAL_TIME     
    { {       304}, { 169} }, // NUM            
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_491[] =
{
    { { REQ_DEF}, {  11} },                   
    { {     485}, { 537} }, // metric_f_exp   
    { {     257}, { 436} }, // L_P            
    { {     421}, { 437} }, // number         
    { {     388}, { 438} }, // function_symbol
    { {     352}, { 439} }, // TOTAL_TIME     
    { {     304}, { 169} }, // NUM            
    { {     364}, { 119} }, // name           
    { {     360}, {  10} }, // NAME           
    { {     426}, {  11} }, // letter         
    { {     273}, {  12} }, // LETTER         
    { {       0}, { -97} },                   
};

SR__ s_492[] =
{
    { { REQ_DEF}, {  11} },                   
    { {     485}, { 538} }, // metric_f_exp   
    { {     257}, { 436} }, // L_P            
    { {     421}, { 437} }, // number         
    { {     388}, { 438} }, // function_symbol
    { {     352}, { 439} }, // TOTAL_TIME     
    { {     304}, { 169} }, // NUM            
    { {     364}, { 119} }, // name           
    { {     360}, {  10} }, // NAME           
    { {     426}, {  11} }, // letter         
    { {     273}, {  12} }, // LETTER         
    { {       0}, { -98} },                   
};

SR__ s_493[] =
{
    { { REQ_DEF}, {    6} },             
    { {     478}, {  539} }, // list_name
    { {     364}, {  107} }, // name     
    { {     360}, {   10} }, // NAME     
    { {     426}, {   11} }, // letter   
    { {     273}, {   12} }, // LETTER   
    { {       0}, { -282} },             
};

SR__ s_494[] =
{
    { { REQ_TOKEN}, {   6} },             
    { {       411}, { 540} }, // pref_name
    { {       364}, { 449} }, // name     
    { {       360}, {  10} }, // NAME     
    { {       426}, {  11} }, // letter   
    { {       273}, {  12} }, // LETTER   
    { {         0}, {   0} },             
};

SR__ s_495[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 541} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_496[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -235} }, 
};

SR__ s_497[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 542} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_498[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -68} }, 
};

SR__ s_499[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -292} }, 
};

SR__ s_500[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 543} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_501[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -72} }, 
};

SR__ s_502[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 544} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_503[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -115} }, 
};

SR__ s_504[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -304} }, 
};

SR__ s_505[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 545} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_506[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 546} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_507[] =
{
    { { REQ_TOKEN}, {  15} },              
    { {       311}, { 547} }, // AND       
    { {       315}, { 399} }, // NOT       
    { {       437}, { 400} }, // assign_op 
    { {       319}, { 401} }, // ASSIGN    
    { {       384}, { 185} }, // predicate 
    { {       262}, { 402} }, // EQ        
    { {       321}, { 403} }, // SCALE_UP  
    { {       322}, { 404} }, // SCALE_DOWN
    { {       323}, { 405} }, // INCREASE  
    { {       324}, { 406} }, // DECREASE  
    { {       364}, { 113} }, // name      
    { {       360}, {  10} }, // NAME      
    { {       426}, {  11} }, // letter    
    { {       273}, {  12} }, // LETTER    
    { {         0}, {   0} },              
};

SR__ s_508[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -126} }, 
};

SR__ s_509[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -120} }, 
};

SR__ s_510[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -122} }, 
};

SR__ s_511[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 548} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_512[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 549} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_513[] =
{
    { { REQ_TOKEN}, {   5} },                     
    { {       443}, { 550} }, // emptyOr_da_effect
    { {       257}, { 551} }, // L_P              
    { {       455}, { 552} }, // da_effect        
    { {       457}, { 553} }, // timed_effect     
    { {         0}, {   0} },                     
};

SR__ s_514[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -253} }, 
};

SR__ s_515[] =
{
    { { REQ_DEF}, {    6} },                 
    { {     446}, {  554} }, // list_da_GD   
    { {     444}, {  555} }, // da_GD        
    { {     445}, {  463} }, // pref_timed_GD
    { {     257}, {  556} }, // L_P          
    { {     447}, {  464} }, // timed_GD     
    { {       0}, { -313} },                 
};

SR__ s_516[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 557} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_517[] =
{
    { { REQ_TOKEN}, {   9} },                     
    { {       448}, { 558} }, // pref_name_option1
    { {       447}, { 559} }, // timed_GD         
    { {       411}, { 560} }, // pref_name        
    { {       257}, { 561} }, // L_P              
    { {       364}, { 449} }, // name             
    { {       360}, {  10} }, // NAME             
    { {       426}, {  11} }, // letter           
    { {       273}, {  12} }, // LETTER           
    { {         0}, {   0} },                     
};

SR__ s_518[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       449}, { 562} }, // time_specifier
    { {       330}, { 471} }, // START         
    { {       331}, { 472} }, // END           
    { {         0}, {   0} },                  
};

SR__ s_519[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       450}, { 563} }, // interval
    { {       332}, { 564} }, // ALL     
    { {         0}, {   0} },            
};

SR__ s_520[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       331}, { 565} }, // END
    { {         0}, {   0} },       
};

SR__ s_521[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -147} }, 
};

SR__ s_522[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -275} }, 
};

SR__ s_523[] =
{
    { { REQ_DEF}, {    4} },                                   
    { {     510}, {  566} }, // list_simple_duration_constraint
    { {     452}, {  523} }, // simple_duration_constraint     
    { {     257}, {  468} }, // L_P                            
    { {       0}, { -315} },                                   
};

SR__ s_524[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 567} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_525[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -155} }, 
};

SR__ s_526[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -156} }, 
};

SR__ s_527[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 568} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_528[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -81} }, 
};

SR__ s_529[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -82} }, 
};

SR__ s_530[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -196} }, 
};

SR__ s_531[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -199} }, 
};

SR__ s_532[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -322} }, 
};

SR__ s_533[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 569} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_534[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -203} }, 
};

SR__ s_535[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 570} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_536[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       485}, { 571} }, // metric_f_exp   
    { {       257}, { 436} }, // L_P            
    { {       421}, { 437} }, // number         
    { {       388}, { 438} }, // function_symbol
    { {       352}, { 439} }, // TOTAL_TIME     
    { {       304}, { 169} }, // NUM            
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_537[] =
{
    { { REQ_TOKEN}, {  12} },                       
    { {       486}, { 572} }, // nvList_metric_f_exp
    { {       485}, { 573} }, // metric_f_exp       
    { {       257}, { 436} }, // L_P                
    { {       421}, { 437} }, // number             
    { {       388}, { 438} }, // function_symbol    
    { {       352}, { 439} }, // TOTAL_TIME         
    { {       304}, { 169} }, // NUM                
    { {       364}, { 119} }, // name               
    { {       360}, {  10} }, // NAME               
    { {       426}, {  11} }, // letter             
    { {       273}, {  12} }, // LETTER             
    { {         0}, {   0} },                       
};

SR__ s_538[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 574} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_539[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 575} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_540[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 576} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_541[] =
{
    { { REQ_TOKEN}, {   4} },                       
    { {       488}, { 577} }, // length_spec_option2
    { {       258}, { 389} }, // R_P                
    { {       257}, { 578} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_542[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 579} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_543[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       406}, { 580} }, // pre_GD             
    { {       407}, { 344} }, // pref_GD            
    { {       257}, { 345} }, // L_P                
    { {       409}, { 346} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_544[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -73} }, 
};

SR__ s_545[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       432}, { 581} }, // effect             
    { {       257}, { 582} }, // L_P                
    { {       434}, { 356} }, // c_effect           
    { {       436}, { 357} }, // p_effect           
    { {       412}, { 358} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_546[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -118} }, 
};

SR__ s_547[] =
{
    { { REQ_DEF}, {    5} },                       
    { {     438}, {  583} }, // list_p_effect      
    { {     436}, {  584} }, // p_effect           
    { {     257}, {  585} }, // L_P                
    { {     412}, {  358} }, // atomic_formula_term
    { {       0}, { -305} },                       
};

SR__ s_548[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -123} }, 
};

SR__ s_549[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -124} }, 
};

SR__ s_550[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -134} }, 
};

SR__ s_551[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       258}, { 586} }, // R_P        
    { {       311}, { 587} }, // AND        
    { {       312}, { 588} }, // FORALL     
    { {       318}, { 589} }, // WHEN       
    { {       328}, { 590} }, // AT         
    { {       459}, { 591} }, // assign_op_t
    { {       323}, { 592} }, // INCREASE   
    { {       324}, { 593} }, // DECREASE   
    { {         0}, {   0} },               
};

SR__ s_552[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -256} }, 
};

SR__ s_553[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -158} }, 
};

SR__ s_554[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 594} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_555[] =
{
    { { REQ_DEF}, {    6} },                 
    { {     446}, {  595} }, // list_da_GD   
    { {     444}, {  555} }, // da_GD        
    { {     445}, {  463} }, // pref_timed_GD
    { {     257}, {  556} }, // L_P          
    { {     447}, {  464} }, // timed_GD     
    { {       0}, { -313} },                 
};

SR__ s_556[] =
{
    { { REQ_TOKEN}, {   6} },              
    { {       311}, { 515} }, // AND       
    { {       312}, { 516} }, // FORALL    
    { {       313}, { 517} }, // PREFERENCE
    { {       328}, { 518} }, // AT        
    { {       329}, { 519} }, // OVER      
    { {         0}, {   0} },              
};

SR__ s_557[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  596} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_558[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -139} }, 
};

SR__ s_559[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 597} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_560[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       447}, { 598} }, // timed_GD
    { {       257}, { 561} }, // L_P     
    { {         0}, {   0} },            
};

SR__ s_561[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       328}, { 518} }, // AT  
    { {       329}, { 519} }, // OVER
    { {         0}, {   0} },        
};

SR__ s_562[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 599} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_563[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       409}, { 600} }, // GD                 
    { {       412}, { 136} }, // atomic_formula_term
    { {       413}, { 137} }, // literal_term       
    { {       257}, { 138} }, // L_P                
    { {       415}, { 139} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_564[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -146} }, 
};

SR__ s_565[] =
{
    { { REQ_DEF}, {   10} },                          
    { {     491}, {  601} }, // list_te_time_specifier
    { {     494}, {  602} }, // te_time_specifier     
    { {     449}, {  603} }, // time_specifier        
    { {     364}, {  604} }, // name                  
    { {     330}, {  471} }, // START                 
    { {     331}, {  472} }, // END                   
    { {     360}, {   10} }, // NAME                  
    { {     426}, {   11} }, // letter                
    { {     273}, {   12} }, // LETTER                
    { {       0}, { -307} },                          
};

SR__ s_566[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -316} }, 
};

SR__ s_567[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -150} }, 
};

SR__ s_568[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -151} }, 
};

SR__ s_569[] =
{
    { { REQ_TOKEN}, {   4} },               
    { {       479}, { 605} }, // pref_con_GD
    { {       392}, { 606} }, // con_GD     
    { {       257}, { 381} }, // L_P        
    { {         0}, {   0} },               
};

SR__ s_570[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -204} }, 
};

SR__ s_571[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 607} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_572[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 608} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_573[] =
{
    { { REQ_DEF}, {   12} },                     
    { {     512}, {  609} }, // list_metric_f_exp
    { {     485}, {  610} }, // metric_f_exp     
    { {     257}, {  436} }, // L_P              
    { {     421}, {  437} }, // number           
    { {     388}, {  438} }, // function_symbol  
    { {     352}, {  439} }, // TOTAL_TIME       
    { {     304}, {  169} }, // NUM              
    { {     364}, {  119} }, // name             
    { {     360}, {   10} }, // NAME             
    { {     426}, {   11} }, // letter           
    { {     273}, {   12} }, // LETTER           
    { {       0}, { -325} },                     
};

SR__ s_574[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -224} }, 
};

SR__ s_575[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -226} }, 
};

SR__ s_576[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -229} }, 
};

SR__ s_577[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -232} }, 
};

SR__ s_578[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       356}, { 441} }, // PARALLEL
    { {         0}, {   0} },            
};

SR__ s_579[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -234} }, 
};

SR__ s_580[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 611} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_581[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 612} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_582[] =
{
    { { REQ_TOKEN}, {  17} },              
    { {       311}, { 396} }, // AND       
    { {       312}, { 397} }, // FORALL    
    { {       318}, { 398} }, // WHEN      
    { {       315}, { 399} }, // NOT       
    { {       437}, { 400} }, // assign_op 
    { {       319}, { 401} }, // ASSIGN    
    { {       384}, { 185} }, // predicate 
    { {       262}, { 402} }, // EQ        
    { {       321}, { 403} }, // SCALE_UP  
    { {       322}, { 404} }, // SCALE_DOWN
    { {       323}, { 405} }, // INCREASE  
    { {       324}, { 406} }, // DECREASE  
    { {       364}, { 113} }, // name      
    { {       360}, {  10} }, // NAME      
    { {       426}, {  11} }, // letter    
    { {       273}, {  12} }, // LETTER    
    { {         0}, {   0} },              
};

SR__ s_583[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 613} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_584[] =
{
    { { REQ_DEF}, {    5} },                       
    { {     438}, {  614} }, // list_p_effect      
    { {     436}, {  584} }, // p_effect           
    { {     257}, {  585} }, // L_P                
    { {     412}, {  358} }, // atomic_formula_term
    { {       0}, { -305} },                       
};

SR__ s_585[] =
{
    { { REQ_TOKEN}, {  14} },              
    { {       315}, { 399} }, // NOT       
    { {       437}, { 400} }, // assign_op 
    { {       319}, { 401} }, // ASSIGN    
    { {       384}, { 185} }, // predicate 
    { {       262}, { 402} }, // EQ        
    { {       321}, { 403} }, // SCALE_UP  
    { {       322}, { 404} }, // SCALE_DOWN
    { {       323}, { 405} }, // INCREASE  
    { {       324}, { 406} }, // DECREASE  
    { {       364}, { 113} }, // name      
    { {       360}, {  10} }, // NAME      
    { {       426}, {  11} }, // letter    
    { {       273}, {  12} }, // LETTER    
    { {         0}, {   0} },              
};

SR__ s_586[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -255} }, 
};

SR__ s_587[] =
{
    { { REQ_DEF}, {    5} },                  
    { {     456}, {  615} }, // list_da_effect
    { {     455}, {  616} }, // da_effect     
    { {     257}, {  617} }, // L_P           
    { {     457}, {  553} }, // timed_effect  
    { {       0}, { -161} },                  
};

SR__ s_588[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 618} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_589[] =
{
    { { REQ_TOKEN}, {   5} },                 
    { {       444}, { 619} }, // da_GD        
    { {       445}, { 463} }, // pref_timed_GD
    { {       257}, { 556} }, // L_P          
    { {       447}, { 464} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_590[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       449}, { 620} }, // time_specifier
    { {       330}, { 471} }, // START         
    { {       331}, { 472} }, // END           
    { {         0}, {   0} },                  
};

SR__ s_591[] =
{
    { { REQ_TOKEN}, {   8} },                   
    { {       425}, { 621} }, // f_head         
    { {       257}, { 458} }, // L_P            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_592[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -172} }, 
};

SR__ s_593[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -173} }, 
};

SR__ s_594[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -136} }, 
};

SR__ s_595[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -314} }, 
};

SR__ s_596[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 622} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_597[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -140} }, 
};

SR__ s_598[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 623} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_599[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 624} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_600[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 625} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_601[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 626} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_602[] =
{
    { { REQ_DEF}, {   10} },                          
    { {     491}, {  627} }, // list_te_time_specifier
    { {     494}, {  602} }, // te_time_specifier     
    { {     449}, {  603} }, // time_specifier        
    { {     364}, {  604} }, // name                  
    { {     330}, {  471} }, // START                 
    { {     331}, {  472} }, // END                   
    { {     360}, {   10} }, // NAME                  
    { {     426}, {   11} }, // letter                
    { {     273}, {   12} }, // LETTER                
    { {       0}, { -307} },                          
};

SR__ s_603[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -238} }, 
};

SR__ s_604[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -239} }, 
};

SR__ s_605[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 628} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_606[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, {  348} }, // R_P
    { {       0}, { -202} },       
};

SR__ s_607[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -222} }, 
};

SR__ s_608[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -223} }, 
};

SR__ s_609[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -277} }, 
};

SR__ s_610[] =
{
    { { REQ_DEF}, {   12} },                     
    { {     512}, {  629} }, // list_metric_f_exp
    { {     485}, {  610} }, // metric_f_exp     
    { {     257}, {  436} }, // L_P              
    { {     421}, {  437} }, // number           
    { {     388}, {  438} }, // function_symbol  
    { {     352}, {  439} }, // TOTAL_TIME       
    { {     304}, {  169} }, // NUM              
    { {     364}, {  119} }, // name             
    { {     360}, {   10} }, // NAME             
    { {     426}, {   11} }, // letter           
    { {     273}, {   12} }, // LETTER           
    { {       0}, { -325} },                     
};

SR__ s_611[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -69} }, 
};

SR__ s_612[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -117} }, 
};

SR__ s_613[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -125} }, 
};

SR__ s_614[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -306} }, 
};

SR__ s_615[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 630} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_616[] =
{
    { { REQ_DEF}, {    5} },                  
    { {     456}, {  631} }, // list_da_effect
    { {     455}, {  616} }, // da_effect     
    { {     257}, {  617} }, // L_P           
    { {     457}, {  553} }, // timed_effect  
    { {       0}, { -161} },                  
};

SR__ s_617[] =
{
    { { REQ_TOKEN}, {   8} },               
    { {       311}, { 587} }, // AND        
    { {       312}, { 588} }, // FORALL     
    { {       318}, { 589} }, // WHEN       
    { {       328}, { 590} }, // AT         
    { {       459}, { 591} }, // assign_op_t
    { {       323}, { 592} }, // INCREASE   
    { {       324}, { 593} }, // DECREASE   
    { {         0}, {   0} },               
};

SR__ s_618[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     385}, {  632} }, // typed_list_variable
    { {     499}, {  150} }, // list_variable      
    { {     500}, {  151} }, // nvList_variable    
    { {     386}, {  152} }, // variable           
    { {     260}, {  153} }, // Q_M                
    { {       0}, { -286} },                       
};

SR__ s_619[] =
{
    { { REQ_TOKEN}, {   3} },                
    { {       457}, { 633} }, // timed_effect
    { {       257}, { 634} }, // L_P         
    { {         0}, {   0} },                
};

SR__ s_620[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       435}, { 635} }, // cond_effect        
    { {       458}, { 636} }, // f_assign_da        
    { {       257}, { 637} }, // L_P                
    { {       436}, { 508} }, // p_effect           
    { {       412}, { 358} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_621[] =
{
    { { REQ_TOKEN}, {   4} },           
    { {       460}, { 638} }, // f_exp_t
    { {       257}, { 639} }, // L_P    
    { {       261}, { 640} }, // NS_T   
    { {         0}, {   0} },           
};

SR__ s_622[] =
{
    { { REQ_TOKEN}, {   5} },                 
    { {       444}, { 641} }, // da_GD        
    { {       445}, { 463} }, // pref_timed_GD
    { {       257}, { 556} }, // L_P          
    { {       447}, { 464} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_623[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -141} }, 
};

SR__ s_624[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -142} }, 
};

SR__ s_625[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -143} }, 
};

SR__ s_626[] =
{
    { { REQ_TOKEN}, {   2} },               
    { {       358}, { 642} }, // TIMEALIASES
    { {         0}, {   0} },               
};

SR__ s_627[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -308} }, 
};

SR__ s_628[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -200} }, 
};

SR__ s_629[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -326} }, 
};

SR__ s_630[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -157} }, 
};

SR__ s_631[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -162} }, 
};

SR__ s_632[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 643} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_633[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 644} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_634[] =
{
    { { REQ_TOKEN}, {   5} },               
    { {       328}, { 590} }, // AT         
    { {       459}, { 591} }, // assign_op_t
    { {       323}, { 592} }, // INCREASE   
    { {       324}, { 593} }, // DECREASE   
    { {         0}, {   0} },               
};

SR__ s_635[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 645} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_636[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 646} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_637[] =
{
    { { REQ_TOKEN}, {  15} },              
    { {       311}, { 547} }, // AND       
    { {       437}, { 647} }, // assign_op 
    { {       315}, { 399} }, // NOT       
    { {       319}, { 401} }, // ASSIGN    
    { {       384}, { 185} }, // predicate 
    { {       262}, { 402} }, // EQ        
    { {       321}, { 403} }, // SCALE_UP  
    { {       322}, { 404} }, // SCALE_DOWN
    { {       323}, { 405} }, // INCREASE  
    { {       324}, { 406} }, // DECREASE  
    { {       364}, { 113} }, // name      
    { {       360}, {  10} }, // NAME      
    { {       426}, {  11} }, // letter    
    { {       273}, {  12} }, // LETTER    
    { {         0}, {   0} },              
};

SR__ s_638[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 648} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_639[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       265}, { 649} }, // STAR
    { {         0}, {   0} },        
};

SR__ s_640[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -176} }, 
};

SR__ s_641[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 650} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_642[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 651} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_643[] =
{
    { { REQ_TOKEN}, {   4} },                
    { {       455}, { 652} }, // da_effect   
    { {       257}, { 617} }, // L_P         
    { {       457}, { 553} }, // timed_effect
    { {         0}, {   0} },                
};

SR__ s_644[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -160} }, 
};

SR__ s_645[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -163} }, 
};

SR__ s_646[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -164} }, 
};

SR__ s_647[] =
{
    { { REQ_TOKEN}, {   8} },                   
    { {       425}, { 653} }, // f_head         
    { {       257}, { 458} }, // L_P            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_648[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -165} }, 
};

SR__ s_649[] =
{
    { { REQ_TOKEN}, {  12} },                   
    { {       417}, { 654} }, // f_exp          
    { {       261}, { 655} }, // NS_T           
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_650[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -137} }, 
};

SR__ s_651[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       332}, { 656} }, // ALL
    { {         0}, {   0} },       
};

SR__ s_652[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 657} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_653[] =
{
    { { REQ_TOKEN}, {  13} },                   
    { {       461}, { 658} }, // f_exp_da       
    { {       417}, { 659} }, // f_exp          
    { {       257}, { 660} }, // L_P            
    { {       333}, { 661} }, // Q_M_DURATION   
    { {       421}, { 241} }, // number         
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_654[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       261}, { 662} }, // NS_T
    { {         0}, {   0} },        
};

SR__ s_655[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       417}, { 663} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       257}, { 242} }, // L_P            
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_656[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       259}, { 664} }, // L_B
    { {         0}, {   0} },       
};

SR__ s_657[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -159} }, 
};

SR__ s_658[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 665} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_659[] =
{
    { { REQ_DEF}, {    1} }, 
    { {       0}, { -122} }, 
};

SR__ s_660[] =
{
    { { REQ_TOKEN}, {  12} },                   
    { {       422}, { 666} }, // binary_op      
    { {       423}, { 667} }, // multi_op       
    { {       263}, { 668} }, // MINUS          
    { {       388}, { 285} }, // function_symbol
    { {       264}, { 286} }, // SLASH          
    { {       265}, { 287} }, // STAR           
    { {       266}, { 288} }, // PLUS           
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_661[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -170} }, 
};

SR__ s_662[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 669} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_663[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 670} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_664[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       330}, { 671} }, // START
    { {         0}, {   0} },         
};

SR__ s_665[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -166} }, 
};

SR__ s_666[] =
{
    { { REQ_TOKEN}, {  13} },                   
    { {       461}, { 672} }, // f_exp_da       
    { {       417}, { 673} }, // f_exp          
    { {       257}, { 660} }, // L_P            
    { {       333}, { 661} }, // Q_M_DURATION   
    { {       421}, { 241} }, // number         
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_667[] =
{
    { { REQ_DEF}, {  13} },                   
    { {     461}, { 674} }, // f_exp_da       
    { {     417}, { 675} }, // f_exp          
    { {     257}, { 660} }, // L_P            
    { {     333}, { 661} }, // Q_M_DURATION   
    { {     421}, { 241} }, // number         
    { {     425}, { 243} }, // f_head         
    { {     304}, { 169} }, // NUM            
    { {     388}, { 244} }, // function_symbol
    { {     364}, { 119} }, // name           
    { {     360}, {  10} }, // NAME           
    { {     426}, {  11} }, // letter         
    { {     273}, {  12} }, // LETTER         
    { {       0}, { -97} },                   
};

SR__ s_668[] =
{
    { { REQ_DEF}, {  13} },                   
    { {     461}, { 676} }, // f_exp_da       
    { {     417}, { 677} }, // f_exp          
    { {     257}, { 660} }, // L_P            
    { {     333}, { 661} }, // Q_M_DURATION   
    { {     421}, { 241} }, // number         
    { {     425}, { 243} }, // f_head         
    { {     304}, { 169} }, // NUM            
    { {     388}, { 244} }, // function_symbol
    { {     364}, { 119} }, // name           
    { {     360}, {  10} }, // NAME           
    { {     426}, {  11} }, // letter         
    { {     273}, {  12} }, // LETTER         
    { {       0}, { -98} },                   
};

SR__ s_669[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -174} }, 
};

SR__ s_670[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -175} }, 
};

SR__ s_671[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       331}, { 678} }, // END
    { {         0}, {   0} },       
};

SR__ s_672[] =
{
    { { REQ_TOKEN}, {  13} },                   
    { {       461}, { 679} }, // f_exp_da       
    { {       257}, { 660} }, // L_P            
    { {       333}, { 661} }, // Q_M_DURATION   
    { {       417}, { 680} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_673[] =
{
    { { REQ_DEF}, {   11} },                   
    { {     417}, {  367} }, // f_exp          
    { {     421}, {  241} }, // number         
    { {     257}, {  242} }, // L_P            
    { {     425}, {  243} }, // f_head         
    { {     304}, {  169} }, // NUM            
    { {     388}, {  244} }, // function_symbol
    { {     364}, {  119} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -171} },                   
};

SR__ s_674[] =
{
    { { REQ_TOKEN}, {  14} },                   
    { {       462}, { 681} }, // nvList_f_exp_da
    { {       461}, { 682} }, // f_exp_da       
    { {       257}, { 660} }, // L_P            
    { {       333}, { 661} }, // Q_M_DURATION   
    { {       417}, { 680} }, // f_exp          
    { {       421}, { 241} }, // number         
    { {       425}, { 243} }, // f_head         
    { {       304}, { 169} }, // NUM            
    { {       388}, { 244} }, // function_symbol
    { {       364}, { 119} }, // name           
    { {       360}, {  10} }, // NAME           
    { {       426}, {  11} }, // letter         
    { {       273}, {  12} }, // LETTER         
    { {         0}, {   0} },                   
};

SR__ s_675[] =
{
    { { REQ_DEF}, {   12} },                   
    { {     424}, {  368} }, // nvList_f_exp   
    { {     417}, {  369} }, // f_exp          
    { {     421}, {  241} }, // number         
    { {     257}, {  242} }, // L_P            
    { {     425}, {  243} }, // f_head         
    { {     304}, {  169} }, // NUM            
    { {     388}, {  244} }, // function_symbol
    { {     364}, {  119} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -171} },                   
};

SR__ s_676[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 683} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_677[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, {  370} }, // R_P
    { {       0}, { -171} },       
};

SR__ s_678[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       259}, { 684} }, // L_B
    { {         0}, {   0} },       
};

SR__ s_679[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 685} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_680[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -171} }, 
};

SR__ s_681[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 686} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_682[] =
{
    { { REQ_DEF}, {   14} },                   
    { {     511}, {  687} }, // list_f_exp_da  
    { {     461}, {  688} }, // f_exp_da       
    { {     257}, {  660} }, // L_P            
    { {     333}, {  661} }, // Q_M_DURATION   
    { {     417}, {  680} }, // f_exp          
    { {     421}, {  241} }, // number         
    { {     425}, {  243} }, // f_head         
    { {     304}, {  169} }, // NUM            
    { {     388}, {  244} }, // function_symbol
    { {     364}, {  119} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -317} },                   
};

SR__ s_683[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -169} }, 
};

SR__ s_684[] =
{
    { { REQ_DEF}, {    5} },                         
    { {     492}, {  689} }, // list_te_time_interval
    { {     495}, {  690} }, // te_time_interval     
    { {     450}, {  691} }, // interval             
    { {     332}, {  564} }, // ALL                  
    { {       0}, { -309} },                         
};

SR__ s_685[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -167} }, 
};

SR__ s_686[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -168} }, 
};

SR__ s_687[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -276} }, 
};

SR__ s_688[] =
{
    { { REQ_DEF}, {   14} },                   
    { {     511}, {  692} }, // list_f_exp_da  
    { {     461}, {  688} }, // f_exp_da       
    { {     257}, {  660} }, // L_P            
    { {     333}, {  661} }, // Q_M_DURATION   
    { {     417}, {  680} }, // f_exp          
    { {     421}, {  241} }, // number         
    { {     425}, {  243} }, // f_head         
    { {     304}, {  169} }, // NUM            
    { {     388}, {  244} }, // function_symbol
    { {     364}, {  119} }, // name           
    { {     360}, {   10} }, // NAME           
    { {     426}, {   11} }, // letter         
    { {     273}, {   12} }, // LETTER         
    { {       0}, { -317} },                   
};

SR__ s_689[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 693} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_690[] =
{
    { { REQ_DEF}, {    5} },                         
    { {     492}, {  694} }, // list_te_time_interval
    { {     495}, {  690} }, // te_time_interval     
    { {     450}, {  691} }, // interval             
    { {     332}, {  564} }, // ALL                  
    { {       0}, { -309} },                         
};

SR__ s_691[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       259}, { 695} }, // L_B
    { {         0}, {   0} },       
};

SR__ s_692[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -318} }, 
};

SR__ s_693[] =
{
    { { REQ_TOKEN}, {   2} },                   
    { {       359}, { 696} }, // TIMECONSTRAINTS
    { {         0}, {   0} },                   
};

SR__ s_694[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -310} }, 
};

SR__ s_695[] =
{
    { { REQ_TOKEN}, {   9} },                     
    { {       494}, { 697} }, // te_time_specifier
    { {       449}, { 603} }, // time_specifier   
    { {       364}, { 604} }, // name             
    { {       330}, { 471} }, // START            
    { {       331}, { 472} }, // END              
    { {       360}, {  10} }, // NAME             
    { {       426}, {  11} }, // letter           
    { {       273}, {  12} }, // LETTER           
    { {         0}, {   0} },                     
};

SR__ s_696[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 698} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_697[] =
{
    { { REQ_TOKEN}, {   9} },                     
    { {       494}, { 699} }, // te_time_specifier
    { {       449}, { 603} }, // time_specifier   
    { {       364}, { 604} }, // name             
    { {       330}, { 471} }, // START            
    { {       331}, { 472} }, // END              
    { {       360}, {  10} }, // NAME             
    { {       426}, {  11} }, // letter           
    { {       273}, {  12} }, // LETTER           
    { {         0}, {   0} },                     
};

SR__ s_698[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 700} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_699[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       259}, { 701} }, // L_B
    { {         0}, {   0} },       
};

SR__ s_700[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 702} }, // EQ
    { {         0}, {   0} },      
};

SR__ s_701[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -240} }, 
};

SR__ s_702[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 703} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_703[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       263}, { 704} }, // MINUS
    { {         0}, {   0} },         
};

SR__ s_704[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       331}, { 705} }, // END
    { {         0}, {   0} },       
};

SR__ s_705[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       330}, { 706} }, // START
    { {         0}, {   0} },         
};

SR__ s_706[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 707} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_707[] =
{
    { { REQ_TOKEN}, {   2} },                
    { {       333}, { 708} }, // Q_M_DURATION
    { {         0}, {   0} },                
};

SR__ s_708[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 709} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_709[] =
{
    { { REQ_DEF}, {    4} },                            
    { {     493}, {  710} }, // list_te_time_constraints
    { {     496}, {  711} }, // te_time_constraints     
    { {     257}, {  712} }, // L_P                     
    { {       0}, { -311} },                            
};

SR__ s_710[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 713} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_711[] =
{
    { { REQ_DEF}, {    4} },                            
    { {     493}, {  714} }, // list_te_time_constraints
    { {     496}, {  711} }, // te_time_constraints     
    { {     257}, {  712} }, // L_P                     
    { {       0}, { -311} },                            
};

SR__ s_712[] =
{
    { { REQ_TOKEN}, {   7} },               
    { {       416}, { 715} }, // binary_comp
    { {       267}, { 188} }, // GT         
    { {       268}, { 189} }, // LT         
    { {       262}, { 716} }, // EQ         
    { {       269}, { 190} }, // GOE        
    { {       270}, { 191} }, // LOE        
    { {         0}, {   0} },               
};

SR__ s_713[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       327}, { 717} }, // CONDITION
    { {         0}, {   0} },             
};

SR__ s_714[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -312} }, 
};

SR__ s_715[] =
{
    { { REQ_TOKEN}, {   9} },                     
    { {       494}, { 718} }, // te_time_specifier
    { {       449}, { 603} }, // time_specifier   
    { {       364}, { 604} }, // name             
    { {       330}, { 471} }, // START            
    { {       331}, { 472} }, // END              
    { {       360}, {  10} }, // NAME             
    { {       426}, {  11} }, // letter           
    { {       273}, {  12} }, // LETTER           
    { {         0}, {   0} },                     
};

SR__ s_716[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -104} }, 
};

SR__ s_717[] =
{
    { { REQ_TOKEN}, {   6} },                 
    { {       442}, { 719} }, // emptyOr_da_GD
    { {       257}, { 461} }, // L_P          
    { {       444}, { 462} }, // da_GD        
    { {       445}, { 463} }, // pref_timed_GD
    { {       447}, { 464} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_718[] =
{
    { { REQ_TOKEN}, {   9} },                     
    { {       494}, { 720} }, // te_time_specifier
    { {       449}, { 603} }, // time_specifier   
    { {       364}, { 604} }, // name             
    { {       330}, { 471} }, // START            
    { {       331}, { 472} }, // END              
    { {       360}, {  10} }, // NAME             
    { {       426}, {  11} }, // letter           
    { {       273}, {  12} }, // LETTER           
    { {         0}, {   0} },                     
};

SR__ s_719[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       310}, { 721} }, // EFFECT
    { {         0}, {   0} },          
};

SR__ s_720[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 722} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_721[] =
{
    { { REQ_TOKEN}, {   5} },                     
    { {       443}, { 723} }, // emptyOr_da_effect
    { {       257}, { 551} }, // L_P              
    { {       455}, { 552} }, // da_effect        
    { {       457}, { 553} }, // timed_effect     
    { {         0}, {   0} },                     
};

SR__ s_722[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -241} }, 
};

SR__ s_723[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -237} }, 
};


// State array:
SR__ *s_state[] =
{
  s_0,  s_1,  s_2,  s_3,  s_4,  s_5,  s_6,  s_7,  s_8,  s_9,
  s_10,  s_11,  s_12,  s_13,  s_14,  s_15,  s_16,  s_17,  s_18,  s_19,
  s_20,  s_21,  s_22,  s_23,  s_24,  s_25,  s_26,  s_27,  s_28,  s_29,
  s_30,  s_31,  s_32,  s_33,  s_34,  s_35,  s_36,  s_37,  s_38,  s_39,
  s_40,  s_41,  s_42,  s_43,  s_44,  s_45,  s_46,  s_47,  s_48,  s_49,
  s_50,  s_51,  s_52,  s_53,  s_54,  s_55,  s_56,  s_57,  s_58,  s_59,
  s_60,  s_61,  s_62,  s_63,  s_64,  s_65,  s_66,  s_67,  s_68,  s_69,
  s_70,  s_71,  s_72,  s_73,  s_74,  s_75,  s_76,  s_77,  s_78,  s_79,
  s_80,  s_81,  s_82,  s_83,  s_84,  s_85,  s_86,  s_87,  s_88,  s_89,
  s_90,  s_91,  s_92,  s_93,  s_94,  s_95,  s_96,  s_97,  s_98,  s_99,
  s_100,  s_101,  s_102,  s_103,  s_104,  s_105,  s_106,  s_107,  s_108,  s_109,
  s_110,  s_111,  s_112,  s_113,  s_114,  s_115,  s_116,  s_117,  s_118,  s_119,
  s_120,  s_121,  s_122,  s_123,  s_124,  s_125,  s_126,  s_127,  s_128,  s_129,
  s_130,  s_131,  s_132,  s_133,  s_134,  s_135,  s_136,  s_137,  s_138,  s_139,
  s_140,  s_141,  s_142,  s_143,  s_144,  s_145,  s_146,  s_147,  s_148,  s_149,
  s_150,  s_151,  s_152,  s_153,  s_154,  s_155,  s_156,  s_157,  s_158,  s_159,
  s_160,  s_161,  s_162,  s_163,  s_164,  s_165,  s_166,  s_167,  s_168,  s_169,
  s_170,  s_171,  s_172,  s_173,  s_174,  s_175,  s_176,  s_177,  s_178,  s_179,
  s_180,  s_181,  s_182,  s_183,  s_184,  s_185,  s_186,  s_187,  s_188,  s_189,
  s_190,  s_191,  s_192,  s_193,  s_194,  s_195,  s_196,  s_197,  s_198,  s_199,
  s_200,  s_201,  s_202,  s_203,  s_204,  s_205,  s_206,  s_207,  s_208,  s_209,
  s_210,  s_211,  s_212,  s_213,  s_214,  s_215,  s_216,  s_217,  s_218,  s_219,
  s_220,  s_221,  s_222,  s_223,  s_224,  s_225,  s_226,  s_227,  s_228,  s_229,
  s_230,  s_231,  s_232,  s_233,  s_234,  s_235,  s_236,  s_237,  s_238,  s_239,
  s_240,  s_241,  s_242,  s_243,  s_244,  s_245,  s_246,  s_247,  s_248,  s_249,
  s_250,  s_251,  s_252,  s_253,  s_254,  s_255,  s_256,  s_257,  s_258,  s_259,
  s_260,  s_261,  s_262,  s_263,  s_264,  s_265,  s_266,  s_267,  s_268,  s_269,
  s_270,  s_271,  s_272,  s_273,  s_274,  s_275,  s_276,  s_277,  s_278,  s_279,
  s_280,  s_281,  s_282,  s_283,  s_284,  s_285,  s_286,  s_287,  s_288,  s_289,
  s_290,  s_291,  s_292,  s_293,  s_294,  s_295,  s_296,  s_297,  s_298,  s_299,
  s_300,  s_301,  s_302,  s_303,  s_304,  s_305,  s_306,  s_307,  s_308,  s_309,
  s_310,  s_311,  s_312,  s_313,  s_314,  s_315,  s_316,  s_317,  s_318,  s_319,
  s_320,  s_321,  s_322,  s_323,  s_324,  s_325,  s_326,  s_327,  s_328,  s_329,
  s_330,  s_331,  s_332,  s_333,  s_334,  s_335,  s_336,  s_337,  s_338,  s_339,
  s_340,  s_341,  s_342,  s_343,  s_344,  s_345,  s_346,  s_347,  s_348,  s_349,
  s_350,  s_351,  s_352,  s_353,  s_354,  s_355,  s_356,  s_357,  s_358,  s_359,
  s_360,  s_361,  s_362,  s_363,  s_364,  s_365,  s_366,  s_367,  s_368,  s_369,
  s_370,  s_371,  s_372,  s_373,  s_374,  s_375,  s_376,  s_377,  s_378,  s_379,
  s_380,  s_381,  s_382,  s_383,  s_384,  s_385,  s_386,  s_387,  s_388,  s_389,
  s_390,  s_391,  s_392,  s_393,  s_394,  s_395,  s_396,  s_397,  s_398,  s_399,
  s_400,  s_401,  s_402,  s_403,  s_404,  s_405,  s_406,  s_407,  s_408,  s_409,
  s_410,  s_411,  s_412,  s_413,  s_414,  s_415,  s_416,  s_417,  s_418,  s_419,
  s_420,  s_421,  s_422,  s_423,  s_424,  s_425,  s_426,  s_427,  s_428,  s_429,
  s_430,  s_431,  s_432,  s_433,  s_434,  s_435,  s_436,  s_437,  s_438,  s_439,
  s_440,  s_441,  s_442,  s_443,  s_444,  s_445,  s_446,  s_447,  s_448,  s_449,
  s_450,  s_451,  s_452,  s_453,  s_454,  s_455,  s_456,  s_457,  s_458,  s_459,
  s_460,  s_461,  s_462,  s_463,  s_464,  s_465,  s_466,  s_467,  s_468,  s_469,
  s_470,  s_471,  s_472,  s_473,  s_474,  s_475,  s_476,  s_477,  s_478,  s_479,
  s_480,  s_481,  s_482,  s_483,  s_484,  s_485,  s_486,  s_487,  s_488,  s_489,
  s_490,  s_491,  s_492,  s_493,  s_494,  s_495,  s_496,  s_497,  s_498,  s_499,
  s_500,  s_501,  s_502,  s_503,  s_504,  s_505,  s_506,  s_507,  s_508,  s_509,
  s_510,  s_511,  s_512,  s_513,  s_514,  s_515,  s_516,  s_517,  s_518,  s_519,
  s_520,  s_521,  s_522,  s_523,  s_524,  s_525,  s_526,  s_527,  s_528,  s_529,
  s_530,  s_531,  s_532,  s_533,  s_534,  s_535,  s_536,  s_537,  s_538,  s_539,
  s_540,  s_541,  s_542,  s_543,  s_544,  s_545,  s_546,  s_547,  s_548,  s_549,
  s_550,  s_551,  s_552,  s_553,  s_554,  s_555,  s_556,  s_557,  s_558,  s_559,
  s_560,  s_561,  s_562,  s_563,  s_564,  s_565,  s_566,  s_567,  s_568,  s_569,
  s_570,  s_571,  s_572,  s_573,  s_574,  s_575,  s_576,  s_577,  s_578,  s_579,
  s_580,  s_581,  s_582,  s_583,  s_584,  s_585,  s_586,  s_587,  s_588,  s_589,
  s_590,  s_591,  s_592,  s_593,  s_594,  s_595,  s_596,  s_597,  s_598,  s_599,
  s_600,  s_601,  s_602,  s_603,  s_604,  s_605,  s_606,  s_607,  s_608,  s_609,
  s_610,  s_611,  s_612,  s_613,  s_614,  s_615,  s_616,  s_617,  s_618,  s_619,
  s_620,  s_621,  s_622,  s_623,  s_624,  s_625,  s_626,  s_627,  s_628,  s_629,
  s_630,  s_631,  s_632,  s_633,  s_634,  s_635,  s_636,  s_637,  s_638,  s_639,
  s_640,  s_641,  s_642,  s_643,  s_644,  s_645,  s_646,  s_647,  s_648,  s_649,
  s_650,  s_651,  s_652,  s_653,  s_654,  s_655,  s_656,  s_657,  s_658,  s_659,
  s_660,  s_661,  s_662,  s_663,  s_664,  s_665,  s_666,  s_667,  s_668,  s_669,
  s_670,  s_671,  s_672,  s_673,  s_674,  s_675,  s_676,  s_677,  s_678,  s_679,
  s_680,  s_681,  s_682,  s_683,  s_684,  s_685,  s_686,  s_687,  s_688,  s_689,
  s_690,  s_691,  s_692,  s_693,  s_694,  s_695,  s_696,  s_697,  s_698,  s_699,
  s_700,  s_701,  s_702,  s_703,  s_704,  s_705,  s_706,  s_707,  s_708,  s_709,
  s_710,  s_711,  s_712,  s_713,  s_714,  s_715,  s_716,  s_717,  s_718,  s_719,
  s_720,  s_721,  s_722,  s_723,
};

} // anonymous namespace ends



// If the parsing function call uses arguments, then provide an overloaded
// function.  The code below doesn't rely on parameters, so no arguments are
// required.  Furthermore, parse uses a function try block to allow us to do
// ACCEPT and ABORT from anywhere, even from within members called by actions,
// simply throwing the appropriate exceptions.

ParserBase::ParserBase()
:
    d_stackIdx__(-1),
    // $insert debuginit
    d_debug__(false),
    d_nErrors__(0),
    // $insert requiredtokens
    d_requiredTokens__(0),
    d_acceptedTokens__(d_requiredTokens__),
    d_token__(_UNDETERMINED_),
    d_nextToken__(_UNDETERMINED_)
{}


void Parser::print__()
{
// $insert print
}

void ParserBase::clearin()
{
    d_token__ = d_nextToken__ = _UNDETERMINED_;
}

void ParserBase::push__(size_t state)
{
    if (static_cast<size_t>(d_stackIdx__ + 1) == d_stateStack__.size())
    {
        size_t newSize = d_stackIdx__ + STACK_EXPANSION;
        d_stateStack__.resize(newSize);
        d_valueStack__.resize(newSize);
    }
    ++d_stackIdx__;
    d_stateStack__[d_stackIdx__] = d_state__ = state;
    *(d_vsp__ = &d_valueStack__[d_stackIdx__]) = d_val__;
}

void ParserBase::popToken__()
{
    d_token__ = d_nextToken__;

    d_val__ = d_nextVal__;
    d_nextVal__ = STYPE__();

    d_nextToken__ = _UNDETERMINED_;
}
     
void ParserBase::pushToken__(int token)
{
    d_nextToken__ = d_token__;
    d_nextVal__ = d_val__;
    d_token__ = token;
}
     
void ParserBase::pop__(size_t count)
{
    if (d_stackIdx__ < static_cast<int>(count))
    {
        ABORT();
    }

    d_stackIdx__ -= count;
    d_state__ = d_stateStack__[d_stackIdx__];
    d_vsp__ = &d_valueStack__[d_stackIdx__];
}

inline size_t ParserBase::top__() const
{
    return d_stateStack__[d_stackIdx__];
}

void Parser::executeAction(int production)
try
{
    if (d_token__ != _UNDETERMINED_)
        pushToken__(d_token__);     // save an already available token

                                    // save default non-nested block $$
    if (int size = s_productionInfo[production].d_size)
        d_val__ = d_vsp__[1 - size];

    switch (production)
    {
        // $insert actioncases
        
        case 1:
#line 119 "grammar"
        {}
        break;

        case 2:
#line 120 "grammar"
        {}
        break;

    }
}
catch (std::exception const &exc)
{
    exceptionHandler__(exc);
}

inline void ParserBase::reduce__(PI__ const &pi)
{
    d_token__ = pi.d_nonTerm;
    pop__(pi.d_size);

}

// If d_token__ is _UNDETERMINED_ then if d_nextToken__ is _UNDETERMINED_ another
// token is obtained from lex(). Then d_nextToken__ is assigned to d_token__.
void Parser::nextToken()
{
    if (d_token__ != _UNDETERMINED_)        // no need for a token: got one
        return;                             // already

    if (d_nextToken__ != _UNDETERMINED_)
    {
        popToken__();                       // consume pending token
    }
    else
    {
        ++d_acceptedTokens__;               // accept another token (see
                                            // errorRecover())
        d_token__ = lex();
        if (d_token__ <= 0)
            d_token__ = _EOF_;
    }
    print();
}

// if the final transition is negative, then we should reduce by the rule
// given by its positive value. Note that the `recovery' parameter is only
// used with the --debug option
int Parser::lookup(bool recovery)
{
    // $insert threading
    SR__ *sr = s_state[d_state__];        // get the appropriate state-table
    int lastIdx = sr->d_lastIdx;        // sentinel-index in the SR__ array

    SR__ *lastElementPtr = sr + lastIdx;
    SR__ *elementPtr = sr + 1;            // start the search at s_xx[1]

    lastElementPtr->d_token = d_token__;// set search-token

    while (elementPtr->d_token != d_token__)
        ++elementPtr;

    if (elementPtr == lastElementPtr)   // reached the last element
    {
        if (elementPtr->d_action < 0)   // default reduction
        {
            return elementPtr->d_action;                
        }

        // No default reduction, so token not found, so error.
        throw UNEXPECTED_TOKEN__;
    }

    // not at the last element: inspect the nature of the action
    // (< 0: reduce, 0: ACCEPT, > 0: shift)

    int action = elementPtr->d_action;


    return action;
}

    // When an error has occurred, pop elements off the stack until the top
    // state has an error-item. If none is found, the default recovery
    // mode (which is to abort) is activated. 
    //
    // If EOF is encountered without being appropriate for the current state,
    // then the error recovery will fall back to the default recovery mode.
    // (i.e., parsing terminates)
void Parser::errorRecovery()
try
{
    if (d_acceptedTokens__ >= d_requiredTokens__)// only generate an error-
    {                                           // message if enough tokens 
        ++d_nErrors__;                          // were accepted. Otherwise
        error("Syntax error");                  // simply skip input

    }


    // get the error state
    while (not (s_state[top__()][0].d_type & ERR_ITEM))
    {
        pop__();
    }

    // In the error state, lookup a token allowing us to proceed.
    // Continuation may be possible following multiple reductions,
    // but eventuall a shift will be used, requiring the retrieval of
    // a terminal token. If a retrieved token doesn't match, the catch below 
    // will ensure the next token is requested in the while(true) block
    // implemented below:

    int lastToken = d_token__;                  // give the unexpected token a
                                                // chance to be processed
                                                // again.

    pushToken__(_error_);                       // specify _error_ as next token
    push__(lookup(true));                       // push the error state

    d_token__ = lastToken;                      // reactivate the unexpected
                                                // token (we're now in an
                                                // ERROR state).

    bool gotToken = true;                       // the next token is a terminal

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
            {
                gotToken = d_token__ == _UNDETERMINED_;
                nextToken();                    // obtain next token
            }
            
            int action = lookup(true);

            if (action > 0)                 // push a new state
            {
                push__(action);
                popToken__();

                if (gotToken)
                {

                    d_acceptedTokens__ = 0;
                    return;
                }
            }
            else if (action < 0)
            {
                // no actions executed on recovery but save an already 
                // available token:
                if (d_token__ != _UNDETERMINED_)
                    pushToken__(d_token__);
 
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else
                ABORT();                    // abort when accepting during
                                            // error recovery
        }
        catch (...)
        {
            if (d_token__ == _EOF_)
                ABORT();                    // saw inappropriate _EOF_
                      
            popToken__();                   // failing token now skipped
        }
    }
}
catch (ErrorRecovery__)       // This is: DEFAULT_RECOVERY_MODE
{
    ABORT();
}

    // The parsing algorithm:
    // Initially, state 0 is pushed on the stack, and d_token__ as well as
    // d_nextToken__ are initialized to _UNDETERMINED_. 
    //
    // Then, in an eternal loop:
    //
    //  1. If a state does not have REQ_TOKEN no token is assigned to
    //     d_token__. If the state has REQ_TOKEN, nextToken() is called to
    //      determine d_nextToken__ and d_token__ is set to
    //     d_nextToken__. nextToken() will not call lex() unless d_nextToken__ is 
    //     _UNDETERMINED_. 
    //
    //  2. lookup() is called: 
    //     d_token__ is stored in the final element's d_token field of the
    //     state's SR_ array. 
    //
    //  3. The current token is looked up in the state's SR_ array
    //
    //  4. Depending on the result of the lookup() function the next state is
    //     shifted on the parser's stack, a reduction by some rule is applied,
    //     or the parsing function returns ACCEPT(). When a reduction is
    //     called for, any action that may have been defined for that
    //     reduction is executed.
    //
    //  5. An error occurs if d_token__ is not found, and the state has no
    //     default reduction. Error handling was described at the top of this
    //     file.

int Parser::parse()
try 
{
    push__(0);                              // initial state
    clearin();                              // clear the tokens.

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
                nextToken();                // obtain next token


            int action = lookup(false);     // lookup d_token__ in d_state__

            if (action > 0)                 // SHIFT: push a new state
            {
                push__(action);
                popToken__();               // token processed
            }
            else if (action < 0)            // REDUCE: execute and pop.
            {
                executeAction(-action);
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else 
                ACCEPT();
        }
        catch (ErrorRecovery__)
        {
            errorRecovery();
        }
    }
}
catch (Return__ retValue)
{
    return retValue;
}



