// Generated by Bisonc++ V4.08.00 on Fri, 14 Mar 2014 17:39:06 +0100

// $insert class.ih
#include "Parser.ih"

// The FIRST element of SR arrays shown below uses `d_type', defining the
// state's type, and `d_lastIdx' containing the last element's index. If
// d_lastIdx contains the REQ_TOKEN bitflag (see below) then the state needs
// a token: if in this state d_token__ is _UNDETERMINED_, nextToken() will be
// called

// The LAST element of SR arrays uses `d_token' containing the last retrieved
// token to speed up the (linear) seach.  Except for the first element of SR
// arrays, the field `d_action' is used to determine what to do next. If
// positive, it represents the next state (used with SHIFT); if zero, it
// indicates `ACCEPT', if negative, -d_action represents the number of the
// rule to reduce to.

// `lookup()' tries to find d_token__ in the current SR array. If it fails, and
// there is no default reduction UNEXPECTED_TOKEN__ is thrown, which is then
// caught by the error-recovery function.

// The error-recovery function will pop elements off the stack until a state
// having bit flag ERR_ITEM is found. This state has a transition on _error_
// which is applied. In this _error_ state, while the current token is not a
// proper continuation, new tokens are obtained by nextToken(). If such a
// token is found, error recovery is successful and the token is
// handled according to the error state's SR table and parsing continues.
// During error recovery semantic actions are ignored.

// A state flagged with the DEF_RED flag will perform a default
// reduction if no other continuations are available for the current token.

// The ACCEPT STATE never shows a default reduction: when it is reached the
// parser returns ACCEPT(). During the grammar
// analysis phase a default reduction may have been defined, but it is
// removed during the state-definition phase.

// So:
//      s_x[] = 
//      {
//                  [_field_1_]         [_field_2_]
//
// First element:   {state-type,        idx of last element},
// Other elements:  {required token,    action to perform},
//                                      ( < 0: reduce, 
//                                          0: ACCEPT,
//                                        > 0: next state)
// Last element:    {set to d_token__,    action to perform}
//      }

// When the --thread-safe option is specified, all static data are defined as
// const. If --thread-safe is not provided, the state-tables are not defined
// as const, since the lookup() function below will modify them


namespace // anonymous
{
    char const author[] = "Frank B. Brokken (f.b.brokken@rug.nl)";

    enum 
    {
        STACK_EXPANSION = 5     // size to expand the state-stack with when
                                // full
    };

    enum ReservedTokens
    {
        PARSE_ACCEPT     = 0,   // `ACCEPT' TRANSITION
        _UNDETERMINED_   = -2,
        _EOF_            = -1,
        _error_          = 256
    };
    enum StateType       // modify statetype/data.cc when this enum changes
    {
        NORMAL,
        ERR_ITEM,
        REQ_TOKEN,
        ERR_REQ,    // ERR_ITEM | REQ_TOKEN
        DEF_RED,    // state having default reduction
        ERR_DEF,    // ERR_ITEM | DEF_RED
        REQ_DEF,    // REQ_TOKEN | DEF_RED
        ERR_REQ_DEF // ERR_ITEM | REQ_TOKEN | DEF_RED
    };    
    struct PI__     // Production Info
    {
        size_t d_nonTerm; // identification number of this production's
                            // non-terminal 
        size_t d_size;    // number of elements in this production 
    };

    struct SR__     // Shift Reduce info, see its description above
    {
        union
        {
            int _field_1_;      // initializer, allowing initializations 
                                // of the SR s_[] arrays
            int d_type;
            int d_token;
        };
        union
        {
            int _field_2_;

            int d_lastIdx;          // if negative, the state uses SHIFT
            int d_action;           // may be negative (reduce), 
                                    // postive (shift), or 0 (accept)
            size_t d_errorState;    // used with Error states
        };
    };

    // $insert staticdata
    
// Productions Info Records:
PI__ const s_productionInfo[] = 
{
     {0, 0}, // not used: reduction values are negative
     {362, 1}, // 1: begin ->  domain
     {362, 1}, // 2: begin ->  problem
     {363, 7}, // 3: domain (L_P) ->  L_P DEFINE L_P DOMAIN name R_P domain_option1
     {366, 1}, // 4: domain_option1 ->  domain_option2
     {366, 2}, // 5: domain_option1 ->  require_def domain_option2
     {367, 1}, // 6: domain_option2 ->  domain_option3
     {367, 2}, // 7: domain_option2 ->  types_def domain_option3
     {369, 1}, // 8: domain_option3 ->  domain_option4
     {369, 2}, // 9: domain_option3 ->  constants_def domain_option4
     {371, 1}, // 10: domain_option4 ->  domain_option5
     {371, 2}, // 11: domain_option4 ->  predicates_def domain_option5
     {373, 1}, // 12: domain_option5 ->  domain_option6
     {373, 2}, // 13: domain_option5 ->  functions_def domain_option6
     {375, 1}, // 14: domain_option6 ->  domain_option7
     {375, 2}, // 15: domain_option6 ->  constraints_domain domain_option7
     {377, 2}, // 16: domain_option7 (R_P) ->  list_structure_def R_P
     {365, 1}, // 17: name (NAME) ->  NAME
     {368, 4}, // 18: require_def (L_P) ->  L_P REQUIREMENTS nvList_require_key R_P
     {381, 1}, // 19: require_key (STRIPS) ->  STRIPS
     {381, 1}, // 20: require_key (TYPING) ->  TYPING
     {381, 1}, // 21: require_key (NEGATIVE_PRECONDITIONS) ->  NEGATIVE_PRECONDITIONS
     {381, 1}, // 22: require_key (DISJUNCTIVE_PRECONDITIONS) ->  DISJUNCTIVE_PRECONDITIONS
     {381, 1}, // 23: require_key (EQUALITY) ->  EQUALITY
     {381, 1}, // 24: require_key (EXISTENTIAL_PRECONDITIONS) ->  EXISTENTIAL_PRECONDITIONS
     {381, 1}, // 25: require_key (UNIVERSAL_PRECONDITIONS) ->  UNIVERSAL_PRECONDITIONS
     {381, 1}, // 26: require_key (QUANTIFIED_PRECONDITIONS) ->  QUANTIFIED_PRECONDITIONS
     {381, 1}, // 27: require_key (CONDITIONAL_EFFECTS) ->  CONDITIONAL_EFFECTS
     {381, 1}, // 28: require_key (FLUENTS) ->  FLUENTS
     {381, 1}, // 29: require_key (NUMERIC_FLUENTS) ->  NUMERIC_FLUENTS
     {381, 1}, // 30: require_key (ADL) ->  ADL
     {381, 1}, // 31: require_key (DURACTIVE_ACTIONS) ->  DURACTIVE_ACTIONS
     {381, 1}, // 32: require_key (DURATION_INEQUALITIES) ->  DURATION_INEQUALITIES
     {381, 1}, // 33: require_key (CONTINUOUS_EFFECTS) ->  CONTINUOUS_EFFECTS
     {381, 1}, // 34: require_key (DERIVED_PREDICATES) ->  DERIVED_PREDICATES
     {381, 1}, // 35: require_key (TIMED_INITIAL_LITERALS) ->  TIMED_INITIAL_LITERALS
     {381, 1}, // 36: require_key (PREFERENCES) ->  PREFERENCES
     {381, 1}, // 37: require_key (CONSTRAINTS) ->  CONSTRAINTS
     {381, 1}, // 38: require_key (ACTION_COSTS) ->  ACTION_COSTS
     {381, 1}, // 39: require_key (TEMPORALLY_EXTENDED) ->  TEMPORALLY_EXTENDED
     {370, 4}, // 40: types_def (L_P) ->  L_P TYPES typed_list_name R_P
     {372, 4}, // 41: constants_def (L_P) ->  L_P CONSTANTS typed_list_name R_P
     {374, 4}, // 42: predicates_def (L_P) ->  L_P PREDICATES nvList_atomic_formula_skeleton R_P
     {384, 4}, // 43: atomic_formula_skeleton (L_P) ->  L_P predicate typed_list_variable R_P
     {385, 1}, // 44: predicate ->  name
     {387, 2}, // 45: variable (Q_M) ->  Q_M name
     {388, 4}, // 46: atomic_function_skeleton (L_P) ->  L_P function_symbol typed_list_variable R_P
     {389, 1}, // 47: function_symbol ->  name
     {376, 4}, // 48: functions_def (L_P) ->  L_P FUNCTIONS function_typed_list_atomic_function_skeleton R_P
     {391, 1}, // 49: function_type (NUMBER) ->  NUMBER
     {391, 1}, // 50: function_type ->  type
     {378, 4}, // 51: constraints_domain (L_P) ->  L_P CONSTRAINTS con_GD R_P
     {394, 1}, // 52: structure_def ->  action_def
     {394, 1}, // 53: structure_def ->  durative_action_def
     {394, 1}, // 54: structure_def ->  te_durative_action_def
     {394, 1}, // 55: structure_def ->  derived_def
     {399, 1}, // 56: primitive_type ->  name
     {399, 1}, // 57: primitive_type (OBJECT) ->  OBJECT
     {392, 1}, // 58: type ->  primitive_type
     {392, 4}, // 59: type (L_P) ->  L_P EITHER nvList_primitive_type R_P
     {395, 9}, // 60: action_def (L_P) ->  L_P ACTION action_symbol PARAMETERS L_P typed_list_variable R_P action_def_body R_P
     {401, 1}, // 61: action_symbol ->  name
     {402, 1}, // 62: action_def_body ->  action_def_body_option1
     {403, 1}, // 63: action_def_body_option1 ->  action_def_body_option2
     {403, 3}, // 64: action_def_body_option1 (PRECONDITION) ->  PRECONDITION emptyOr_pre_GD action_def_body_option2
     {404, 0}, // 65: action_def_body_option2 ->  <empty>
     {404, 2}, // 66: action_def_body_option2 (EFFECT) ->  EFFECT emptyOr_effect
     {407, 1}, // 67: pre_GD ->  pref_GD
     {407, 4}, // 68: pre_GD (L_P) ->  L_P AND list_pre_GD R_P
     {407, 7}, // 69: pre_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P pre_GD R_P
     {408, 1}, // 70: pref_GD ->  GD
     {408, 3}, // 71: pref_GD (L_P) ->  L_P PREFERENCE pref_GD_option1
     {411, 2}, // 72: pref_GD_option1 (R_P) ->  GD R_P
     {411, 3}, // 73: pref_GD_option1 (R_P) ->  pref_name GD R_P
     {412, 1}, // 74: pref_name ->  name
     {410, 1}, // 75: GD ->  atomic_formula_term
     {410, 1}, // 76: GD ->  literal_term
     {410, 4}, // 77: GD (L_P) ->  L_P AND list_GD R_P
     {410, 4}, // 78: GD (L_P) ->  L_P OR list_GD R_P
     {410, 4}, // 79: GD (L_P) ->  L_P NOT GD R_P
     {410, 5}, // 80: GD (L_P) ->  L_P IMPLY GD GD R_P
     {410, 9}, // 81: GD (L_P) ->  L_P EXISTS L_P L_P typed_list_variable R_P R_P GD R_P
     {410, 9}, // 82: GD (L_P) ->  L_P FORALL L_P L_P typed_list_variable R_P R_P GD R_P
     {410, 1}, // 83: GD ->  f_comp
     {416, 5}, // 84: f_comp (L_P) ->  L_P binary_comp f_exp f_exp R_P
     {419, 1}, // 85: term ->  name
     {419, 1}, // 86: term ->  variable
     {419, 1}, // 87: term ->  function_term
     {420, 4}, // 88: function_term (L_P) ->  L_P function_symbol list_term R_P
     {418, 1}, // 89: f_exp ->  number
     {418, 5}, // 90: f_exp (L_P) ->  L_P binary_op f_exp f_exp R_P
     {418, 5}, // 91: f_exp (L_P) ->  L_P multi_op f_exp nvList_f_exp R_P
     {418, 4}, // 92: f_exp (L_P) ->  L_P MINUS f_exp R_P
     {418, 1}, // 93: f_exp ->  f_head
     {422, 1}, // 94: number (NUM) ->  NUM
     {426, 4}, // 95: f_head (L_P) ->  L_P function_symbol list_term R_P
     {426, 1}, // 96: f_head ->  function_symbol
     {423, 1}, // 97: binary_op ->  multi_op
     {423, 1}, // 98: binary_op (MINUS) ->  MINUS
     {423, 1}, // 99: binary_op (SLASH) ->  SLASH
     {424, 1}, // 100: multi_op (STAR) ->  STAR
     {424, 1}, // 101: multi_op (PLUS) ->  PLUS
     {417, 1}, // 102: binary_comp (GT) ->  GT
     {417, 1}, // 103: binary_comp (LT) ->  LT
     {417, 1}, // 104: binary_comp (EQ) ->  EQ
     {417, 1}, // 105: binary_comp (GOE) ->  GOE
     {417, 1}, // 106: binary_comp (LOE) ->  LOE
     {427, 4}, // 107: effect (L_P) ->  L_P AND list_c_effect R_P
     {427, 1}, // 108: effect ->  c_effect
     {429, 7}, // 109: c_effect (L_P) ->  L_P FORALL L_P typed_list_variable R_P effect R_P
     {429, 5}, // 110: c_effect (L_P) ->  L_P WHEN GD cond_effect R_P
     {429, 1}, // 111: c_effect ->  p_effect
     {431, 4}, // 112: p_effect (L_P) ->  L_P NOT atomic_formula_term R_P
     {431, 1}, // 113: p_effect ->  atomic_formula_term
     {431, 4}, // 114: p_effect (L_P) ->  L_P assign_op f_head f_exp
     {431, 5}, // 115: p_effect (L_P) ->  L_P ASSIGN function_term term R_P
     {431, 5}, // 116: p_effect (L_P) ->  L_P ASSIGN function_term UNDEFINED R_P
     {430, 4}, // 117: cond_effect (L_P) ->  L_P AND list_p_effect R_P
     {430, 1}, // 118: cond_effect ->  p_effect
     {432, 1}, // 119: assign_op (ASSIGN) ->  ASSIGN
     {432, 1}, // 120: assign_op (SCALE_UP) ->  SCALE_UP
     {432, 1}, // 121: assign_op (SCALE_DOWN) ->  SCALE_DOWN
     {432, 1}, // 122: assign_op (INCREASE) ->  INCREASE
     {432, 1}, // 123: assign_op (DECREASE) ->  DECREASE
     {396, 9}, // 124: durative_action_def (L_P) ->  L_P DURATIVE_ACTION da_symbol PARAMETERS L_P typed_list_variable R_P da_def_body R_P
     {434, 1}, // 125: da_symbol ->  name
     {435, 6}, // 126: da_def_body (DURATION) ->  DURATION duration_constraint CONDITION emptyOr_da_GD EFFECT emptyOr_da_effect
     {439, 1}, // 127: da_GD ->  pref_timed_GD
     {439, 4}, // 128: da_GD (L_P) ->  L_P AND list_da_GD R_P
     {439, 7}, // 129: da_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P da_GD R_P
     {440, 1}, // 130: pref_timed_GD ->  timed_GD
     {440, 3}, // 131: pref_timed_GD (L_P) ->  L_P PREFERENCE pref_name_option1
     {443, 2}, // 132: pref_name_option1 (R_P) ->  timed_GD R_P
     {443, 3}, // 133: pref_name_option1 (R_P) ->  pref_name timed_GD R_P
     {442, 5}, // 134: timed_GD (L_P) ->  L_P AT time_specifier GD R_P
     {442, 5}, // 135: timed_GD (L_P) ->  L_P OVER interval GD R_P
     {444, 1}, // 136: time_specifier (START) ->  START
     {444, 1}, // 137: time_specifier (END) ->  END
     {445, 1}, // 138: interval (ALL) ->  ALL
     {436, 4}, // 139: duration_constraint (L_P) ->  L_P AND nvList_simple_duration_constraint R_P
     {436, 2}, // 140: duration_constraint (L_P) ->  L_P R_P
     {436, 1}, // 141: duration_constraint ->  simple_duration_constraint
     {447, 5}, // 142: simple_duration_constraint (L_P) ->  L_P d_op Q_M_DURATION d_value R_P
     {447, 5}, // 143: simple_duration_constraint (L_P) ->  L_P AT time_specifier simple_duration_constraint R_P
     {448, 1}, // 144: d_op (LOE) ->  LOE
     {448, 1}, // 145: d_op (GOE) ->  GOE
     {448, 1}, // 146: d_op (EQ) ->  EQ
     {449, 1}, // 147: d_value (NUMBER) ->  NUMBER
     {449, 1}, // 148: d_value ->  f_exp
     {450, 4}, // 149: da_effect (L_P) ->  L_P AND list_da_effect R_P
     {450, 1}, // 150: da_effect ->  timed_effect
     {450, 7}, // 151: da_effect (L_P) ->  L_P FORALL L_P typed_list_variable R_P da_effect R_P
     {450, 5}, // 152: da_effect (L_P) ->  L_P WHEN da_GD timed_effect R_P
     {452, 5}, // 153: timed_effect (L_P) ->  L_P AT time_specifier cond_effect R_P
     {452, 5}, // 154: timed_effect (L_P) ->  L_P AT time_specifier f_assign_da R_P
     {452, 5}, // 155: timed_effect (L_P) ->  L_P assign_op_t f_head f_exp_t R_P
     {453, 5}, // 156: f_assign_da (L_P) ->  L_P assign_op f_head f_exp_da R_P
     {456, 5}, // 157: f_exp_da (L_P) ->  L_P binary_op f_exp_da f_exp_da R_P
     {456, 5}, // 158: f_exp_da (L_P) ->  L_P multi_op f_exp_da nvList_f_exp_da R_P
     {456, 4}, // 159: f_exp_da (L_P) ->  L_P MINUS f_exp_da R_P
     {456, 1}, // 160: f_exp_da (Q_M_DURATION) ->  Q_M_DURATION
     {456, 1}, // 161: f_exp_da ->  f_exp
     {454, 1}, // 162: assign_op_t (INCREASE) ->  INCREASE
     {454, 1}, // 163: assign_op_t (DECREASE) ->  DECREASE
     {455, 5}, // 164: f_exp_t (L_P) ->  L_P STAR f_exp NS_T R_P
     {455, 5}, // 165: f_exp_t (L_P) ->  L_P STAR NS_T f_exp R_P
     {455, 1}, // 166: f_exp_t (NS_T) ->  NS_T
     {398, 5}, // 167: derived_def (L_P) ->  L_P DERIVED atomic_formula_skeleton GD R_P
     {364, 11}, // 168: problem (L_P) ->  L_P DEFINE L_P PROBLEM name R_P L_P DD_DOMAIN name R_P problem_option1
     {458, 1}, // 169: problem_option1 ->  problem_option2
     {458, 2}, // 170: problem_option1 ->  require_def problem_option2
     {459, 1}, // 171: problem_option2 ->  problem_option3
     {459, 2}, // 172: problem_option2 ->  object_declaration problem_option3
     {460, 3}, // 173: problem_option3 ->  init goal problem_option4
     {460, 4}, // 174: problem_option3 ->  init goal constraints_problem problem_option4
     {464, 1}, // 175: problem_option4 ->  problem_option5
     {464, 2}, // 176: problem_option4 ->  metric_spec problem_option5
     {466, 1}, // 177: problem_option5 (R_P) ->  R_P
     {466, 2}, // 178: problem_option5 (R_P) ->  length_spec R_P
     {461, 4}, // 179: object_declaration (L_P) ->  L_P OBJECTS typed_list_name R_P
     {462, 4}, // 180: init (L_P) ->  L_P INIT list_init_el R_P
     {470, 1}, // 181: init_el ->  literal_name
     {470, 5}, // 182: init_el (L_P) ->  L_P AT number literal_name R_P
     {470, 5}, // 183: init_el (L_P) ->  L_P EQ basic_function_term number R_P
     {470, 5}, // 184: init_el (L_P) ->  L_P EQ basic_function_term name R_P
     {472, 1}, // 185: basic_function_term ->  function_symbol
     {472, 4}, // 186: basic_function_term (L_P) ->  L_P function_symbol list_name R_P
     {463, 4}, // 187: goal (L_P) ->  L_P GOAL pre_GD R_P
     {465, 4}, // 188: constraints_problem (L_P) ->  L_P CONSTRAINTS pref_con_GD R_P
     {474, 4}, // 189: pref_con_GD (L_P) ->  L_P AND list_pref_con_GD R_P
     {474, 7}, // 190: pref_con_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P pref_con_GD R_P
     {474, 3}, // 191: pref_con_GD (L_P) ->  L_P PREFERENCE pref_con_GD_option1
     {474, 1}, // 192: pref_con_GD ->  con_GD
     {476, 2}, // 193: pref_con_GD_option1 (R_P) ->  con_GD R_P
     {476, 3}, // 194: pref_con_GD_option1 (R_P) ->  pref_name con_GD R_P
     {393, 4}, // 195: con_GD (L_P) ->  L_P AND list_con_GD R_P
     {393, 7}, // 196: con_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P con_GD R_P
     {393, 5}, // 197: con_GD (L_P) ->  L_P AT END GD R_P
     {393, 4}, // 198: con_GD (L_P) ->  L_P ALWAYS con2_GD R_P
     {393, 4}, // 199: con_GD (L_P) ->  L_P SOMETIME con2_GD R_P
     {393, 5}, // 200: con_GD (L_P) ->  L_P WITHIN number con2_GD R_P
     {393, 5}, // 201: con_GD (L_P) ->  L_P AT_MOST_ONCE con2_GD con2_GD R_P
     {393, 5}, // 202: con_GD (L_P) ->  L_P SOMETIME_AFTER con2_GD con2_GD R_P
     {393, 5}, // 203: con_GD (L_P) ->  L_P SOMETIME_BEFORE con2_GD con2_GD R_P
     {393, 6}, // 204: con_GD (L_P) ->  L_P ALWAYS_WITHIN number con2_GD con2_GD R_P
     {393, 6}, // 205: con_GD (L_P) ->  L_P HOLD_DURING number number con2_GD R_P
     {393, 5}, // 206: con_GD (L_P) ->  L_P HOLD_AFTER number con2_GD R_P
     {478, 1}, // 207: con2_GD ->  con_GD
     {478, 1}, // 208: con2_GD ->  GD
     {467, 5}, // 209: metric_spec (L_P) ->  L_P METRIC optimization metric_f_exp R_P
     {479, 1}, // 210: optimization (MINIMIZE) ->  MINIMIZE
     {479, 1}, // 211: optimization (MAXIMIZE) ->  MAXIMIZE
     {480, 5}, // 212: metric_f_exp (L_P) ->  L_P binary_op metric_f_exp metric_f_exp R_P
     {480, 5}, // 213: metric_f_exp (L_P) ->  L_P multi_op metric_f_exp nvList_metric_f_exp R_P
     {480, 4}, // 214: metric_f_exp (L_P) ->  L_P MINUS metric_f_exp R_P
     {480, 1}, // 215: metric_f_exp ->  number
     {480, 4}, // 216: metric_f_exp (L_P) ->  L_P function_symbol list_name R_P
     {480, 1}, // 217: metric_f_exp ->  function_symbol
     {480, 1}, // 218: metric_f_exp (TOTAL_TIME) ->  TOTAL_TIME
     {480, 3}, // 219: metric_f_exp (L_P) ->  L_P TOTAL_TIME R_P
     {480, 4}, // 220: metric_f_exp (L_P) ->  L_P IS_VIOLATED pref_name R_P
     {468, 3}, // 221: length_spec (L_P) ->  L_P LENGTH length_spec_option1
     {482, 1}, // 222: length_spec_option1 ->  length_spec_option2
     {482, 5}, // 223: length_spec_option1 (L_P) ->  L_P SERIAL integer R_P length_spec_option2
     {483, 1}, // 224: length_spec_option2 (R_P) ->  R_P
     {483, 5}, // 225: length_spec_option2 (L_P) ->  L_P PARALLEL integer R_P R_P
     {484, 1}, // 226: integer (NUM) ->  NUM
     {397, 9}, // 227: te_durative_action_def (L_P) ->  L_P DURATIVE_ACTION da_symbol PARAMETERS L_P typed_list_variable R_P te_da_def_body R_P
     {485, 11}, // 228: te_da_def_body (DURATION) ->  DURATION duration_constraint TIMEPOINTS L_P nvList_te_time_specifier R_P TIMEALIASES L_P nvList_te_interval_alias R_P te_da_def_body_option1
     {488, 8}, // 229: te_da_def_body_option1 (TIMECONSTRAINTS) ->  TIMECONSTRAINTS L_P nvList_te_time_constraints R_P CONDITION emptyOr_te_da_GD EFFECT emptyOr_te_da_effect
     {488, 10}, // 230: te_da_def_body_option1 (TIMEMODALITY) ->  TIMEMODALITY nvList_te_time_modality_user TIMECONSTRAINTS L_P nvList_te_time_constraints R_P CONDITION emptyOr_te_da_GD EFFECT emptyOr_te_da_effect
     {493, 1}, // 231: te_time_specifier ->  time_specifier
     {493, 1}, // 232: te_time_specifier ->  f_exp_da
     {493, 1}, // 233: te_time_specifier ->  name
     {493, 5}, // 234: te_time_specifier (L_P) ->  L_P binary_op te_time_specifier te_time_specifier R_P
     {494, 2}, // 235: te_interval_alias ->  te_interval te_interval
     {495, 1}, // 236: te_interval ->  interval
     {495, 1}, // 237: te_interval ->  name
     {495, 4}, // 238: te_interval ->  bracket te_time_specifier te_time_specifier bracket
     {497, 5}, // 239: te_time_constraints (L_P) ->  L_P binary_comp te_time_specifier te_time_specifier R_P
     {498, 1}, // 240: te_da_GD ->  te_pref_timed_GD
     {498, 4}, // 241: te_da_GD (L_P) ->  L_P AND list_te_da_GD R_P
     {498, 7}, // 242: te_da_GD (L_P) ->  L_P FORALL L_P typed_list_variable R_P te_da_GD R_P
     {499, 1}, // 243: te_pref_timed_GD ->  te_timed_GD
     {499, 3}, // 244: te_pref_timed_GD (L_P) ->  L_P PREFERENCE te_pref_timed_GD_option1
     {502, 2}, // 245: te_pref_timed_GD_option1 (R_P) ->  te_timed_GD R_P
     {502, 3}, // 246: te_pref_timed_GD_option1 (R_P) ->  pref_name te_timed_GD R_P
     {501, 5}, // 247: te_timed_GD (L_P) ->  L_P AT te_time_specifier GD R_P
     {501, 5}, // 248: te_timed_GD (L_P) ->  L_P OVER te_interval GD R_P
     {501, 5}, // 249: te_timed_GD (L_P) ->  L_P SOMEWHERE te_interval GD R_P
     {501, 5}, // 250: te_timed_GD (L_P) ->  L_P ANYWHERE te_interval GD R_P
     {501, 5}, // 251: te_timed_GD (L_P) ->  L_P TRANSITION_OVER te_interval GD R_P
     {501, 5}, // 252: te_timed_GD (L_P) ->  L_P name te_interval GD R_P
     {503, 4}, // 253: te_da_effect (L_P) ->  L_P AND list_te_da_effect R_P
     {503, 1}, // 254: te_da_effect ->  te_timed_effect
     {503, 1}, // 255: te_da_effect ->  te_modality
     {503, 7}, // 256: te_da_effect (L_P) ->  L_P FORALL L_P typed_list_variable R_P te_da_effect R_P
     {503, 5}, // 257: te_da_effect (L_P) ->  L_P WHEN da_GD te_timed_effect R_P
     {505, 5}, // 258: te_timed_effect (L_P) ->  L_P AT te_time_specifier cond_effect R_P
     {505, 5}, // 259: te_timed_effect (L_P) ->  L_P AT te_time_specifier f_assign_da R_P
     {505, 5}, // 260: te_timed_effect (L_P) ->  L_P assign_op_t f_head f_exp_t R_P
     {506, 5}, // 261: te_modality (L_P) ->  L_P AT te_time_specifier te_fluent R_P
     {506, 5}, // 262: te_modality (L_P) ->  L_P OVER te_interval te_fluent R_P
     {506, 5}, // 263: te_modality (L_P) ->  L_P SOMEWHERE te_interval te_fluent R_P
     {506, 5}, // 264: te_modality (L_P) ->  L_P ANYWHERE te_interval te_fluent R_P
     {506, 5}, // 265: te_modality (L_P) ->  L_P TRANSITION_OVER te_interval te_fluent R_P
     {506, 5}, // 266: te_modality (L_P) ->  L_P name te_interval te_fluent R_P
     {507, 1}, // 267: te_fluent ->  atomic_formula_skeleton
     {507, 4}, // 268: te_fluent (L_P) ->  L_P NOT atomic_formula_skeleton R_P
     {508, 5}, // 269: te_time_modality_user (L_P) ->  L_P name interval te_fluent R_P
     {496, 1}, // 270: bracket (L_B) ->  L_B
     {496, 1}, // 271: bracket (R_B) ->  R_B
     {390, 0}, // 272: function_typed_list_atomic_function_skeleton ->  <empty>
     {390, 4}, // 273: function_typed_list_atomic_function_skeleton (MINUS) ->  nvList_atomic_function_skeleton MINUS function_type function_typed_list_atomic_function_skeleton
     {390, 1}, // 274: function_typed_list_atomic_function_skeleton ->  nvList_atomic_function_skeleton
     {382, 1}, // 275: typed_list_name ->  list_name
     {382, 4}, // 276: typed_list_name (MINUS) ->  nvList_name MINUS type typed_list_name
     {386, 1}, // 277: typed_list_variable ->  list_variable
     {386, 4}, // 278: typed_list_variable (MINUS) ->  nvList_variable MINUS type typed_list_variable
     {405, 2}, // 279: emptyOr_pre_GD (L_P) ->  L_P R_P
     {405, 1}, // 280: emptyOr_pre_GD ->  pre_GD
     {406, 2}, // 281: emptyOr_effect (L_P) ->  L_P R_P
     {406, 1}, // 282: emptyOr_effect ->  effect
     {437, 2}, // 283: emptyOr_da_GD (L_P) ->  L_P R_P
     {437, 1}, // 284: emptyOr_da_GD ->  da_GD
     {438, 2}, // 285: emptyOr_da_effect (L_P) ->  L_P R_P
     {438, 1}, // 286: emptyOr_da_effect ->  da_effect
     {490, 2}, // 287: emptyOr_te_da_GD (L_P) ->  L_P R_P
     {490, 1}, // 288: emptyOr_te_da_GD ->  te_da_GD
     {491, 2}, // 289: emptyOr_te_da_effect (L_P) ->  L_P R_P
     {491, 1}, // 290: emptyOr_te_da_effect ->  te_da_effect
     {414, 1}, // 291: literal_term ->  atomic_formula_term
     {414, 4}, // 292: literal_term (L_P) ->  L_P NOT atomic_formula_term R_P
     {471, 1}, // 293: literal_name ->  atomic_formula_name
     {471, 4}, // 294: literal_name (L_P) ->  L_P NOT atomic_formula_name R_P
     {413, 4}, // 295: atomic_formula_term (L_P) ->  L_P predicate list_term R_P
     {413, 5}, // 296: atomic_formula_term (L_P) ->  L_P EQ term term R_P
     {513, 4}, // 297: atomic_formula_name (L_P) ->  L_P predicate list_name R_P
     {513, 5}, // 298: atomic_formula_name (L_P) ->  L_P EQ name name R_P
     {380, 2}, // 299: nvList_require_key ->  require_key list_require_key
     {510, 2}, // 300: nvList_name ->  name list_name
     {383, 2}, // 301: nvList_atomic_formula_skeleton ->  atomic_formula_skeleton list_atomic_formula_skeleton
     {512, 2}, // 302: nvList_variable ->  variable list_variable
     {509, 2}, // 303: nvList_atomic_function_skeleton ->  atomic_function_skeleton list_atomic_function_skeleton
     {400, 2}, // 304: nvList_primitive_type ->  primitive_type list_primitive_type
     {425, 2}, // 305: nvList_f_exp ->  f_exp list_f_exp
     {486, 2}, // 306: nvList_te_time_specifier ->  te_time_specifier list_te_time_specifier
     {487, 2}, // 307: nvList_te_interval_alias ->  te_interval_alias list_te_interval_alias
     {492, 2}, // 308: nvList_te_time_modality_user ->  te_time_modality_user list_te_time_modality_user
     {489, 2}, // 309: nvList_te_time_constraints ->  te_time_constraints list_te_time_constraints
     {446, 2}, // 310: nvList_simple_duration_constraint ->  simple_duration_constraint list_simple_duration_constraint
     {457, 2}, // 311: nvList_f_exp_da ->  f_exp_da list_f_exp_da
     {481, 2}, // 312: nvList_metric_f_exp ->  metric_f_exp list_metric_f_exp
     {379, 0}, // 313: list_structure_def ->  <empty>
     {379, 2}, // 314: list_structure_def ->  structure_def list_structure_def
     {514, 0}, // 315: list_require_key ->  <empty>
     {514, 2}, // 316: list_require_key ->  require_key list_require_key
     {473, 0}, // 317: list_name ->  <empty>
     {473, 2}, // 318: list_name ->  name list_name
     {515, 0}, // 319: list_atomic_formula_skeleton ->  <empty>
     {515, 2}, // 320: list_atomic_formula_skeleton ->  atomic_formula_skeleton list_atomic_formula_skeleton
     {511, 0}, // 321: list_variable ->  <empty>
     {511, 2}, // 322: list_variable ->  variable list_variable
     {516, 0}, // 323: list_atomic_function_skeleton ->  <empty>
     {516, 2}, // 324: list_atomic_function_skeleton ->  atomic_function_skeleton list_atomic_function_skeleton
     {517, 0}, // 325: list_primitive_type ->  <empty>
     {517, 2}, // 326: list_primitive_type ->  primitive_type list_primitive_type
     {409, 0}, // 327: list_pre_GD ->  <empty>
     {409, 2}, // 328: list_pre_GD ->  pre_GD list_pre_GD
     {421, 0}, // 329: list_term ->  <empty>
     {421, 2}, // 330: list_term ->  term list_term
     {415, 0}, // 331: list_GD ->  <empty>
     {415, 2}, // 332: list_GD ->  GD list_GD
     {518, 0}, // 333: list_f_exp ->  <empty>
     {518, 2}, // 334: list_f_exp ->  f_exp list_f_exp
     {428, 0}, // 335: list_c_effect ->  <empty>
     {428, 2}, // 336: list_c_effect ->  c_effect list_c_effect
     {433, 0}, // 337: list_p_effect ->  <empty>
     {433, 2}, // 338: list_p_effect ->  p_effect list_p_effect
     {519, 0}, // 339: list_te_time_specifier ->  <empty>
     {519, 2}, // 340: list_te_time_specifier ->  te_time_specifier list_te_time_specifier
     {520, 0}, // 341: list_te_interval_alias ->  <empty>
     {520, 2}, // 342: list_te_interval_alias ->  te_interval_alias list_te_interval_alias
     {521, 0}, // 343: list_te_time_modality_user ->  <empty>
     {521, 2}, // 344: list_te_time_modality_user ->  te_time_modality_user list_te_time_modality_user
     {522, 0}, // 345: list_te_time_constraints ->  <empty>
     {522, 2}, // 346: list_te_time_constraints ->  te_time_constraints list_te_time_constraints
     {500, 0}, // 347: list_te_da_GD ->  <empty>
     {500, 2}, // 348: list_te_da_GD ->  te_da_GD list_te_da_GD
     {504, 0}, // 349: list_te_da_effect ->  <empty>
     {504, 2}, // 350: list_te_da_effect ->  te_da_effect list_te_da_effect
     {441, 0}, // 351: list_da_GD ->  <empty>
     {441, 2}, // 352: list_da_GD ->  da_GD list_da_GD
     {523, 0}, // 353: list_simple_duration_constraint ->  <empty>
     {523, 2}, // 354: list_simple_duration_constraint ->  simple_duration_constraint list_simple_duration_constraint
     {451, 0}, // 355: list_da_effect ->  <empty>
     {451, 2}, // 356: list_da_effect ->  da_effect list_da_effect
     {524, 0}, // 357: list_f_exp_da ->  <empty>
     {524, 2}, // 358: list_f_exp_da ->  f_exp_da list_f_exp_da
     {469, 0}, // 359: list_init_el ->  <empty>
     {469, 2}, // 360: list_init_el ->  init_el list_init_el
     {475, 0}, // 361: list_pref_con_GD ->  <empty>
     {475, 2}, // 362: list_pref_con_GD ->  pref_con_GD list_pref_con_GD
     {477, 0}, // 363: list_con_GD ->  <empty>
     {477, 2}, // 364: list_con_GD ->  con_GD list_con_GD
     {525, 0}, // 365: list_metric_f_exp ->  <empty>
     {525, 2}, // 366: list_metric_f_exp ->  metric_f_exp list_metric_f_exp
     {526, 1}, // 367: begin_$ ->  begin
};

// State info and SR__ transitions for each state.


SR__ s_0[] =
{
    { { REQ_TOKEN}, { 5} },           
    { {       362}, { 1} }, // begin  
    { {       363}, { 2} }, // domain 
    { {       364}, { 3} }, // problem
    { {       257}, { 4} }, // L_P    
    { {         0}, { 0} },           
};

SR__ s_1[] =
{
    { { REQ_TOKEN}, {            2} }, 
    { {     _EOF_}, { PARSE_ACCEPT} }, 
    { {         0}, {            0} }, 
};

SR__ s_2[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -1} }, 
};

SR__ s_3[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -2} }, 
};

SR__ s_4[] =
{
    { { REQ_TOKEN}, { 2} },          
    { {       271}, { 5} }, // DEFINE
    { {         0}, { 0} },          
};

SR__ s_5[] =
{
    { { REQ_TOKEN}, { 2} },       
    { {       257}, { 6} }, // L_P
    { {         0}, { 0} },       
};

SR__ s_6[] =
{
    { { REQ_TOKEN}, { 3} },           
    { {       272}, { 7} }, // DOMAIN 
    { {       335}, { 8} }, // PROBLEM
    { {         0}, { 0} },           
};

SR__ s_7[] =
{
    { { REQ_TOKEN}, {  3} },        
    { {       365}, {  9} }, // name
    { {       361}, { 10} }, // NAME
    { {         0}, {  0} },        
};

SR__ s_8[] =
{
    { { REQ_TOKEN}, {  3} },        
    { {       365}, { 11} }, // name
    { {       361}, { 10} }, // NAME
    { {         0}, {  0} },        
};

SR__ s_9[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       258}, { 12} }, // R_P
    { {         0}, {  0} },       
};

SR__ s_10[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -17} }, 
};

SR__ s_11[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       258}, { 13} }, // R_P
    { {         0}, {  0} },       
};

SR__ s_12[] =
{
    { { REQ_DEF}, {   21} },                          
    { {     366}, {   14} }, // domain_option1        
    { {     367}, {   15} }, // domain_option2        
    { {     368}, {   16} }, // require_def           
    { {     369}, {   17} }, // domain_option3        
    { {     370}, {   18} }, // types_def             
    { {     257}, {   19} }, // L_P                   
    { {     371}, {   20} }, // domain_option4        
    { {     372}, {   21} }, // constants_def         
    { {     373}, {   22} }, // domain_option5        
    { {     374}, {   23} }, // predicates_def        
    { {     375}, {   24} }, // domain_option6        
    { {     376}, {   25} }, // functions_def         
    { {     377}, {   26} }, // domain_option7        
    { {     378}, {   27} }, // constraints_domain    
    { {     379}, {   28} }, // list_structure_def    
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {       0}, { -313} },                          
};

SR__ s_13[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       257}, { 34} }, // L_P
    { {         0}, {  0} },       
};

SR__ s_14[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -3} }, 
};

SR__ s_15[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -4} }, 
};

SR__ s_16[] =
{
    { { REQ_DEF}, {   19} },                          
    { {     367}, {   35} }, // domain_option2        
    { {     369}, {   17} }, // domain_option3        
    { {     370}, {   18} }, // types_def             
    { {     371}, {   20} }, // domain_option4        
    { {     372}, {   21} }, // constants_def         
    { {     257}, {   36} }, // L_P                   
    { {     373}, {   22} }, // domain_option5        
    { {     374}, {   23} }, // predicates_def        
    { {     375}, {   24} }, // domain_option6        
    { {     376}, {   25} }, // functions_def         
    { {     377}, {   26} }, // domain_option7        
    { {     378}, {   27} }, // constraints_domain    
    { {     379}, {   28} }, // list_structure_def    
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {       0}, { -313} },                          
};

SR__ s_17[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -6} }, 
};

SR__ s_18[] =
{
    { { REQ_DEF}, {   17} },                          
    { {     369}, {   37} }, // domain_option3        
    { {     371}, {   20} }, // domain_option4        
    { {     372}, {   21} }, // constants_def         
    { {     373}, {   22} }, // domain_option5        
    { {     374}, {   23} }, // predicates_def        
    { {     257}, {   38} }, // L_P                   
    { {     375}, {   24} }, // domain_option6        
    { {     376}, {   25} }, // functions_def         
    { {     377}, {   26} }, // domain_option7        
    { {     378}, {   27} }, // constraints_domain    
    { {     379}, {   28} }, // list_structure_def    
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {       0}, { -313} },                          
};

SR__ s_19[] =
{
    { { REQ_TOKEN}, { 10} },                   
    { {       273}, { 39} }, // REQUIREMENTS   
    { {       295}, { 40} }, // TYPES          
    { {       296}, { 41} }, // CONSTANTS      
    { {       297}, { 42} }, // PREDICATES     
    { {       298}, { 43} }, // FUNCTIONS      
    { {       292}, { 44} }, // CONSTRAINTS    
    { {       302}, { 45} }, // ACTION         
    { {       320}, { 46} }, // DURATIVE_ACTION
    { {       334}, { 47} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_20[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -8} }, 
};

SR__ s_21[] =
{
    { { REQ_DEF}, {   15} },                          
    { {     371}, {   48} }, // domain_option4        
    { {     373}, {   22} }, // domain_option5        
    { {     374}, {   23} }, // predicates_def        
    { {     375}, {   24} }, // domain_option6        
    { {     376}, {   25} }, // functions_def         
    { {     257}, {   49} }, // L_P                   
    { {     377}, {   26} }, // domain_option7        
    { {     378}, {   27} }, // constraints_domain    
    { {     379}, {   28} }, // list_structure_def    
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {       0}, { -313} },                          
};

SR__ s_22[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -10} }, 
};

SR__ s_23[] =
{
    { { REQ_DEF}, {   13} },                          
    { {     373}, {   50} }, // domain_option5        
    { {     375}, {   24} }, // domain_option6        
    { {     376}, {   25} }, // functions_def         
    { {     377}, {   26} }, // domain_option7        
    { {     378}, {   27} }, // constraints_domain    
    { {     257}, {   51} }, // L_P                   
    { {     379}, {   28} }, // list_structure_def    
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {       0}, { -313} },                          
};

SR__ s_24[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -12} }, 
};

SR__ s_25[] =
{
    { { REQ_DEF}, {   11} },                          
    { {     375}, {   52} }, // domain_option6        
    { {     377}, {   26} }, // domain_option7        
    { {     378}, {   27} }, // constraints_domain    
    { {     379}, {   28} }, // list_structure_def    
    { {     257}, {   53} }, // L_P                   
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {       0}, { -313} },                          
};

SR__ s_26[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -14} }, 
};

SR__ s_27[] =
{
    { { REQ_DEF}, {    9} },                          
    { {     377}, {   54} }, // domain_option7        
    { {     379}, {   28} }, // list_structure_def    
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {     257}, {   55} }, // L_P                   
    { {       0}, { -313} },                          
};

SR__ s_28[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       258}, { 56} }, // R_P
    { {         0}, {  0} },       
};

SR__ s_29[] =
{
    { { REQ_DEF}, {    8} },                          
    { {     379}, {   57} }, // list_structure_def    
    { {     394}, {   29} }, // structure_def         
    { {     395}, {   30} }, // action_def            
    { {     396}, {   31} }, // durative_action_def   
    { {     397}, {   32} }, // te_durative_action_def
    { {     398}, {   33} }, // derived_def           
    { {     257}, {   55} }, // L_P                   
    { {       0}, { -313} },                          
};

SR__ s_30[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -52} }, 
};

SR__ s_31[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -53} }, 
};

SR__ s_32[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -54} }, 
};

SR__ s_33[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -55} }, 
};

SR__ s_34[] =
{
    { { REQ_TOKEN}, {  2} },             
    { {       336}, { 58} }, // DD_DOMAIN
    { {         0}, {  0} },             
};

SR__ s_35[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -5} }, 
};

SR__ s_36[] =
{
    { { REQ_TOKEN}, {  9} },                   
    { {       295}, { 40} }, // TYPES          
    { {       296}, { 41} }, // CONSTANTS      
    { {       297}, { 42} }, // PREDICATES     
    { {       298}, { 43} }, // FUNCTIONS      
    { {       292}, { 44} }, // CONSTRAINTS    
    { {       302}, { 45} }, // ACTION         
    { {       320}, { 46} }, // DURATIVE_ACTION
    { {       334}, { 47} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_37[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -7} }, 
};

SR__ s_38[] =
{
    { { REQ_TOKEN}, {  8} },                   
    { {       296}, { 41} }, // CONSTANTS      
    { {       297}, { 42} }, // PREDICATES     
    { {       298}, { 43} }, // FUNCTIONS      
    { {       292}, { 44} }, // CONSTRAINTS    
    { {       302}, { 45} }, // ACTION         
    { {       320}, { 46} }, // DURATIVE_ACTION
    { {       334}, { 47} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_39[] =
{
    { { REQ_TOKEN}, { 24} },                             
    { {       380}, { 59} }, // nvList_require_key       
    { {       381}, { 60} }, // require_key              
    { {       274}, { 61} }, // STRIPS                   
    { {       275}, { 62} }, // TYPING                   
    { {       276}, { 63} }, // NEGATIVE_PRECONDITIONS   
    { {       277}, { 64} }, // DISJUNCTIVE_PRECONDITIONS
    { {       278}, { 65} }, // EQUALITY                 
    { {       279}, { 66} }, // EXISTENTIAL_PRECONDITIONS
    { {       280}, { 67} }, // UNIVERSAL_PRECONDITIONS  
    { {       281}, { 68} }, // QUANTIFIED_PRECONDITIONS 
    { {       282}, { 69} }, // CONDITIONAL_EFFECTS      
    { {       283}, { 70} }, // FLUENTS                  
    { {       284}, { 71} }, // NUMERIC_FLUENTS          
    { {       285}, { 72} }, // ADL                      
    { {       286}, { 73} }, // DURACTIVE_ACTIONS        
    { {       287}, { 74} }, // DURATION_INEQUALITIES    
    { {       288}, { 75} }, // CONTINUOUS_EFFECTS       
    { {       289}, { 76} }, // DERIVED_PREDICATES       
    { {       290}, { 77} }, // TIMED_INITIAL_LITERALS   
    { {       291}, { 78} }, // PREFERENCES              
    { {       292}, { 79} }, // CONSTRAINTS              
    { {       293}, { 80} }, // ACTION_COSTS             
    { {       294}, { 81} }, // TEMPORALLY_EXTENDED      
    { {         0}, {  0} },                             
};

SR__ s_40[] =
{
    { { REQ_DEF}, {    6} },                   
    { {     382}, {   82} }, // typed_list_name
    { {     473}, {   83} }, // list_name      
    { {     510}, {   84} }, // nvList_name    
    { {     365}, {   85} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -317} },                   
};

SR__ s_41[] =
{
    { { REQ_DEF}, {    6} },                   
    { {     382}, {   86} }, // typed_list_name
    { {     473}, {   83} }, // list_name      
    { {     510}, {   84} }, // nvList_name    
    { {     365}, {   85} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -317} },                   
};

SR__ s_42[] =
{
    { { REQ_TOKEN}, {  4} },                                  
    { {       383}, { 87} }, // nvList_atomic_formula_skeleton
    { {       384}, { 88} }, // atomic_formula_skeleton       
    { {       257}, { 89} }, // L_P                           
    { {         0}, {  0} },                                  
};

SR__ s_43[] =
{
    { { REQ_DEF}, {    5} },                                                
    { {     390}, {   90} }, // function_typed_list_atomic_function_skeleton
    { {     509}, {   91} }, // nvList_atomic_function_skeleton             
    { {     388}, {   92} }, // atomic_function_skeleton                    
    { {     257}, {   93} }, // L_P                                         
    { {       0}, { -272} },                                                
};

SR__ s_44[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       393}, { 94} }, // con_GD
    { {       257}, { 95} }, // L_P   
    { {         0}, {  0} },          
};

SR__ s_45[] =
{
    { { REQ_TOKEN}, {  4} },                 
    { {       401}, { 96} }, // action_symbol
    { {       365}, { 97} }, // name         
    { {       361}, { 10} }, // NAME         
    { {         0}, {  0} },                 
};

SR__ s_46[] =
{
    { { REQ_TOKEN}, {  4} },             
    { {       434}, { 98} }, // da_symbol
    { {       365}, { 99} }, // name     
    { {       361}, { 10} }, // NAME     
    { {         0}, {  0} },             
};

SR__ s_47[] =
{
    { { REQ_TOKEN}, {   3} },                           
    { {       384}, { 100} }, // atomic_formula_skeleton
    { {       257}, {  89} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_48[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -9} }, 
};

SR__ s_49[] =
{
    { { REQ_TOKEN}, {  7} },                   
    { {       297}, { 42} }, // PREDICATES     
    { {       298}, { 43} }, // FUNCTIONS      
    { {       292}, { 44} }, // CONSTRAINTS    
    { {       302}, { 45} }, // ACTION         
    { {       320}, { 46} }, // DURATIVE_ACTION
    { {       334}, { 47} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_50[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -11} }, 
};

SR__ s_51[] =
{
    { { REQ_TOKEN}, {  6} },                   
    { {       298}, { 43} }, // FUNCTIONS      
    { {       292}, { 44} }, // CONSTRAINTS    
    { {       302}, { 45} }, // ACTION         
    { {       320}, { 46} }, // DURATIVE_ACTION
    { {       334}, { 47} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_52[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -13} }, 
};

SR__ s_53[] =
{
    { { REQ_TOKEN}, {  5} },                   
    { {       292}, { 44} }, // CONSTRAINTS    
    { {       302}, { 45} }, // ACTION         
    { {       320}, { 46} }, // DURATIVE_ACTION
    { {       334}, { 47} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_54[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -15} }, 
};

SR__ s_55[] =
{
    { { REQ_TOKEN}, {  4} },                   
    { {       302}, { 45} }, // ACTION         
    { {       320}, { 46} }, // DURATIVE_ACTION
    { {       334}, { 47} }, // DERIVED        
    { {         0}, {  0} },                   
};

SR__ s_56[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -16} }, 
};

SR__ s_57[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -314} }, 
};

SR__ s_58[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       365}, { 101} }, // name
    { {       361}, {  10} }, // NAME
    { {         0}, {   0} },        
};

SR__ s_59[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 102} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_60[] =
{
    { { REQ_DEF}, {   24} },                             
    { {     514}, {  103} }, // list_require_key         
    { {     381}, {  104} }, // require_key              
    { {     274}, {   61} }, // STRIPS                   
    { {     275}, {   62} }, // TYPING                   
    { {     276}, {   63} }, // NEGATIVE_PRECONDITIONS   
    { {     277}, {   64} }, // DISJUNCTIVE_PRECONDITIONS
    { {     278}, {   65} }, // EQUALITY                 
    { {     279}, {   66} }, // EXISTENTIAL_PRECONDITIONS
    { {     280}, {   67} }, // UNIVERSAL_PRECONDITIONS  
    { {     281}, {   68} }, // QUANTIFIED_PRECONDITIONS 
    { {     282}, {   69} }, // CONDITIONAL_EFFECTS      
    { {     283}, {   70} }, // FLUENTS                  
    { {     284}, {   71} }, // NUMERIC_FLUENTS          
    { {     285}, {   72} }, // ADL                      
    { {     286}, {   73} }, // DURACTIVE_ACTIONS        
    { {     287}, {   74} }, // DURATION_INEQUALITIES    
    { {     288}, {   75} }, // CONTINUOUS_EFFECTS       
    { {     289}, {   76} }, // DERIVED_PREDICATES       
    { {     290}, {   77} }, // TIMED_INITIAL_LITERALS   
    { {     291}, {   78} }, // PREFERENCES              
    { {     292}, {   79} }, // CONSTRAINTS              
    { {     293}, {   80} }, // ACTION_COSTS             
    { {     294}, {   81} }, // TEMPORALLY_EXTENDED      
    { {       0}, { -315} },                             
};

SR__ s_61[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -19} }, 
};

SR__ s_62[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -20} }, 
};

SR__ s_63[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -21} }, 
};

SR__ s_64[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -22} }, 
};

SR__ s_65[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -23} }, 
};

SR__ s_66[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -24} }, 
};

SR__ s_67[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -25} }, 
};

SR__ s_68[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -26} }, 
};

SR__ s_69[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -27} }, 
};

SR__ s_70[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -28} }, 
};

SR__ s_71[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -29} }, 
};

SR__ s_72[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -30} }, 
};

SR__ s_73[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -31} }, 
};

SR__ s_74[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -32} }, 
};

SR__ s_75[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -33} }, 
};

SR__ s_76[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -34} }, 
};

SR__ s_77[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -35} }, 
};

SR__ s_78[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -36} }, 
};

SR__ s_79[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -37} }, 
};

SR__ s_80[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -38} }, 
};

SR__ s_81[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -39} }, 
};

SR__ s_82[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 105} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_83[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -275} }, 
};

SR__ s_84[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       328}, { 106} }, // MINUS
    { {         0}, {   0} },         
};

SR__ s_85[] =
{
    { { REQ_DEF}, {    4} },             
    { {     473}, {  107} }, // list_name
    { {     365}, {  108} }, // name     
    { {     361}, {   10} }, // NAME     
    { {       0}, { -317} },             
};

SR__ s_86[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 109} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_87[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 110} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_88[] =
{
    { { REQ_DEF}, {    4} },                                
    { {     515}, {  111} }, // list_atomic_formula_skeleton
    { {     384}, {  112} }, // atomic_formula_skeleton     
    { {     257}, {   89} }, // L_P                         
    { {       0}, { -319} },                                
};

SR__ s_89[] =
{
    { { REQ_TOKEN}, {   4} },             
    { {       385}, { 113} }, // predicate
    { {       365}, { 114} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_90[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 115} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_91[] =
{
    { { REQ_DEF}, {    2} },         
    { {     328}, {  116} }, // MINUS
    { {       0}, { -274} },         
};

SR__ s_92[] =
{
    { { REQ_DEF}, {    4} },                                 
    { {     516}, {  117} }, // list_atomic_function_skeleton
    { {     388}, {  118} }, // atomic_function_skeleton     
    { {     257}, {   93} }, // L_P                          
    { {       0}, { -323} },                                 
};

SR__ s_93[] =
{
    { { REQ_TOKEN}, {   4} },                   
    { {       389}, { 119} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_94[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 121} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_95[] =
{
    { { REQ_TOKEN}, {  13} },                   
    { {       306}, { 122} }, // AND            
    { {       307}, { 123} }, // FORALL         
    { {       323}, { 124} }, // AT             
    { {       340}, { 125} }, // ALWAYS         
    { {       341}, { 126} }, // SOMETIME       
    { {       342}, { 127} }, // WITHIN         
    { {       343}, { 128} }, // AT_MOST_ONCE   
    { {       344}, { 129} }, // SOMETIME_AFTER 
    { {       345}, { 130} }, // SOMETIME_BEFORE
    { {       346}, { 131} }, // ALWAYS_WITHIN  
    { {       347}, { 132} }, // HOLD_DURING    
    { {       348}, { 133} }, // HOLD_AFTER     
    { {         0}, {   0} },                   
};

SR__ s_96[] =
{
    { { REQ_TOKEN}, {   2} },              
    { {       303}, { 134} }, // PARAMETERS
    { {         0}, {   0} },              
};

SR__ s_97[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -61} }, 
};

SR__ s_98[] =
{
    { { REQ_TOKEN}, {   2} },              
    { {       303}, { 135} }, // PARAMETERS
    { {         0}, {   0} },              
};

SR__ s_99[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -125} }, 
};

SR__ s_100[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 136} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_101[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 141} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_102[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -18} }, 
};

SR__ s_103[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -299} }, 
};

SR__ s_104[] =
{
    { { REQ_DEF}, {   24} },                             
    { {     514}, {  142} }, // list_require_key         
    { {     381}, {  104} }, // require_key              
    { {     274}, {   61} }, // STRIPS                   
    { {     275}, {   62} }, // TYPING                   
    { {     276}, {   63} }, // NEGATIVE_PRECONDITIONS   
    { {     277}, {   64} }, // DISJUNCTIVE_PRECONDITIONS
    { {     278}, {   65} }, // EQUALITY                 
    { {     279}, {   66} }, // EXISTENTIAL_PRECONDITIONS
    { {     280}, {   67} }, // UNIVERSAL_PRECONDITIONS  
    { {     281}, {   68} }, // QUANTIFIED_PRECONDITIONS 
    { {     282}, {   69} }, // CONDITIONAL_EFFECTS      
    { {     283}, {   70} }, // FLUENTS                  
    { {     284}, {   71} }, // NUMERIC_FLUENTS          
    { {     285}, {   72} }, // ADL                      
    { {     286}, {   73} }, // DURACTIVE_ACTIONS        
    { {     287}, {   74} }, // DURATION_INEQUALITIES    
    { {     288}, {   75} }, // CONTINUOUS_EFFECTS       
    { {     289}, {   76} }, // DERIVED_PREDICATES       
    { {     290}, {   77} }, // TIMED_INITIAL_LITERALS   
    { {     291}, {   78} }, // PREFERENCES              
    { {     292}, {   79} }, // CONSTRAINTS              
    { {     293}, {   80} }, // ACTION_COSTS             
    { {     294}, {   81} }, // TEMPORALLY_EXTENDED      
    { {       0}, { -315} },                             
};

SR__ s_105[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -40} }, 
};

SR__ s_106[] =
{
    { { REQ_TOKEN}, {   7} },                  
    { {       392}, { 143} }, // type          
    { {       399}, { 144} }, // primitive_type
    { {       257}, { 145} }, // L_P           
    { {       365}, { 146} }, // name          
    { {       300}, { 147} }, // OBJECT        
    { {       361}, {  10} }, // NAME          
    { {         0}, {   0} },                  
};

SR__ s_107[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, { -318} }, // R_P
    { {       0}, { -300} },       
};

SR__ s_108[] =
{
    { { REQ_DEF}, {    4} },             
    { {     473}, {  148} }, // list_name
    { {     365}, {  108} }, // name     
    { {     361}, {   10} }, // NAME     
    { {       0}, { -317} },             
};

SR__ s_109[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -41} }, 
};

SR__ s_110[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -42} }, 
};

SR__ s_111[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -301} }, 
};

SR__ s_112[] =
{
    { { REQ_DEF}, {    4} },                                
    { {     515}, {  149} }, // list_atomic_formula_skeleton
    { {     384}, {  112} }, // atomic_formula_skeleton     
    { {     257}, {   89} }, // L_P                         
    { {       0}, { -319} },                                
};

SR__ s_113[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  150} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_114[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -44} }, 
};

SR__ s_115[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -48} }, 
};

SR__ s_116[] =
{
    { { REQ_TOKEN}, {   9} },                  
    { {       391}, { 155} }, // function_type 
    { {       299}, { 156} }, // NUMBER        
    { {       392}, { 157} }, // type          
    { {       399}, { 144} }, // primitive_type
    { {       257}, { 145} }, // L_P           
    { {       365}, { 146} }, // name          
    { {       300}, { 147} }, // OBJECT        
    { {       361}, {  10} }, // NAME          
    { {         0}, {   0} },                  
};

SR__ s_117[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -303} }, 
};

SR__ s_118[] =
{
    { { REQ_DEF}, {    4} },                                 
    { {     516}, {  158} }, // list_atomic_function_skeleton
    { {     388}, {  118} }, // atomic_function_skeleton     
    { {     257}, {   93} }, // L_P                          
    { {       0}, { -323} },                                 
};

SR__ s_119[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  159} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_120[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -47} }, 
};

SR__ s_121[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -51} }, 
};

SR__ s_122[] =
{
    { { REQ_DEF}, {    4} },               
    { {     477}, {  160} }, // list_con_GD
    { {     393}, {  161} }, // con_GD     
    { {     257}, {   95} }, // L_P        
    { {       0}, { -363} },               
};

SR__ s_123[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 162} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_124[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       330}, { 163} }, // END
    { {         0}, {   0} },       
};

SR__ s_125[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 164} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_126[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 168} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_127[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       422}, { 169} }, // number
    { {       270}, { 170} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_128[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 171} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_129[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 172} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_130[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 173} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_131[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       422}, { 174} }, // number
    { {       270}, { 170} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_132[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       422}, { 175} }, // number
    { {       270}, { 170} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_133[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       422}, { 176} }, // number
    { {       270}, { 170} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_134[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 177} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_135[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 178} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_136[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 179} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_137[] =
{
    { { REQ_DEF}, {   1} }, 
    { {       0}, { -75} }, 
};

SR__ s_138[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -76} }, 
};

SR__ s_139[] =
{
    { { REQ_TOKEN}, {  16} },               
    { {       306}, { 180} }, // AND        
    { {       309}, { 181} }, // OR         
    { {       310}, { 182} }, // NOT        
    { {       311}, { 183} }, // IMPLY      
    { {       312}, { 184} }, // EXISTS     
    { {       307}, { 185} }, // FORALL     
    { {       385}, { 186} }, // predicate  
    { {       262}, { 187} }, // EQ         
    { {       417}, { 188} }, // binary_comp
    { {       365}, { 114} }, // name       
    { {       266}, { 189} }, // GT         
    { {       267}, { 190} }, // LT         
    { {       268}, { 191} }, // GOE        
    { {       269}, { 192} }, // LOE        
    { {       361}, {  10} }, // NAME       
    { {         0}, {   0} },               
};

SR__ s_140[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -83} }, 
};

SR__ s_141[] =
{
    { { REQ_TOKEN}, {   8} },                      
    { {       458}, { 193} }, // problem_option1   
    { {       459}, { 194} }, // problem_option2   
    { {       368}, { 195} }, // require_def       
    { {       460}, { 196} }, // problem_option3   
    { {       461}, { 197} }, // object_declaration
    { {       257}, { 198} }, // L_P               
    { {       462}, { 199} }, // init              
    { {         0}, {   0} },                      
};

SR__ s_142[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -316} }, 
};

SR__ s_143[] =
{
    { { REQ_DEF}, {    6} },                   
    { {     382}, {  200} }, // typed_list_name
    { {     473}, {   83} }, // list_name      
    { {     510}, {   84} }, // nvList_name    
    { {     365}, {   85} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -317} },                   
};

SR__ s_144[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -58} }, 
};

SR__ s_145[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       301}, { 201} }, // EITHER
    { {         0}, {   0} },          
};

SR__ s_146[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -56} }, 
};

SR__ s_147[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -57} }, 
};

SR__ s_148[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -318} }, 
};

SR__ s_149[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -320} }, 
};

SR__ s_150[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 202} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_151[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -277} }, 
};

SR__ s_152[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       328}, { 203} }, // MINUS
    { {         0}, {   0} },         
};

SR__ s_153[] =
{
    { { REQ_DEF}, {    4} },                 
    { {     511}, {  204} }, // list_variable
    { {     387}, {  205} }, // variable     
    { {     333}, {  154} }, // Q_M          
    { {       0}, { -321} },                 
};

SR__ s_154[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       365}, { 206} }, // name
    { {       361}, {  10} }, // NAME
    { {         0}, {   0} },        
};

SR__ s_155[] =
{
    { { REQ_DEF}, {    5} },                                                
    { {     390}, {  207} }, // function_typed_list_atomic_function_skeleton
    { {     509}, {   91} }, // nvList_atomic_function_skeleton             
    { {     388}, {   92} }, // atomic_function_skeleton                    
    { {     257}, {   93} }, // L_P                                         
    { {       0}, { -272} },                                                
};

SR__ s_156[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -49} }, 
};

SR__ s_157[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -50} }, 
};

SR__ s_158[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -324} }, 
};

SR__ s_159[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 208} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_160[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 209} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_161[] =
{
    { { REQ_DEF}, {    4} },               
    { {     477}, {  210} }, // list_con_GD
    { {     393}, {  161} }, // con_GD     
    { {     257}, {   95} }, // L_P        
    { {       0}, { -363} },               
};

SR__ s_162[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  211} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_163[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 212} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_164[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 213} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_165[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -207} }, 
};

SR__ s_166[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -208} }, 
};

SR__ s_167[] =
{
    { { REQ_TOKEN}, {  26} },                   
    { {       306}, { 214} }, // AND            
    { {       307}, { 215} }, // FORALL         
    { {       323}, { 124} }, // AT             
    { {       340}, { 125} }, // ALWAYS         
    { {       341}, { 126} }, // SOMETIME       
    { {       342}, { 127} }, // WITHIN         
    { {       343}, { 128} }, // AT_MOST_ONCE   
    { {       344}, { 129} }, // SOMETIME_AFTER 
    { {       345}, { 130} }, // SOMETIME_BEFORE
    { {       346}, { 131} }, // ALWAYS_WITHIN  
    { {       347}, { 132} }, // HOLD_DURING    
    { {       348}, { 133} }, // HOLD_AFTER     
    { {       309}, { 181} }, // OR             
    { {       310}, { 182} }, // NOT            
    { {       311}, { 183} }, // IMPLY          
    { {       312}, { 184} }, // EXISTS         
    { {       385}, { 186} }, // predicate      
    { {       262}, { 187} }, // EQ             
    { {       417}, { 188} }, // binary_comp    
    { {       365}, { 114} }, // name           
    { {       266}, { 189} }, // GT             
    { {       267}, { 190} }, // LT             
    { {       268}, { 191} }, // GOE            
    { {       269}, { 192} }, // LOE            
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_168[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 216} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_169[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 217} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_170[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -94} }, 
};

SR__ s_171[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 218} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_172[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 219} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_173[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 220} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_174[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 221} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_175[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       422}, { 222} }, // number
    { {       270}, { 170} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_176[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 223} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_177[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  224} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_178[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  225} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_179[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -167} }, 
};

SR__ s_180[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     415}, {  226} }, // list_GD            
    { {     410}, {  227} }, // GD                 
    { {     413}, {  137} }, // atomic_formula_term
    { {     414}, {  138} }, // literal_term       
    { {     257}, {  139} }, // L_P                
    { {     416}, {  140} }, // f_comp             
    { {       0}, { -331} },                       
};

SR__ s_181[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     415}, {  228} }, // list_GD            
    { {     410}, {  227} }, // GD                 
    { {     413}, {  137} }, // atomic_formula_term
    { {     414}, {  138} }, // literal_term       
    { {     257}, {  139} }, // L_P                
    { {     416}, {  140} }, // f_comp             
    { {       0}, { -331} },                       
};

SR__ s_182[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 229} }, // GD                 
    { {       413}, { 230} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_183[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 231} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_184[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 232} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_185[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 233} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_186[] =
{
    { { REQ_DEF}, {    9} },                 
    { {     421}, {  234} }, // list_term    
    { {     419}, {  235} }, // term         
    { {     365}, {  236} }, // name         
    { {     387}, {  237} }, // variable     
    { {     420}, {  238} }, // function_term
    { {     361}, {   10} }, // NAME         
    { {     333}, {  154} }, // Q_M          
    { {     257}, {  239} }, // L_P          
    { {       0}, { -329} },                 
};

SR__ s_187[] =
{
    { { REQ_DEF}, {    8} },                 
    { {     419}, {  240} }, // term         
    { {     365}, {  236} }, // name         
    { {     387}, {  237} }, // variable     
    { {     420}, {  238} }, // function_term
    { {     361}, {   10} }, // NAME         
    { {     333}, {  154} }, // Q_M          
    { {     257}, {  239} }, // L_P          
    { {       0}, { -104} },                 
};

SR__ s_188[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       418}, { 241} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_189[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -102} }, 
};

SR__ s_190[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -103} }, 
};

SR__ s_191[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -105} }, 
};

SR__ s_192[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -106} }, 
};

SR__ s_193[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -168} }, 
};

SR__ s_194[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -169} }, 
};

SR__ s_195[] =
{
    { { REQ_TOKEN}, {   6} },                      
    { {       459}, { 246} }, // problem_option2   
    { {       460}, { 196} }, // problem_option3   
    { {       461}, { 197} }, // object_declaration
    { {       462}, { 199} }, // init              
    { {       257}, { 247} }, // L_P               
    { {         0}, {   0} },                      
};

SR__ s_196[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -171} }, 
};

SR__ s_197[] =
{
    { { REQ_TOKEN}, {   4} },                   
    { {       460}, { 248} }, // problem_option3
    { {       462}, { 199} }, // init           
    { {       257}, { 249} }, // L_P            
    { {         0}, {   0} },                   
};

SR__ s_198[] =
{
    { { REQ_TOKEN}, {   4} },                
    { {       273}, {  39} }, // REQUIREMENTS
    { {       337}, { 250} }, // OBJECTS     
    { {       338}, { 251} }, // INIT        
    { {         0}, {   0} },                
};

SR__ s_199[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       463}, { 252} }, // goal
    { {       257}, { 253} }, // L_P 
    { {         0}, {   0} },        
};

SR__ s_200[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -276} }, 
};

SR__ s_201[] =
{
    { { REQ_TOKEN}, {   6} },                         
    { {       400}, { 254} }, // nvList_primitive_type
    { {       399}, { 255} }, // primitive_type       
    { {       365}, { 146} }, // name                 
    { {       300}, { 147} }, // OBJECT               
    { {       361}, {  10} }, // NAME                 
    { {         0}, {   0} },                         
};

SR__ s_202[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -43} }, 
};

SR__ s_203[] =
{
    { { REQ_TOKEN}, {   7} },                  
    { {       392}, { 256} }, // type          
    { {       399}, { 144} }, // primitive_type
    { {       257}, { 145} }, // L_P           
    { {       365}, { 146} }, // name          
    { {       300}, { 147} }, // OBJECT        
    { {       361}, {  10} }, // NAME          
    { {         0}, {   0} },                  
};

SR__ s_204[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, { -322} }, // R_P
    { {       0}, { -302} },       
};

SR__ s_205[] =
{
    { { REQ_DEF}, {    4} },                 
    { {     511}, {  257} }, // list_variable
    { {     387}, {  205} }, // variable     
    { {     333}, {  154} }, // Q_M          
    { {       0}, { -321} },                 
};

SR__ s_206[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -45} }, 
};

SR__ s_207[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -273} }, 
};

SR__ s_208[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -46} }, 
};

SR__ s_209[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -195} }, 
};

SR__ s_210[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -364} }, 
};

SR__ s_211[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 258} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_212[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 259} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_213[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -198} }, 
};

SR__ s_214[] =
{
    { { REQ_DEF}, {   11} },                       
    { {     477}, {  160} }, // list_con_GD        
    { {     415}, {  226} }, // list_GD            
    { {     393}, {  161} }, // con_GD             
    { {     410}, {  227} }, // GD                 
    { {     257}, {  167} }, // L_P                
    { {     413}, {  137} }, // atomic_formula_term
    { {     414}, {  138} }, // literal_term       
    { {     416}, {  140} }, // f_comp             
    { {       0}, { -331} },                       
};

SR__ s_215[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 260} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_216[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -199} }, 
};

SR__ s_217[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 261} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_218[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 262} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_219[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 263} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_220[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 264} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_221[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 265} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_222[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       478}, { 266} }, // con2_GD            
    { {       393}, { 165} }, // con_GD             
    { {       410}, { 166} }, // GD                 
    { {       257}, { 167} }, // L_P                
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_223[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 267} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_224[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 268} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_225[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 269} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_226[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 270} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_227[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     415}, {  271} }, // list_GD            
    { {     410}, {  227} }, // GD                 
    { {     413}, {  137} }, // atomic_formula_term
    { {     414}, {  138} }, // literal_term       
    { {     257}, {  139} }, // L_P                
    { {     416}, {  140} }, // f_comp             
    { {       0}, { -331} },                       
};

SR__ s_228[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 272} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_229[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 273} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_230[] =
{
    { { REQ_DEF}, {   2} },       
    { {     258}, { 274} }, // R_P
    { {       0}, { -75} },       
};

SR__ s_231[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 275} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_232[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 276} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_233[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 277} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_234[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 278} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_235[] =
{
    { { REQ_DEF}, {    9} },                 
    { {     421}, {  279} }, // list_term    
    { {     419}, {  235} }, // term         
    { {     365}, {  236} }, // name         
    { {     387}, {  237} }, // variable     
    { {     420}, {  238} }, // function_term
    { {     361}, {   10} }, // NAME         
    { {     333}, {  154} }, // Q_M          
    { {     257}, {  239} }, // L_P          
    { {       0}, { -329} },                 
};

SR__ s_236[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -85} }, 
};

SR__ s_237[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -86} }, 
};

SR__ s_238[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -87} }, 
};

SR__ s_239[] =
{
    { { REQ_TOKEN}, {   4} },                   
    { {       389}, { 280} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_240[] =
{
    { { REQ_TOKEN}, {   8} },                 
    { {       419}, { 281} }, // term         
    { {       365}, { 236} }, // name         
    { {       387}, { 237} }, // variable     
    { {       420}, { 238} }, // function_term
    { {       361}, {  10} }, // NAME         
    { {       333}, { 154} }, // Q_M          
    { {       257}, { 239} }, // L_P          
    { {         0}, {   0} },                 
};

SR__ s_241[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       418}, { 282} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_242[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -89} }, 
};

SR__ s_243[] =
{
    { { REQ_TOKEN}, {  10} },                   
    { {       423}, { 283} }, // binary_op      
    { {       424}, { 284} }, // multi_op       
    { {       328}, { 285} }, // MINUS          
    { {       389}, { 286} }, // function_symbol
    { {       263}, { 287} }, // SLASH          
    { {       264}, { 288} }, // STAR           
    { {       265}, { 289} }, // PLUS           
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_244[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -93} }, 
};

SR__ s_245[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -96} }, 
};

SR__ s_246[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -170} }, 
};

SR__ s_247[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       337}, { 250} }, // OBJECTS
    { {       338}, { 251} }, // INIT   
    { {         0}, {   0} },           
};

SR__ s_248[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -172} }, 
};

SR__ s_249[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       338}, { 251} }, // INIT
    { {         0}, {   0} },        
};

SR__ s_250[] =
{
    { { REQ_DEF}, {    6} },                   
    { {     382}, {  290} }, // typed_list_name
    { {     473}, {   83} }, // list_name      
    { {     510}, {   84} }, // nvList_name    
    { {     365}, {   85} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -317} },                   
};

SR__ s_251[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     469}, {  291} }, // list_init_el       
    { {     470}, {  292} }, // init_el            
    { {     471}, {  293} }, // literal_name       
    { {     257}, {  294} }, // L_P                
    { {     513}, {  295} }, // atomic_formula_name
    { {       0}, { -359} },                       
};

SR__ s_252[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       464}, { 296} }, // problem_option4    
    { {       465}, { 297} }, // constraints_problem
    { {       466}, { 298} }, // problem_option5    
    { {       467}, { 299} }, // metric_spec        
    { {       257}, { 300} }, // L_P                
    { {       258}, { 301} }, // R_P                
    { {       468}, { 302} }, // length_spec        
    { {         0}, {   0} },                       
};

SR__ s_253[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       339}, { 303} }, // GOAL
    { {         0}, {   0} },        
};

SR__ s_254[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 304} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_255[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     517}, {  305} }, // list_primitive_type
    { {     399}, {  306} }, // primitive_type     
    { {     365}, {  146} }, // name               
    { {     300}, {  147} }, // OBJECT             
    { {     361}, {   10} }, // NAME               
    { {       0}, { -325} },                       
};

SR__ s_256[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  307} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_257[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -322} }, 
};

SR__ s_258[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       393}, { 308} }, // con_GD
    { {       257}, {  95} }, // L_P   
    { {         0}, {   0} },          
};

SR__ s_259[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -197} }, 
};

SR__ s_260[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     386}, {  211} }, // typed_list_variable
    { {     257}, {  277} }, // L_P                
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_261[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -200} }, 
};

SR__ s_262[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -201} }, 
};

SR__ s_263[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -202} }, 
};

SR__ s_264[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -203} }, 
};

SR__ s_265[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 309} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_266[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 310} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_267[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -206} }, 
};

SR__ s_268[] =
{
    { { REQ_DEF}, {   6} },                           
    { {     402}, { 311} }, // action_def_body        
    { {     403}, { 312} }, // action_def_body_option1
    { {     404}, { 313} }, // action_def_body_option2
    { {     304}, { 314} }, // PRECONDITION           
    { {     305}, { 315} }, // EFFECT                 
    { {       0}, { -65} },                           
};

SR__ s_269[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       435}, { 316} }, // da_def_body   
    { {       485}, { 317} }, // te_da_def_body
    { {       321}, { 318} }, // DURATION      
    { {         0}, {   0} },                  
};

SR__ s_270[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -77} }, 
};

SR__ s_271[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -332} }, 
};

SR__ s_272[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -78} }, 
};

SR__ s_273[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -79} }, 
};

SR__ s_274[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -292} }, 
};

SR__ s_275[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 319} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_276[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  320} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_277[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  321} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_278[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -295} }, 
};

SR__ s_279[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -330} }, 
};

SR__ s_280[] =
{
    { { REQ_DEF}, {    9} },                 
    { {     421}, {  322} }, // list_term    
    { {     419}, {  235} }, // term         
    { {     365}, {  236} }, // name         
    { {     387}, {  237} }, // variable     
    { {     420}, {  238} }, // function_term
    { {     361}, {   10} }, // NAME         
    { {     333}, {  154} }, // Q_M          
    { {     257}, {  239} }, // L_P          
    { {       0}, { -329} },                 
};

SR__ s_281[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 323} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_282[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 324} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_283[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       418}, { 325} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_284[] =
{
    { { REQ_DEF}, {   9} },                   
    { {     418}, { 326} }, // f_exp          
    { {     422}, { 242} }, // number         
    { {     257}, { 243} }, // L_P            
    { {     426}, { 244} }, // f_head         
    { {     270}, { 170} }, // NUM            
    { {     389}, { 245} }, // function_symbol
    { {     365}, { 120} }, // name           
    { {     361}, {  10} }, // NAME           
    { {       0}, { -97} },                   
};

SR__ s_285[] =
{
    { { REQ_DEF}, {   9} },                   
    { {     418}, { 327} }, // f_exp          
    { {     422}, { 242} }, // number         
    { {     257}, { 243} }, // L_P            
    { {     426}, { 244} }, // f_head         
    { {     270}, { 170} }, // NUM            
    { {     389}, { 245} }, // function_symbol
    { {     365}, { 120} }, // name           
    { {     361}, {  10} }, // NAME           
    { {       0}, { -98} },                   
};

SR__ s_286[] =
{
    { { REQ_DEF}, {    9} },                 
    { {     421}, {  328} }, // list_term    
    { {     419}, {  235} }, // term         
    { {     365}, {  236} }, // name         
    { {     387}, {  237} }, // variable     
    { {     420}, {  238} }, // function_term
    { {     361}, {   10} }, // NAME         
    { {     333}, {  154} }, // Q_M          
    { {     257}, {  239} }, // L_P          
    { {       0}, { -329} },                 
};

SR__ s_287[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -99} }, 
};

SR__ s_288[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -100} }, 
};

SR__ s_289[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -101} }, 
};

SR__ s_290[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 329} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_291[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 330} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_292[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     469}, {  331} }, // list_init_el       
    { {     470}, {  292} }, // init_el            
    { {     471}, {  293} }, // literal_name       
    { {     257}, {  294} }, // L_P                
    { {     513}, {  295} }, // atomic_formula_name
    { {       0}, { -359} },                       
};

SR__ s_293[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -181} }, 
};

SR__ s_294[] =
{
    { { REQ_TOKEN}, {   7} },             
    { {       323}, { 332} }, // AT       
    { {       262}, { 333} }, // EQ       
    { {       310}, { 334} }, // NOT      
    { {       385}, { 335} }, // predicate
    { {       365}, { 114} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_295[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -293} }, 
};

SR__ s_296[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -173} }, 
};

SR__ s_297[] =
{
    { { REQ_TOKEN}, {   7} },                   
    { {       464}, { 336} }, // problem_option4
    { {       466}, { 298} }, // problem_option5
    { {       467}, { 299} }, // metric_spec    
    { {       258}, { 301} }, // R_P            
    { {       468}, { 302} }, // length_spec    
    { {       257}, { 337} }, // L_P            
    { {         0}, {   0} },                   
};

SR__ s_298[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -175} }, 
};

SR__ s_299[] =
{
    { { REQ_TOKEN}, {   5} },                   
    { {       466}, { 338} }, // problem_option5
    { {       258}, { 301} }, // R_P            
    { {       468}, { 302} }, // length_spec    
    { {       257}, { 339} }, // L_P            
    { {         0}, {   0} },                   
};

SR__ s_300[] =
{
    { { REQ_TOKEN}, {   4} },               
    { {       292}, { 340} }, // CONSTRAINTS
    { {       349}, { 341} }, // METRIC     
    { {       354}, { 342} }, // LENGTH     
    { {         0}, {   0} },               
};

SR__ s_301[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -177} }, 
};

SR__ s_302[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 343} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_303[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       407}, { 344} }, // pre_GD             
    { {       408}, { 345} }, // pref_GD            
    { {       257}, { 346} }, // L_P                
    { {       410}, { 347} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_304[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -59} }, 
};

SR__ s_305[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -304} }, 
};

SR__ s_306[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     517}, {  348} }, // list_primitive_type
    { {     399}, {  306} }, // primitive_type     
    { {     365}, {  146} }, // name               
    { {     300}, {  147} }, // OBJECT             
    { {     361}, {   10} }, // NAME               
    { {       0}, { -325} },                       
};

SR__ s_307[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -278} }, 
};

SR__ s_308[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 349} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_309[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -204} }, 
};

SR__ s_310[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -205} }, 
};

SR__ s_311[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 350} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_312[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -62} }, 
};

SR__ s_313[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -63} }, 
};

SR__ s_314[] =
{
    { { REQ_TOKEN}, {   9} },                       
    { {       405}, { 351} }, // emptyOr_pre_GD     
    { {       257}, { 352} }, // L_P                
    { {       407}, { 353} }, // pre_GD             
    { {       408}, { 345} }, // pref_GD            
    { {       410}, { 347} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_315[] =
{
    { { REQ_TOKEN}, {   7} },                       
    { {       406}, { 354} }, // emptyOr_effect     
    { {       257}, { 355} }, // L_P                
    { {       427}, { 356} }, // effect             
    { {       429}, { 357} }, // c_effect           
    { {       431}, { 358} }, // p_effect           
    { {       413}, { 359} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_316[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 360} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_317[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 361} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_318[] =
{
    { { REQ_TOKEN}, {   4} },                              
    { {       436}, { 362} }, // duration_constraint       
    { {       257}, { 363} }, // L_P                       
    { {       447}, { 364} }, // simple_duration_constraint
    { {         0}, {   0} },                              
};

SR__ s_319[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -80} }, 
};

SR__ s_320[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 365} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_321[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 366} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_322[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 367} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_323[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -296} }, 
};

SR__ s_324[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -84} }, 
};

SR__ s_325[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       418}, { 368} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_326[] =
{
    { { REQ_TOKEN}, {  10} },                   
    { {       425}, { 369} }, // nvList_f_exp   
    { {       418}, { 370} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_327[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 371} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_328[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 372} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_329[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -179} }, 
};

SR__ s_330[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -180} }, 
};

SR__ s_331[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -360} }, 
};

SR__ s_332[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       422}, { 373} }, // number
    { {       270}, { 170} }, // NUM   
    { {         0}, {   0} },          
};

SR__ s_333[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       472}, { 374} }, // basic_function_term
    { {       365}, { 375} }, // name               
    { {       389}, { 376} }, // function_symbol    
    { {       257}, { 377} }, // L_P                
    { {       361}, {  10} }, // NAME               
    { {         0}, {   0} },                       
};

SR__ s_334[] =
{
    { { REQ_TOKEN}, {   3} },                       
    { {       513}, { 378} }, // atomic_formula_name
    { {       257}, { 379} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_335[] =
{
    { { REQ_DEF}, {    4} },             
    { {     473}, {  380} }, // list_name
    { {     365}, {  108} }, // name     
    { {     361}, {   10} }, // NAME     
    { {       0}, { -317} },             
};

SR__ s_336[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -174} }, 
};

SR__ s_337[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       349}, { 341} }, // METRIC
    { {       354}, { 342} }, // LENGTH
    { {         0}, {   0} },          
};

SR__ s_338[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -176} }, 
};

SR__ s_339[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       354}, { 342} }, // LENGTH
    { {         0}, {   0} },          
};

SR__ s_340[] =
{
    { { REQ_TOKEN}, {   4} },               
    { {       474}, { 381} }, // pref_con_GD
    { {       257}, { 382} }, // L_P        
    { {       393}, { 383} }, // con_GD     
    { {         0}, {   0} },               
};

SR__ s_341[] =
{
    { { REQ_TOKEN}, {   4} },                
    { {       479}, { 384} }, // optimization
    { {       350}, { 385} }, // MINIMIZE    
    { {       351}, { 386} }, // MAXIMIZE    
    { {         0}, {   0} },                
};

SR__ s_342[] =
{
    { { REQ_TOKEN}, {   5} },                       
    { {       482}, { 387} }, // length_spec_option1
    { {       483}, { 388} }, // length_spec_option2
    { {       257}, { 389} }, // L_P                
    { {       258}, { 390} }, // R_P                
    { {         0}, {   0} },                       
};

SR__ s_343[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -178} }, 
};

SR__ s_344[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 391} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_345[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -67} }, 
};

SR__ s_346[] =
{
    { { REQ_TOKEN}, {  17} },               
    { {       306}, { 392} }, // AND        
    { {       307}, { 393} }, // FORALL     
    { {       308}, { 394} }, // PREFERENCE 
    { {       309}, { 181} }, // OR         
    { {       310}, { 182} }, // NOT        
    { {       311}, { 183} }, // IMPLY      
    { {       312}, { 184} }, // EXISTS     
    { {       385}, { 186} }, // predicate  
    { {       262}, { 187} }, // EQ         
    { {       417}, { 188} }, // binary_comp
    { {       365}, { 114} }, // name       
    { {       266}, { 189} }, // GT         
    { {       267}, { 190} }, // LT         
    { {       268}, { 191} }, // GOE        
    { {       269}, { 192} }, // LOE        
    { {       361}, {  10} }, // NAME       
    { {         0}, {   0} },               
};

SR__ s_347[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -70} }, 
};

SR__ s_348[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -326} }, 
};

SR__ s_349[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -196} }, 
};

SR__ s_350[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -60} }, 
};

SR__ s_351[] =
{
    { { REQ_DEF}, {   3} },                           
    { {     404}, { 395} }, // action_def_body_option2
    { {     305}, { 315} }, // EFFECT                 
    { {       0}, { -65} },                           
};

SR__ s_352[] =
{
    { { REQ_TOKEN}, {  18} },               
    { {       258}, { 396} }, // R_P        
    { {       306}, { 392} }, // AND        
    { {       307}, { 393} }, // FORALL     
    { {       308}, { 394} }, // PREFERENCE 
    { {       309}, { 181} }, // OR         
    { {       310}, { 182} }, // NOT        
    { {       311}, { 183} }, // IMPLY      
    { {       312}, { 184} }, // EXISTS     
    { {       385}, { 186} }, // predicate  
    { {       262}, { 187} }, // EQ         
    { {       417}, { 188} }, // binary_comp
    { {       365}, { 114} }, // name       
    { {       266}, { 189} }, // GT         
    { {       267}, { 190} }, // LT         
    { {       268}, { 191} }, // GOE        
    { {       269}, { 192} }, // LOE        
    { {       361}, {  10} }, // NAME       
    { {         0}, {   0} },               
};

SR__ s_353[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -280} }, 
};

SR__ s_354[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -66} }, 
};

SR__ s_355[] =
{
    { { REQ_TOKEN}, {  16} },              
    { {       258}, { 397} }, // R_P       
    { {       306}, { 398} }, // AND       
    { {       307}, { 399} }, // FORALL    
    { {       313}, { 400} }, // WHEN      
    { {       310}, { 401} }, // NOT       
    { {       432}, { 402} }, // assign_op 
    { {       314}, { 403} }, // ASSIGN    
    { {       385}, { 186} }, // predicate 
    { {       262}, { 404} }, // EQ        
    { {       316}, { 405} }, // SCALE_UP  
    { {       317}, { 406} }, // SCALE_DOWN
    { {       318}, { 407} }, // INCREASE  
    { {       319}, { 408} }, // DECREASE  
    { {       365}, { 114} }, // name      
    { {       361}, {  10} }, // NAME      
    { {         0}, {   0} },              
};

SR__ s_356[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -282} }, 
};

SR__ s_357[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -108} }, 
};

SR__ s_358[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -111} }, 
};

SR__ s_359[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -113} }, 
};

SR__ s_360[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -124} }, 
};

SR__ s_361[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -227} }, 
};

SR__ s_362[] =
{
    { { REQ_TOKEN}, {   3} },              
    { {       322}, { 409} }, // CONDITION 
    { {       357}, { 410} }, // TIMEPOINTS
    { {         0}, {   0} },              
};

SR__ s_363[] =
{
    { { REQ_TOKEN}, {   8} },        
    { {       306}, { 411} }, // AND 
    { {       258}, { 412} }, // R_P 
    { {       448}, { 413} }, // d_op
    { {       323}, { 414} }, // AT  
    { {       269}, { 415} }, // LOE 
    { {       268}, { 416} }, // GOE 
    { {       262}, { 417} }, // EQ  
    { {         0}, {   0} },        
};

SR__ s_364[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -141} }, 
};

SR__ s_365[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 418} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_366[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 419} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_367[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -88} }, 
};

SR__ s_368[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 420} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_369[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 421} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_370[] =
{
    { { REQ_DEF}, {   10} },                   
    { {     518}, {  422} }, // list_f_exp     
    { {     418}, {  423} }, // f_exp          
    { {     422}, {  242} }, // number         
    { {     257}, {  243} }, // L_P            
    { {     426}, {  244} }, // f_head         
    { {     270}, {  170} }, // NUM            
    { {     389}, {  245} }, // function_symbol
    { {     365}, {  120} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -333} },                   
};

SR__ s_371[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -92} }, 
};

SR__ s_372[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -95} }, 
};

SR__ s_373[] =
{
    { { REQ_TOKEN}, {   4} },                       
    { {       471}, { 424} }, // literal_name       
    { {       513}, { 295} }, // atomic_formula_name
    { {       257}, { 425} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_374[] =
{
    { { REQ_TOKEN}, {   5} },          
    { {       422}, { 426} }, // number
    { {       365}, { 427} }, // name  
    { {       270}, { 170} }, // NUM   
    { {       361}, {  10} }, // NAME  
    { {         0}, {   0} },          
};

SR__ s_375[] =
{
    { { REQ_DEF}, {   3} },        
    { {     365}, { 428} }, // name
    { {     361}, {  10} }, // NAME
    { {       0}, { -47} },        
};

SR__ s_376[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -185} }, 
};

SR__ s_377[] =
{
    { { REQ_TOKEN}, {   4} },                   
    { {       389}, { 429} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_378[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 430} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_379[] =
{
    { { REQ_TOKEN}, {   5} },             
    { {       385}, { 335} }, // predicate
    { {       262}, { 431} }, // EQ       
    { {       365}, { 114} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_380[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 432} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_381[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 433} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_382[] =
{
    { { REQ_TOKEN}, {  14} },                   
    { {       306}, { 434} }, // AND            
    { {       307}, { 435} }, // FORALL         
    { {       308}, { 436} }, // PREFERENCE     
    { {       323}, { 124} }, // AT             
    { {       340}, { 125} }, // ALWAYS         
    { {       341}, { 126} }, // SOMETIME       
    { {       342}, { 127} }, // WITHIN         
    { {       343}, { 128} }, // AT_MOST_ONCE   
    { {       344}, { 129} }, // SOMETIME_AFTER 
    { {       345}, { 130} }, // SOMETIME_BEFORE
    { {       346}, { 131} }, // ALWAYS_WITHIN  
    { {       347}, { 132} }, // HOLD_DURING    
    { {       348}, { 133} }, // HOLD_AFTER     
    { {         0}, {   0} },                   
};

SR__ s_383[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -192} }, 
};

SR__ s_384[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       480}, { 437} }, // metric_f_exp   
    { {       257}, { 438} }, // L_P            
    { {       422}, { 439} }, // number         
    { {       389}, { 440} }, // function_symbol
    { {       352}, { 441} }, // TOTAL_TIME     
    { {       270}, { 170} }, // NUM            
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_385[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -210} }, 
};

SR__ s_386[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -211} }, 
};

SR__ s_387[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -221} }, 
};

SR__ s_388[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -222} }, 
};

SR__ s_389[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       355}, { 442} }, // SERIAL  
    { {       356}, { 443} }, // PARALLEL
    { {         0}, {   0} },            
};

SR__ s_390[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -224} }, 
};

SR__ s_391[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -187} }, 
};

SR__ s_392[] =
{
    { { REQ_DEF}, {   13} },                       
    { {     409}, {  444} }, // list_pre_GD        
    { {     415}, {  226} }, // list_GD            
    { {     407}, {  445} }, // pre_GD             
    { {     410}, {  446} }, // GD                 
    { {     408}, {  345} }, // pref_GD            
    { {     257}, {  346} }, // L_P                
    { {     413}, {  137} }, // atomic_formula_term
    { {     414}, {  138} }, // literal_term       
    { {     416}, {  140} }, // f_comp             
    { {     258}, { -327} }, // R_P                
    { {       0}, { -331} },                       
};

SR__ s_393[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 447} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_394[] =
{
    { { REQ_TOKEN}, {  10} },                       
    { {       411}, { 448} }, // pref_GD_option1    
    { {       410}, { 449} }, // GD                 
    { {       412}, { 450} }, // pref_name          
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {       365}, { 451} }, // name               
    { {       361}, {  10} }, // NAME               
    { {         0}, {   0} },                       
};

SR__ s_395[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -64} }, 
};

SR__ s_396[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -279} }, 
};

SR__ s_397[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -281} }, 
};

SR__ s_398[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     428}, {  452} }, // list_c_effect      
    { {     429}, {  453} }, // c_effect           
    { {     257}, {  454} }, // L_P                
    { {     431}, {  358} }, // p_effect           
    { {     413}, {  359} }, // atomic_formula_term
    { {       0}, { -335} },                       
};

SR__ s_399[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 455} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_400[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 456} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_401[] =
{
    { { REQ_TOKEN}, {   3} },                       
    { {       413}, { 457} }, // atomic_formula_term
    { {       257}, { 458} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_402[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       426}, { 459} }, // f_head         
    { {       257}, { 460} }, // L_P            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_403[] =
{
    { { REQ_DEF}, {    3} },                 
    { {     420}, {  461} }, // function_term
    { {     257}, {  239} }, // L_P          
    { {       0}, { -119} },                 
};

SR__ s_404[] =
{
    { { REQ_TOKEN}, {   8} },                 
    { {       419}, { 240} }, // term         
    { {       365}, { 236} }, // name         
    { {       387}, { 237} }, // variable     
    { {       420}, { 238} }, // function_term
    { {       361}, {  10} }, // NAME         
    { {       333}, { 154} }, // Q_M          
    { {       257}, { 239} }, // L_P          
    { {         0}, {   0} },                 
};

SR__ s_405[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -120} }, 
};

SR__ s_406[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -121} }, 
};

SR__ s_407[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -122} }, 
};

SR__ s_408[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -123} }, 
};

SR__ s_409[] =
{
    { { REQ_TOKEN}, {   6} },                 
    { {       437}, { 462} }, // emptyOr_da_GD
    { {       257}, { 463} }, // L_P          
    { {       439}, { 464} }, // da_GD        
    { {       440}, { 465} }, // pref_timed_GD
    { {       442}, { 466} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_410[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 467} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_411[] =
{
    { { REQ_TOKEN}, {   4} },                                     
    { {       446}, { 468} }, // nvList_simple_duration_constraint
    { {       447}, { 469} }, // simple_duration_constraint       
    { {       257}, { 470} }, // L_P                              
    { {         0}, {   0} },                                     
};

SR__ s_412[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -140} }, 
};

SR__ s_413[] =
{
    { { REQ_TOKEN}, {   2} },                
    { {       332}, { 471} }, // Q_M_DURATION
    { {         0}, {   0} },                
};

SR__ s_414[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       444}, { 472} }, // time_specifier
    { {       329}, { 473} }, // START         
    { {       330}, { 474} }, // END           
    { {         0}, {   0} },                  
};

SR__ s_415[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -144} }, 
};

SR__ s_416[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -145} }, 
};

SR__ s_417[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -146} }, 
};

SR__ s_418[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 475} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_419[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 476} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_420[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -90} }, 
};

SR__ s_421[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -91} }, 
};

SR__ s_422[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -305} }, 
};

SR__ s_423[] =
{
    { { REQ_DEF}, {   10} },                   
    { {     518}, {  477} }, // list_f_exp     
    { {     418}, {  423} }, // f_exp          
    { {     422}, {  242} }, // number         
    { {     257}, {  243} }, // L_P            
    { {     426}, {  244} }, // f_head         
    { {     270}, {  170} }, // NUM            
    { {     389}, {  245} }, // function_symbol
    { {     365}, {  120} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -333} },                   
};

SR__ s_424[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 478} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_425[] =
{
    { { REQ_TOKEN}, {   6} },             
    { {       310}, { 334} }, // NOT      
    { {       385}, { 335} }, // predicate
    { {       262}, { 431} }, // EQ       
    { {       365}, { 114} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_426[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 479} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_427[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 480} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_428[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 481} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_429[] =
{
    { { REQ_DEF}, {    4} },             
    { {     473}, {  482} }, // list_name
    { {     365}, {  108} }, // name     
    { {     361}, {   10} }, // NAME     
    { {       0}, { -317} },             
};

SR__ s_430[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -294} }, 
};

SR__ s_431[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       365}, { 483} }, // name
    { {       361}, {  10} }, // NAME
    { {         0}, {   0} },        
};

SR__ s_432[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -297} }, 
};

SR__ s_433[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -188} }, 
};

SR__ s_434[] =
{
    { { REQ_DEF}, {    8} },                    
    { {     475}, {  484} }, // list_pref_con_GD
    { {     477}, {  160} }, // list_con_GD     
    { {     474}, {  485} }, // pref_con_GD     
    { {     393}, {  486} }, // con_GD          
    { {     257}, {  382} }, // L_P             
    { {     258}, { -361} }, // R_P             
    { {       0}, { -363} },                    
};

SR__ s_435[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 487} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_436[] =
{
    { { REQ_TOKEN}, {   7} },                       
    { {       476}, { 488} }, // pref_con_GD_option1
    { {       393}, { 489} }, // con_GD             
    { {       412}, { 490} }, // pref_name          
    { {       257}, {  95} }, // L_P                
    { {       365}, { 451} }, // name               
    { {       361}, {  10} }, // NAME               
    { {         0}, {   0} },                       
};

SR__ s_437[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 491} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_438[] =
{
    { { REQ_TOKEN}, {  12} },                   
    { {       423}, { 492} }, // binary_op      
    { {       424}, { 493} }, // multi_op       
    { {       328}, { 494} }, // MINUS          
    { {       389}, { 495} }, // function_symbol
    { {       352}, { 496} }, // TOTAL_TIME     
    { {       353}, { 497} }, // IS_VIOLATED    
    { {       263}, { 287} }, // SLASH          
    { {       264}, { 288} }, // STAR           
    { {       265}, { 289} }, // PLUS           
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_439[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -215} }, 
};

SR__ s_440[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -217} }, 
};

SR__ s_441[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -218} }, 
};

SR__ s_442[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       484}, { 498} }, // integer
    { {       270}, { 499} }, // NUM    
    { {         0}, {   0} },           
};

SR__ s_443[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       484}, { 500} }, // integer
    { {       270}, { 499} }, // NUM    
    { {         0}, {   0} },           
};

SR__ s_444[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 501} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_445[] =
{
    { { REQ_DEF}, {    9} },                       
    { {     409}, {  502} }, // list_pre_GD        
    { {     407}, {  445} }, // pre_GD             
    { {     408}, {  345} }, // pref_GD            
    { {     257}, {  346} }, // L_P                
    { {     410}, {  347} }, // GD                 
    { {     413}, {  137} }, // atomic_formula_term
    { {     414}, {  138} }, // literal_term       
    { {     416}, {  140} }, // f_comp             
    { {       0}, { -327} },                       
};

SR__ s_446[] =
{
    { { REQ_DEF}, {    8} },                       
    { {     415}, {  271} }, // list_GD            
    { {     410}, {  227} }, // GD                 
    { {     413}, {  137} }, // atomic_formula_term
    { {     414}, {  138} }, // literal_term       
    { {     257}, {  139} }, // L_P                
    { {     416}, {  140} }, // f_comp             
    { {     258}, {  -70} }, // R_P                
    { {       0}, { -331} },                       
};

SR__ s_447[] =
{
    { { REQ_DEF}, {    7} },                       
    { {     386}, {  503} }, // typed_list_variable
    { {     257}, {  277} }, // L_P                
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_448[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -71} }, 
};

SR__ s_449[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 504} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_450[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 505} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_451[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -74} }, 
};

SR__ s_452[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 506} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_453[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     428}, {  507} }, // list_c_effect      
    { {     429}, {  453} }, // c_effect           
    { {     257}, {  454} }, // L_P                
    { {     431}, {  358} }, // p_effect           
    { {     413}, {  359} }, // atomic_formula_term
    { {       0}, { -335} },                       
};

SR__ s_454[] =
{
    { { REQ_TOKEN}, {  14} },              
    { {       307}, { 399} }, // FORALL    
    { {       313}, { 400} }, // WHEN      
    { {       310}, { 401} }, // NOT       
    { {       432}, { 402} }, // assign_op 
    { {       314}, { 403} }, // ASSIGN    
    { {       385}, { 186} }, // predicate 
    { {       262}, { 404} }, // EQ        
    { {       316}, { 405} }, // SCALE_UP  
    { {       317}, { 406} }, // SCALE_DOWN
    { {       318}, { 407} }, // INCREASE  
    { {       319}, { 408} }, // DECREASE  
    { {       365}, { 114} }, // name      
    { {       361}, {  10} }, // NAME      
    { {         0}, {   0} },              
};

SR__ s_455[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  508} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_456[] =
{
    { { REQ_TOKEN}, {   5} },                       
    { {       430}, { 509} }, // cond_effect        
    { {       257}, { 510} }, // L_P                
    { {       431}, { 511} }, // p_effect           
    { {       413}, { 359} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_457[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 512} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_458[] =
{
    { { REQ_TOKEN}, {   5} },             
    { {       385}, { 186} }, // predicate
    { {       262}, { 404} }, // EQ       
    { {       365}, { 114} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_459[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       418}, { 513} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_460[] =
{
    { { REQ_TOKEN}, {   4} },                   
    { {       389}, { 286} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_461[] =
{
    { { REQ_TOKEN}, {   9} },                 
    { {       419}, { 514} }, // term         
    { {       315}, { 515} }, // UNDEFINED    
    { {       365}, { 236} }, // name         
    { {       387}, { 237} }, // variable     
    { {       420}, { 238} }, // function_term
    { {       361}, {  10} }, // NAME         
    { {       333}, { 154} }, // Q_M          
    { {       257}, { 239} }, // L_P          
    { {         0}, {   0} },                 
};

SR__ s_462[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       305}, { 516} }, // EFFECT
    { {         0}, {   0} },          
};

SR__ s_463[] =
{
    { { REQ_TOKEN}, {   7} },              
    { {       258}, { 517} }, // R_P       
    { {       306}, { 518} }, // AND       
    { {       307}, { 519} }, // FORALL    
    { {       308}, { 520} }, // PREFERENCE
    { {       323}, { 521} }, // AT        
    { {       324}, { 522} }, // OVER      
    { {         0}, {   0} },              
};

SR__ s_464[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -284} }, 
};

SR__ s_465[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -127} }, 
};

SR__ s_466[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -130} }, 
};

SR__ s_467[] =
{
    { { REQ_TOKEN}, {  16} },                            
    { {       486}, { 523} }, // nvList_te_time_specifier
    { {       493}, { 524} }, // te_time_specifier       
    { {       444}, { 525} }, // time_specifier          
    { {       456}, { 526} }, // f_exp_da                
    { {       365}, { 527} }, // name                    
    { {       257}, { 528} }, // L_P                     
    { {       329}, { 473} }, // START                   
    { {       330}, { 474} }, // END                     
    { {       332}, { 529} }, // Q_M_DURATION            
    { {       418}, { 530} }, // f_exp                   
    { {       361}, {  10} }, // NAME                    
    { {       422}, { 242} }, // number                  
    { {       426}, { 244} }, // f_head                  
    { {       270}, { 170} }, // NUM                     
    { {       389}, { 245} }, // function_symbol         
    { {         0}, {   0} },                            
};

SR__ s_468[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 531} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_469[] =
{
    { { REQ_DEF}, {    4} },                                   
    { {     523}, {  532} }, // list_simple_duration_constraint
    { {     447}, {  533} }, // simple_duration_constraint     
    { {     257}, {  470} }, // L_P                            
    { {       0}, { -353} },                                   
};

SR__ s_470[] =
{
    { { REQ_TOKEN}, {   6} },        
    { {       448}, { 413} }, // d_op
    { {       323}, { 414} }, // AT  
    { {       269}, { 415} }, // LOE 
    { {       268}, { 416} }, // GOE 
    { {       262}, { 417} }, // EQ  
    { {         0}, {   0} },        
};

SR__ s_471[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       449}, { 534} }, // d_value        
    { {       299}, { 535} }, // NUMBER         
    { {       418}, { 536} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_472[] =
{
    { { REQ_TOKEN}, {   3} },                              
    { {       447}, { 537} }, // simple_duration_constraint
    { {       257}, { 470} }, // L_P                       
    { {         0}, {   0} },                              
};

SR__ s_473[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -136} }, 
};

SR__ s_474[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -137} }, 
};

SR__ s_475[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 538} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_476[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 539} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_477[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -334} }, 
};

SR__ s_478[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -182} }, 
};

SR__ s_479[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -183} }, 
};

SR__ s_480[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -184} }, 
};

SR__ s_481[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -298} }, 
};

SR__ s_482[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 540} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_483[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       365}, { 428} }, // name
    { {       361}, {  10} }, // NAME
    { {         0}, {   0} },        
};

SR__ s_484[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 541} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_485[] =
{
    { { REQ_DEF}, {    5} },                    
    { {     475}, {  542} }, // list_pref_con_GD
    { {     474}, {  485} }, // pref_con_GD     
    { {     257}, {  382} }, // L_P             
    { {     393}, {  383} }, // con_GD          
    { {       0}, { -361} },                    
};

SR__ s_486[] =
{
    { { REQ_DEF}, {    5} },               
    { {     477}, {  210} }, // list_con_GD
    { {     393}, {  161} }, // con_GD     
    { {     257}, {   95} }, // L_P        
    { {     258}, { -192} }, // R_P        
    { {       0}, { -363} },               
};

SR__ s_487[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  543} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_488[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -191} }, 
};

SR__ s_489[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 544} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_490[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       393}, { 545} }, // con_GD
    { {       257}, {  95} }, // L_P   
    { {         0}, {   0} },          
};

SR__ s_491[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -209} }, 
};

SR__ s_492[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       480}, { 546} }, // metric_f_exp   
    { {       257}, { 438} }, // L_P            
    { {       422}, { 439} }, // number         
    { {       389}, { 440} }, // function_symbol
    { {       352}, { 441} }, // TOTAL_TIME     
    { {       270}, { 170} }, // NUM            
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_493[] =
{
    { { REQ_DEF}, {   9} },                   
    { {     480}, { 547} }, // metric_f_exp   
    { {     257}, { 438} }, // L_P            
    { {     422}, { 439} }, // number         
    { {     389}, { 440} }, // function_symbol
    { {     352}, { 441} }, // TOTAL_TIME     
    { {     270}, { 170} }, // NUM            
    { {     365}, { 120} }, // name           
    { {     361}, {  10} }, // NAME           
    { {       0}, { -97} },                   
};

SR__ s_494[] =
{
    { { REQ_DEF}, {   9} },                   
    { {     480}, { 548} }, // metric_f_exp   
    { {     257}, { 438} }, // L_P            
    { {     422}, { 439} }, // number         
    { {     389}, { 440} }, // function_symbol
    { {     352}, { 441} }, // TOTAL_TIME     
    { {     270}, { 170} }, // NUM            
    { {     365}, { 120} }, // name           
    { {     361}, {  10} }, // NAME           
    { {       0}, { -98} },                   
};

SR__ s_495[] =
{
    { { REQ_DEF}, {    4} },             
    { {     473}, {  549} }, // list_name
    { {     365}, {  108} }, // name     
    { {     361}, {   10} }, // NAME     
    { {       0}, { -317} },             
};

SR__ s_496[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 550} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_497[] =
{
    { { REQ_TOKEN}, {   4} },             
    { {       412}, { 551} }, // pref_name
    { {       365}, { 451} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_498[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 552} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_499[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -226} }, 
};

SR__ s_500[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 553} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_501[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -68} }, 
};

SR__ s_502[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -328} }, 
};

SR__ s_503[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 554} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_504[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -72} }, 
};

SR__ s_505[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 555} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_506[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -107} }, 
};

SR__ s_507[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -336} }, 
};

SR__ s_508[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 556} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_509[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 557} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_510[] =
{
    { { REQ_TOKEN}, {  13} },              
    { {       306}, { 558} }, // AND       
    { {       310}, { 401} }, // NOT       
    { {       432}, { 402} }, // assign_op 
    { {       314}, { 403} }, // ASSIGN    
    { {       385}, { 186} }, // predicate 
    { {       262}, { 404} }, // EQ        
    { {       316}, { 405} }, // SCALE_UP  
    { {       317}, { 406} }, // SCALE_DOWN
    { {       318}, { 407} }, // INCREASE  
    { {       319}, { 408} }, // DECREASE  
    { {       365}, { 114} }, // name      
    { {       361}, {  10} }, // NAME      
    { {         0}, {   0} },              
};

SR__ s_511[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -118} }, 
};

SR__ s_512[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -112} }, 
};

SR__ s_513[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -114} }, 
};

SR__ s_514[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 559} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_515[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 560} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_516[] =
{
    { { REQ_TOKEN}, {   5} },                     
    { {       438}, { 561} }, // emptyOr_da_effect
    { {       257}, { 562} }, // L_P              
    { {       450}, { 563} }, // da_effect        
    { {       452}, { 564} }, // timed_effect     
    { {         0}, {   0} },                     
};

SR__ s_517[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -283} }, 
};

SR__ s_518[] =
{
    { { REQ_DEF}, {    6} },                 
    { {     441}, {  565} }, // list_da_GD   
    { {     439}, {  566} }, // da_GD        
    { {     440}, {  465} }, // pref_timed_GD
    { {     257}, {  567} }, // L_P          
    { {     442}, {  466} }, // timed_GD     
    { {       0}, { -351} },                 
};

SR__ s_519[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 568} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_520[] =
{
    { { REQ_TOKEN}, {   7} },                     
    { {       443}, { 569} }, // pref_name_option1
    { {       442}, { 570} }, // timed_GD         
    { {       412}, { 571} }, // pref_name        
    { {       257}, { 572} }, // L_P              
    { {       365}, { 451} }, // name             
    { {       361}, {  10} }, // NAME             
    { {         0}, {   0} },                     
};

SR__ s_521[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       444}, { 573} }, // time_specifier
    { {       329}, { 473} }, // START         
    { {       330}, { 474} }, // END           
    { {         0}, {   0} },                  
};

SR__ s_522[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       445}, { 574} }, // interval
    { {       331}, { 575} }, // ALL     
    { {         0}, {   0} },            
};

SR__ s_523[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 576} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_524[] =
{
    { { REQ_DEF}, {   16} },                          
    { {     519}, {  577} }, // list_te_time_specifier
    { {     493}, {  578} }, // te_time_specifier     
    { {     444}, {  525} }, // time_specifier        
    { {     456}, {  526} }, // f_exp_da              
    { {     365}, {  527} }, // name                  
    { {     257}, {  528} }, // L_P                   
    { {     329}, {  473} }, // START                 
    { {     330}, {  474} }, // END                   
    { {     332}, {  529} }, // Q_M_DURATION          
    { {     418}, {  530} }, // f_exp                 
    { {     361}, {   10} }, // NAME                  
    { {     422}, {  242} }, // number                
    { {     426}, {  244} }, // f_head                
    { {     270}, {  170} }, // NUM                   
    { {     389}, {  245} }, // function_symbol       
    { {       0}, { -339} },                          
};

SR__ s_525[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -231} }, 
};

SR__ s_526[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -232} }, 
};

SR__ s_527[] =
{
    { { REQ_DEF}, {   1} }, 
    { {       0}, { -47} }, 
};

SR__ s_528[] =
{
    { { REQ_TOKEN}, {  10} },                   
    { {       423}, { 579} }, // binary_op      
    { {       424}, { 580} }, // multi_op       
    { {       328}, { 581} }, // MINUS          
    { {       389}, { 286} }, // function_symbol
    { {       263}, { 287} }, // SLASH          
    { {       264}, { 288} }, // STAR           
    { {       265}, { 289} }, // PLUS           
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_529[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -160} }, 
};

SR__ s_530[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -161} }, 
};

SR__ s_531[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -139} }, 
};

SR__ s_532[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -310} }, 
};

SR__ s_533[] =
{
    { { REQ_DEF}, {    4} },                                   
    { {     523}, {  582} }, // list_simple_duration_constraint
    { {     447}, {  533} }, // simple_duration_constraint     
    { {     257}, {  470} }, // L_P                            
    { {       0}, { -353} },                                   
};

SR__ s_534[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 583} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_535[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -147} }, 
};

SR__ s_536[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -148} }, 
};

SR__ s_537[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 584} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_538[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -81} }, 
};

SR__ s_539[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -82} }, 
};

SR__ s_540[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -186} }, 
};

SR__ s_541[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -189} }, 
};

SR__ s_542[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -362} }, 
};

SR__ s_543[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 585} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_544[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -193} }, 
};

SR__ s_545[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 586} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_546[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       480}, { 587} }, // metric_f_exp   
    { {       257}, { 438} }, // L_P            
    { {       422}, { 439} }, // number         
    { {       389}, { 440} }, // function_symbol
    { {       352}, { 441} }, // TOTAL_TIME     
    { {       270}, { 170} }, // NUM            
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_547[] =
{
    { { REQ_TOKEN}, {  10} },                       
    { {       481}, { 588} }, // nvList_metric_f_exp
    { {       480}, { 589} }, // metric_f_exp       
    { {       257}, { 438} }, // L_P                
    { {       422}, { 439} }, // number             
    { {       389}, { 440} }, // function_symbol    
    { {       352}, { 441} }, // TOTAL_TIME         
    { {       270}, { 170} }, // NUM                
    { {       365}, { 120} }, // name               
    { {       361}, {  10} }, // NAME               
    { {         0}, {   0} },                       
};

SR__ s_548[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 590} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_549[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 591} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_550[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -219} }, 
};

SR__ s_551[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 592} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_552[] =
{
    { { REQ_TOKEN}, {   4} },                       
    { {       483}, { 593} }, // length_spec_option2
    { {       258}, { 390} }, // R_P                
    { {       257}, { 594} }, // L_P                
    { {         0}, {   0} },                       
};

SR__ s_553[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 595} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_554[] =
{
    { { REQ_TOKEN}, {   8} },                       
    { {       407}, { 596} }, // pre_GD             
    { {       408}, { 345} }, // pref_GD            
    { {       257}, { 346} }, // L_P                
    { {       410}, { 347} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_555[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -73} }, 
};

SR__ s_556[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       427}, { 597} }, // effect             
    { {       257}, { 598} }, // L_P                
    { {       429}, { 357} }, // c_effect           
    { {       431}, { 358} }, // p_effect           
    { {       413}, { 359} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_557[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -110} }, 
};

SR__ s_558[] =
{
    { { REQ_DEF}, {    5} },                       
    { {     433}, {  599} }, // list_p_effect      
    { {     431}, {  600} }, // p_effect           
    { {     257}, {  601} }, // L_P                
    { {     413}, {  359} }, // atomic_formula_term
    { {       0}, { -337} },                       
};

SR__ s_559[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -115} }, 
};

SR__ s_560[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -116} }, 
};

SR__ s_561[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -126} }, 
};

SR__ s_562[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       258}, { 602} }, // R_P        
    { {       306}, { 603} }, // AND        
    { {       307}, { 604} }, // FORALL     
    { {       313}, { 605} }, // WHEN       
    { {       323}, { 606} }, // AT         
    { {       454}, { 607} }, // assign_op_t
    { {       318}, { 608} }, // INCREASE   
    { {       319}, { 609} }, // DECREASE   
    { {         0}, {   0} },               
};

SR__ s_563[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -286} }, 
};

SR__ s_564[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -150} }, 
};

SR__ s_565[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 610} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_566[] =
{
    { { REQ_DEF}, {    6} },                 
    { {     441}, {  611} }, // list_da_GD   
    { {     439}, {  566} }, // da_GD        
    { {     440}, {  465} }, // pref_timed_GD
    { {     257}, {  567} }, // L_P          
    { {     442}, {  466} }, // timed_GD     
    { {       0}, { -351} },                 
};

SR__ s_567[] =
{
    { { REQ_TOKEN}, {   6} },              
    { {       306}, { 518} }, // AND       
    { {       307}, { 519} }, // FORALL    
    { {       308}, { 520} }, // PREFERENCE
    { {       323}, { 521} }, // AT        
    { {       324}, { 522} }, // OVER      
    { {         0}, {   0} },              
};

SR__ s_568[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  612} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_569[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -131} }, 
};

SR__ s_570[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 613} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_571[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       442}, { 614} }, // timed_GD
    { {       257}, { 572} }, // L_P     
    { {         0}, {   0} },            
};

SR__ s_572[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       323}, { 521} }, // AT  
    { {       324}, { 522} }, // OVER
    { {         0}, {   0} },        
};

SR__ s_573[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 615} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_574[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 616} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_575[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -138} }, 
};

SR__ s_576[] =
{
    { { REQ_TOKEN}, {   2} },               
    { {       358}, { 617} }, // TIMEALIASES
    { {         0}, {   0} },               
};

SR__ s_577[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -306} }, 
};

SR__ s_578[] =
{
    { { REQ_DEF}, {   16} },                          
    { {     519}, {  618} }, // list_te_time_specifier
    { {     493}, {  578} }, // te_time_specifier     
    { {     444}, {  525} }, // time_specifier        
    { {     456}, {  526} }, // f_exp_da              
    { {     365}, {  527} }, // name                  
    { {     257}, {  528} }, // L_P                   
    { {     329}, {  473} }, // START                 
    { {     330}, {  474} }, // END                   
    { {     332}, {  529} }, // Q_M_DURATION          
    { {     418}, {  530} }, // f_exp                 
    { {     361}, {   10} }, // NAME                  
    { {     422}, {  242} }, // number                
    { {     426}, {  244} }, // f_head                
    { {     270}, {  170} }, // NUM                   
    { {     389}, {  245} }, // function_symbol       
    { {       0}, { -339} },                          
};

SR__ s_579[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 619} }, // te_time_specifier
    { {       456}, { 620} }, // f_exp_da         
    { {       418}, { 621} }, // f_exp            
    { {       444}, { 525} }, // time_specifier   
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       361}, {  10} }, // NAME             
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_580[] =
{
    { { REQ_DEF}, {  11} },                   
    { {     456}, { 622} }, // f_exp_da       
    { {     418}, { 623} }, // f_exp          
    { {     257}, { 624} }, // L_P            
    { {     332}, { 529} }, // Q_M_DURATION   
    { {     422}, { 242} }, // number         
    { {     426}, { 244} }, // f_head         
    { {     270}, { 170} }, // NUM            
    { {     389}, { 245} }, // function_symbol
    { {     365}, { 120} }, // name           
    { {     361}, {  10} }, // NAME           
    { {       0}, { -97} },                   
};

SR__ s_581[] =
{
    { { REQ_DEF}, {  11} },                   
    { {     456}, { 625} }, // f_exp_da       
    { {     418}, { 626} }, // f_exp          
    { {     257}, { 624} }, // L_P            
    { {     332}, { 529} }, // Q_M_DURATION   
    { {     422}, { 242} }, // number         
    { {     426}, { 244} }, // f_head         
    { {     270}, { 170} }, // NUM            
    { {     389}, { 245} }, // function_symbol
    { {     365}, { 120} }, // name           
    { {     361}, {  10} }, // NAME           
    { {       0}, { -98} },                   
};

SR__ s_582[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -354} }, 
};

SR__ s_583[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -142} }, 
};

SR__ s_584[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -143} }, 
};

SR__ s_585[] =
{
    { { REQ_TOKEN}, {   4} },               
    { {       474}, { 627} }, // pref_con_GD
    { {       393}, { 628} }, // con_GD     
    { {       257}, { 382} }, // L_P        
    { {         0}, {   0} },               
};

SR__ s_586[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -194} }, 
};

SR__ s_587[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 629} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_588[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 630} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_589[] =
{
    { { REQ_DEF}, {   10} },                     
    { {     525}, {  631} }, // list_metric_f_exp
    { {     480}, {  632} }, // metric_f_exp     
    { {     257}, {  438} }, // L_P              
    { {     422}, {  439} }, // number           
    { {     389}, {  440} }, // function_symbol  
    { {     352}, {  441} }, // TOTAL_TIME       
    { {     270}, {  170} }, // NUM              
    { {     365}, {  120} }, // name             
    { {     361}, {   10} }, // NAME             
    { {       0}, { -365} },                     
};

SR__ s_590[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -214} }, 
};

SR__ s_591[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -216} }, 
};

SR__ s_592[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -220} }, 
};

SR__ s_593[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -223} }, 
};

SR__ s_594[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       356}, { 443} }, // PARALLEL
    { {         0}, {   0} },            
};

SR__ s_595[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -225} }, 
};

SR__ s_596[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 633} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_597[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 634} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_598[] =
{
    { { REQ_TOKEN}, {  15} },              
    { {       306}, { 398} }, // AND       
    { {       307}, { 399} }, // FORALL    
    { {       313}, { 400} }, // WHEN      
    { {       310}, { 401} }, // NOT       
    { {       432}, { 402} }, // assign_op 
    { {       314}, { 403} }, // ASSIGN    
    { {       385}, { 186} }, // predicate 
    { {       262}, { 404} }, // EQ        
    { {       316}, { 405} }, // SCALE_UP  
    { {       317}, { 406} }, // SCALE_DOWN
    { {       318}, { 407} }, // INCREASE  
    { {       319}, { 408} }, // DECREASE  
    { {       365}, { 114} }, // name      
    { {       361}, {  10} }, // NAME      
    { {         0}, {   0} },              
};

SR__ s_599[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 635} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_600[] =
{
    { { REQ_DEF}, {    5} },                       
    { {     433}, {  636} }, // list_p_effect      
    { {     431}, {  600} }, // p_effect           
    { {     257}, {  601} }, // L_P                
    { {     413}, {  359} }, // atomic_formula_term
    { {       0}, { -337} },                       
};

SR__ s_601[] =
{
    { { REQ_TOKEN}, {  12} },              
    { {       310}, { 401} }, // NOT       
    { {       432}, { 402} }, // assign_op 
    { {       314}, { 403} }, // ASSIGN    
    { {       385}, { 186} }, // predicate 
    { {       262}, { 404} }, // EQ        
    { {       316}, { 405} }, // SCALE_UP  
    { {       317}, { 406} }, // SCALE_DOWN
    { {       318}, { 407} }, // INCREASE  
    { {       319}, { 408} }, // DECREASE  
    { {       365}, { 114} }, // name      
    { {       361}, {  10} }, // NAME      
    { {         0}, {   0} },              
};

SR__ s_602[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -285} }, 
};

SR__ s_603[] =
{
    { { REQ_DEF}, {    5} },                  
    { {     451}, {  637} }, // list_da_effect
    { {     450}, {  638} }, // da_effect     
    { {     257}, {  639} }, // L_P           
    { {     452}, {  564} }, // timed_effect  
    { {       0}, { -355} },                  
};

SR__ s_604[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 640} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_605[] =
{
    { { REQ_TOKEN}, {   5} },                 
    { {       439}, { 641} }, // da_GD        
    { {       440}, { 465} }, // pref_timed_GD
    { {       257}, { 567} }, // L_P          
    { {       442}, { 466} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_606[] =
{
    { { REQ_TOKEN}, {   4} },                  
    { {       444}, { 642} }, // time_specifier
    { {       329}, { 473} }, // START         
    { {       330}, { 474} }, // END           
    { {         0}, {   0} },                  
};

SR__ s_607[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       426}, { 643} }, // f_head         
    { {       257}, { 460} }, // L_P            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_608[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -162} }, 
};

SR__ s_609[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -163} }, 
};

SR__ s_610[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -128} }, 
};

SR__ s_611[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -352} }, 
};

SR__ s_612[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 644} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_613[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -132} }, 
};

SR__ s_614[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 645} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_615[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 646} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_616[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 647} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_617[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 648} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_618[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -340} }, 
};

SR__ s_619[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 649} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_620[] =
{
    { { REQ_DEF}, {   11} },                   
    { {     456}, {  650} }, // f_exp_da       
    { {     257}, {  624} }, // L_P            
    { {     332}, {  529} }, // Q_M_DURATION   
    { {     418}, {  530} }, // f_exp          
    { {     422}, {  242} }, // number         
    { {     426}, {  244} }, // f_head         
    { {     270}, {  170} }, // NUM            
    { {     389}, {  245} }, // function_symbol
    { {     365}, {  120} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -232} },                   
};

SR__ s_621[] =
{
    { { REQ_DEF}, {    9} },                   
    { {     418}, {  368} }, // f_exp          
    { {     422}, {  242} }, // number         
    { {     257}, {  243} }, // L_P            
    { {     426}, {  244} }, // f_head         
    { {     270}, {  170} }, // NUM            
    { {     389}, {  245} }, // function_symbol
    { {     365}, {  120} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -161} },                   
};

SR__ s_622[] =
{
    { { REQ_TOKEN}, {  12} },                   
    { {       457}, { 651} }, // nvList_f_exp_da
    { {       456}, { 652} }, // f_exp_da       
    { {       257}, { 624} }, // L_P            
    { {       332}, { 529} }, // Q_M_DURATION   
    { {       418}, { 530} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_623[] =
{
    { { REQ_DEF}, {   10} },                   
    { {     425}, {  369} }, // nvList_f_exp   
    { {     418}, {  370} }, // f_exp          
    { {     422}, {  242} }, // number         
    { {     257}, {  243} }, // L_P            
    { {     426}, {  244} }, // f_head         
    { {     270}, {  170} }, // NUM            
    { {     389}, {  245} }, // function_symbol
    { {     365}, {  120} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -161} },                   
};

SR__ s_624[] =
{
    { { REQ_TOKEN}, {  10} },                   
    { {       423}, { 653} }, // binary_op      
    { {       424}, { 580} }, // multi_op       
    { {       328}, { 581} }, // MINUS          
    { {       389}, { 286} }, // function_symbol
    { {       263}, { 287} }, // SLASH          
    { {       264}, { 288} }, // STAR           
    { {       265}, { 289} }, // PLUS           
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_625[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 654} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_626[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, {  371} }, // R_P
    { {       0}, { -161} },       
};

SR__ s_627[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 655} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_628[] =
{
    { { REQ_DEF}, {    2} },       
    { {     258}, {  349} }, // R_P
    { {       0}, { -192} },       
};

SR__ s_629[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -212} }, 
};

SR__ s_630[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -213} }, 
};

SR__ s_631[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -312} }, 
};

SR__ s_632[] =
{
    { { REQ_DEF}, {   10} },                     
    { {     525}, {  656} }, // list_metric_f_exp
    { {     480}, {  632} }, // metric_f_exp     
    { {     257}, {  438} }, // L_P              
    { {     422}, {  439} }, // number           
    { {     389}, {  440} }, // function_symbol  
    { {     352}, {  441} }, // TOTAL_TIME       
    { {     270}, {  170} }, // NUM              
    { {     365}, {  120} }, // name             
    { {     361}, {   10} }, // NAME             
    { {       0}, { -365} },                     
};

SR__ s_633[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -69} }, 
};

SR__ s_634[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -109} }, 
};

SR__ s_635[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -117} }, 
};

SR__ s_636[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -338} }, 
};

SR__ s_637[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 657} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_638[] =
{
    { { REQ_DEF}, {    5} },                  
    { {     451}, {  658} }, // list_da_effect
    { {     450}, {  638} }, // da_effect     
    { {     257}, {  639} }, // L_P           
    { {     452}, {  564} }, // timed_effect  
    { {       0}, { -355} },                  
};

SR__ s_639[] =
{
    { { REQ_TOKEN}, {   8} },               
    { {       306}, { 603} }, // AND        
    { {       307}, { 604} }, // FORALL     
    { {       313}, { 605} }, // WHEN       
    { {       323}, { 606} }, // AT         
    { {       454}, { 607} }, // assign_op_t
    { {       318}, { 608} }, // INCREASE   
    { {       319}, { 609} }, // DECREASE   
    { {         0}, {   0} },               
};

SR__ s_640[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  659} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_641[] =
{
    { { REQ_TOKEN}, {   3} },                
    { {       452}, { 660} }, // timed_effect
    { {       257}, { 661} }, // L_P         
    { {         0}, {   0} },                
};

SR__ s_642[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       430}, { 662} }, // cond_effect        
    { {       453}, { 663} }, // f_assign_da        
    { {       257}, { 664} }, // L_P                
    { {       431}, { 511} }, // p_effect           
    { {       413}, { 359} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_643[] =
{
    { { REQ_TOKEN}, {   4} },           
    { {       455}, { 665} }, // f_exp_t
    { {       257}, { 666} }, // L_P    
    { {       261}, { 667} }, // NS_T   
    { {         0}, {   0} },           
};

SR__ s_644[] =
{
    { { REQ_TOKEN}, {   5} },                 
    { {       439}, { 668} }, // da_GD        
    { {       440}, { 465} }, // pref_timed_GD
    { {       257}, { 567} }, // L_P          
    { {       442}, { 466} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_645[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -133} }, 
};

SR__ s_646[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -134} }, 
};

SR__ s_647[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -135} }, 
};

SR__ s_648[] =
{
    { { REQ_TOKEN}, {  11} },                            
    { {       487}, { 669} }, // nvList_te_interval_alias
    { {       494}, { 670} }, // te_interval_alias       
    { {       495}, { 671} }, // te_interval             
    { {       445}, { 672} }, // interval                
    { {       365}, { 673} }, // name                    
    { {       496}, { 674} }, // bracket                 
    { {       331}, { 575} }, // ALL                     
    { {       361}, {  10} }, // NAME                    
    { {       259}, { 675} }, // L_B                     
    { {       260}, { 676} }, // R_B                     
    { {         0}, {   0} },                            
};

SR__ s_649[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 677} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_650[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 678} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_651[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 679} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_652[] =
{
    { { REQ_DEF}, {   12} },                   
    { {     524}, {  680} }, // list_f_exp_da  
    { {     456}, {  681} }, // f_exp_da       
    { {     257}, {  624} }, // L_P            
    { {     332}, {  529} }, // Q_M_DURATION   
    { {     418}, {  530} }, // f_exp          
    { {     422}, {  242} }, // number         
    { {     426}, {  244} }, // f_head         
    { {     270}, {  170} }, // NUM            
    { {     389}, {  245} }, // function_symbol
    { {     365}, {  120} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -357} },                   
};

SR__ s_653[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       456}, { 682} }, // f_exp_da       
    { {       418}, { 621} }, // f_exp          
    { {       257}, { 624} }, // L_P            
    { {       332}, { 529} }, // Q_M_DURATION   
    { {       422}, { 242} }, // number         
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_654[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -159} }, 
};

SR__ s_655[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -190} }, 
};

SR__ s_656[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -366} }, 
};

SR__ s_657[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -149} }, 
};

SR__ s_658[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -356} }, 
};

SR__ s_659[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 683} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_660[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 684} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_661[] =
{
    { { REQ_TOKEN}, {   5} },               
    { {       323}, { 606} }, // AT         
    { {       454}, { 607} }, // assign_op_t
    { {       318}, { 608} }, // INCREASE   
    { {       319}, { 609} }, // DECREASE   
    { {         0}, {   0} },               
};

SR__ s_662[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 685} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_663[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 686} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_664[] =
{
    { { REQ_TOKEN}, {  13} },              
    { {       306}, { 558} }, // AND       
    { {       432}, { 687} }, // assign_op 
    { {       310}, { 401} }, // NOT       
    { {       314}, { 403} }, // ASSIGN    
    { {       385}, { 186} }, // predicate 
    { {       262}, { 404} }, // EQ        
    { {       316}, { 405} }, // SCALE_UP  
    { {       317}, { 406} }, // SCALE_DOWN
    { {       318}, { 407} }, // INCREASE  
    { {       319}, { 408} }, // DECREASE  
    { {       365}, { 114} }, // name      
    { {       361}, {  10} }, // NAME      
    { {         0}, {   0} },              
};

SR__ s_665[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 688} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_666[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       264}, { 689} }, // STAR
    { {         0}, {   0} },        
};

SR__ s_667[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -166} }, 
};

SR__ s_668[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 690} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_669[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 691} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_670[] =
{
    { { REQ_DEF}, {   11} },                          
    { {     520}, {  692} }, // list_te_interval_alias
    { {     494}, {  693} }, // te_interval_alias     
    { {     495}, {  671} }, // te_interval           
    { {     445}, {  672} }, // interval              
    { {     365}, {  673} }, // name                  
    { {     496}, {  674} }, // bracket               
    { {     331}, {  575} }, // ALL                   
    { {     361}, {   10} }, // NAME                  
    { {     259}, {  675} }, // L_B                   
    { {     260}, {  676} }, // R_B                   
    { {       0}, { -341} },                          
};

SR__ s_671[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 694} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_672[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -236} }, 
};

SR__ s_673[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -237} }, 
};

SR__ s_674[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 695} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_675[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -270} }, 
};

SR__ s_676[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -271} }, 
};

SR__ s_677[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -234} }, 
};

SR__ s_678[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -157} }, 
};

SR__ s_679[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -158} }, 
};

SR__ s_680[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -311} }, 
};

SR__ s_681[] =
{
    { { REQ_DEF}, {   12} },                   
    { {     524}, {  696} }, // list_f_exp_da  
    { {     456}, {  681} }, // f_exp_da       
    { {     257}, {  624} }, // L_P            
    { {     332}, {  529} }, // Q_M_DURATION   
    { {     418}, {  530} }, // f_exp          
    { {     422}, {  242} }, // number         
    { {     426}, {  244} }, // f_head         
    { {     270}, {  170} }, // NUM            
    { {     389}, {  245} }, // function_symbol
    { {     365}, {  120} }, // name           
    { {     361}, {   10} }, // NAME           
    { {       0}, { -357} },                   
};

SR__ s_682[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       456}, { 650} }, // f_exp_da       
    { {       257}, { 624} }, // L_P            
    { {       332}, { 529} }, // Q_M_DURATION   
    { {       418}, { 530} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_683[] =
{
    { { REQ_TOKEN}, {   4} },                
    { {       450}, { 697} }, // da_effect   
    { {       257}, { 639} }, // L_P         
    { {       452}, { 564} }, // timed_effect
    { {         0}, {   0} },                
};

SR__ s_684[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -152} }, 
};

SR__ s_685[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -153} }, 
};

SR__ s_686[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -154} }, 
};

SR__ s_687[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       426}, { 698} }, // f_head         
    { {       257}, { 460} }, // L_P            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_688[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -155} }, 
};

SR__ s_689[] =
{
    { { REQ_TOKEN}, {  10} },                   
    { {       418}, { 699} }, // f_exp          
    { {       261}, { 700} }, // NS_T           
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_690[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -129} }, 
};

SR__ s_691[] =
{
    { { REQ_TOKEN}, {   4} },                          
    { {       488}, { 701} }, // te_da_def_body_option1
    { {       360}, { 702} }, // TIMECONSTRAINTS       
    { {       359}, { 703} }, // TIMEMODALITY          
    { {         0}, {   0} },                          
};

SR__ s_692[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -307} }, 
};

SR__ s_693[] =
{
    { { REQ_DEF}, {   11} },                          
    { {     520}, {  704} }, // list_te_interval_alias
    { {     494}, {  693} }, // te_interval_alias     
    { {     495}, {  671} }, // te_interval           
    { {     445}, {  672} }, // interval              
    { {     365}, {  673} }, // name                  
    { {     496}, {  674} }, // bracket               
    { {     331}, {  575} }, // ALL                   
    { {     361}, {   10} }, // NAME                  
    { {     259}, {  675} }, // L_B                   
    { {     260}, {  676} }, // R_B                   
    { {       0}, { -341} },                          
};

SR__ s_694[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -235} }, 
};

SR__ s_695[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 705} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_696[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -358} }, 
};

SR__ s_697[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 706} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_698[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       456}, { 707} }, // f_exp_da       
    { {       418}, { 708} }, // f_exp          
    { {       257}, { 624} }, // L_P            
    { {       332}, { 529} }, // Q_M_DURATION   
    { {       422}, { 242} }, // number         
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_699[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       261}, { 709} }, // NS_T
    { {         0}, {   0} },        
};

SR__ s_700[] =
{
    { { REQ_TOKEN}, {   9} },                   
    { {       418}, { 710} }, // f_exp          
    { {       422}, { 242} }, // number         
    { {       257}, { 243} }, // L_P            
    { {       426}, { 244} }, // f_head         
    { {       270}, { 170} }, // NUM            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_701[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -228} }, 
};

SR__ s_702[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 711} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_703[] =
{
    { { REQ_TOKEN}, {   4} },                                
    { {       492}, { 712} }, // nvList_te_time_modality_user
    { {       508}, { 713} }, // te_time_modality_user       
    { {       257}, { 714} }, // L_P                         
    { {         0}, {   0} },                                
};

SR__ s_704[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -342} }, 
};

SR__ s_705[] =
{
    { { REQ_TOKEN}, {   4} },           
    { {       496}, { 715} }, // bracket
    { {       259}, { 675} }, // L_B    
    { {       260}, { 676} }, // R_B    
    { {         0}, {   0} },           
};

SR__ s_706[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -151} }, 
};

SR__ s_707[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 716} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_708[] =
{
    { { REQ_DEF}, {    1} }, 
    { {       0}, { -114} }, 
};

SR__ s_709[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 717} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_710[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 718} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_711[] =
{
    { { REQ_TOKEN}, {   4} },                              
    { {       489}, { 719} }, // nvList_te_time_constraints
    { {       497}, { 720} }, // te_time_constraints       
    { {       257}, { 721} }, // L_P                       
    { {         0}, {   0} },                              
};

SR__ s_712[] =
{
    { { REQ_TOKEN}, {   2} },                   
    { {       360}, { 722} }, // TIMECONSTRAINTS
    { {         0}, {   0} },                   
};

SR__ s_713[] =
{
    { { REQ_DEF}, {    4} },                              
    { {     521}, {  723} }, // list_te_time_modality_user
    { {     508}, {  724} }, // te_time_modality_user     
    { {     257}, {  714} }, // L_P                       
    { {       0}, { -343} },                              
};

SR__ s_714[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       365}, { 725} }, // name
    { {       361}, {  10} }, // NAME
    { {         0}, {   0} },        
};

SR__ s_715[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -238} }, 
};

SR__ s_716[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -156} }, 
};

SR__ s_717[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -164} }, 
};

SR__ s_718[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -165} }, 
};

SR__ s_719[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 726} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_720[] =
{
    { { REQ_DEF}, {    4} },                            
    { {     522}, {  727} }, // list_te_time_constraints
    { {     497}, {  728} }, // te_time_constraints     
    { {     257}, {  721} }, // L_P                     
    { {       0}, { -345} },                            
};

SR__ s_721[] =
{
    { { REQ_TOKEN}, {   7} },               
    { {       417}, { 729} }, // binary_comp
    { {       266}, { 189} }, // GT         
    { {       267}, { 190} }, // LT         
    { {       262}, { 730} }, // EQ         
    { {       268}, { 191} }, // GOE        
    { {       269}, { 192} }, // LOE        
    { {         0}, {   0} },               
};

SR__ s_722[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 731} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_723[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -308} }, 
};

SR__ s_724[] =
{
    { { REQ_DEF}, {    4} },                              
    { {     521}, {  732} }, // list_te_time_modality_user
    { {     508}, {  724} }, // te_time_modality_user     
    { {     257}, {  714} }, // L_P                       
    { {       0}, { -343} },                              
};

SR__ s_725[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       445}, { 733} }, // interval
    { {       331}, { 575} }, // ALL     
    { {         0}, {   0} },            
};

SR__ s_726[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       322}, { 734} }, // CONDITION
    { {         0}, {   0} },             
};

SR__ s_727[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -309} }, 
};

SR__ s_728[] =
{
    { { REQ_DEF}, {    4} },                            
    { {     522}, {  735} }, // list_te_time_constraints
    { {     497}, {  728} }, // te_time_constraints     
    { {     257}, {  721} }, // L_P                     
    { {       0}, { -345} },                            
};

SR__ s_729[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 736} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_730[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -104} }, 
};

SR__ s_731[] =
{
    { { REQ_TOKEN}, {   4} },                              
    { {       489}, { 737} }, // nvList_te_time_constraints
    { {       497}, { 720} }, // te_time_constraints       
    { {       257}, { 721} }, // L_P                       
    { {         0}, {   0} },                              
};

SR__ s_732[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -344} }, 
};

SR__ s_733[] =
{
    { { REQ_TOKEN}, {   4} },                           
    { {       507}, { 738} }, // te_fluent              
    { {       384}, { 739} }, // atomic_formula_skeleton
    { {       257}, { 740} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_734[] =
{
    { { REQ_TOKEN}, {   6} },                    
    { {       490}, { 741} }, // emptyOr_te_da_GD
    { {       257}, { 742} }, // L_P             
    { {       498}, { 743} }, // te_da_GD        
    { {       499}, { 744} }, // te_pref_timed_GD
    { {       501}, { 745} }, // te_timed_GD     
    { {         0}, {   0} },                    
};

SR__ s_735[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -346} }, 
};

SR__ s_736[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 746} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_737[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 747} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_738[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 748} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_739[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -267} }, 
};

SR__ s_740[] =
{
    { { REQ_TOKEN}, {   5} },             
    { {       310}, { 749} }, // NOT      
    { {       385}, { 113} }, // predicate
    { {       365}, { 114} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_741[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       305}, { 750} }, // EFFECT
    { {         0}, {   0} },          
};

SR__ s_742[] =
{
    { { REQ_TOKEN}, {  12} },                   
    { {       258}, { 751} }, // R_P            
    { {       306}, { 752} }, // AND            
    { {       307}, { 753} }, // FORALL         
    { {       308}, { 754} }, // PREFERENCE     
    { {       323}, { 755} }, // AT             
    { {       324}, { 756} }, // OVER           
    { {       325}, { 757} }, // SOMEWHERE      
    { {       326}, { 758} }, // ANYWHERE       
    { {       327}, { 759} }, // TRANSITION_OVER
    { {       365}, { 760} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_743[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -288} }, 
};

SR__ s_744[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -240} }, 
};

SR__ s_745[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -243} }, 
};

SR__ s_746[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 761} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_747[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       322}, { 762} }, // CONDITION
    { {         0}, {   0} },             
};

SR__ s_748[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -269} }, 
};

SR__ s_749[] =
{
    { { REQ_TOKEN}, {   3} },                           
    { {       384}, { 763} }, // atomic_formula_skeleton
    { {       257}, {  89} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_750[] =
{
    { { REQ_TOKEN}, {   6} },                        
    { {       491}, { 764} }, // emptyOr_te_da_effect
    { {       257}, { 765} }, // L_P                 
    { {       503}, { 766} }, // te_da_effect        
    { {       505}, { 767} }, // te_timed_effect     
    { {       506}, { 768} }, // te_modality         
    { {         0}, {   0} },                        
};

SR__ s_751[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -287} }, 
};

SR__ s_752[] =
{
    { { REQ_DEF}, {    6} },                    
    { {     500}, {  769} }, // list_te_da_GD   
    { {     498}, {  770} }, // te_da_GD        
    { {     499}, {  744} }, // te_pref_timed_GD
    { {     257}, {  771} }, // L_P             
    { {     501}, {  745} }, // te_timed_GD     
    { {       0}, { -347} },                    
};

SR__ s_753[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 772} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_754[] =
{
    { { REQ_TOKEN}, {   7} },                            
    { {       502}, { 773} }, // te_pref_timed_GD_option1
    { {       501}, { 774} }, // te_timed_GD             
    { {       412}, { 775} }, // pref_name               
    { {       257}, { 776} }, // L_P                     
    { {       365}, { 451} }, // name                    
    { {       361}, {  10} }, // NAME                    
    { {         0}, {   0} },                            
};

SR__ s_755[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 777} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_756[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 778} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_757[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 779} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_758[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 780} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_759[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 781} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_760[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 782} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_761[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -239} }, 
};

SR__ s_762[] =
{
    { { REQ_TOKEN}, {   6} },                    
    { {       490}, { 783} }, // emptyOr_te_da_GD
    { {       257}, { 742} }, // L_P             
    { {       498}, { 743} }, // te_da_GD        
    { {       499}, { 744} }, // te_pref_timed_GD
    { {       501}, { 745} }, // te_timed_GD     
    { {         0}, {   0} },                    
};

SR__ s_763[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 784} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_764[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -229} }, 
};

SR__ s_765[] =
{
    { { REQ_TOKEN}, {  15} },                   
    { {       258}, { 785} }, // R_P            
    { {       306}, { 786} }, // AND            
    { {       307}, { 787} }, // FORALL         
    { {       313}, { 788} }, // WHEN           
    { {       323}, { 789} }, // AT             
    { {       454}, { 790} }, // assign_op_t    
    { {       324}, { 791} }, // OVER           
    { {       325}, { 792} }, // SOMEWHERE      
    { {       326}, { 793} }, // ANYWHERE       
    { {       327}, { 794} }, // TRANSITION_OVER
    { {       365}, { 795} }, // name           
    { {       318}, { 608} }, // INCREASE       
    { {       319}, { 609} }, // DECREASE       
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_766[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -290} }, 
};

SR__ s_767[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -254} }, 
};

SR__ s_768[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -255} }, 
};

SR__ s_769[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 796} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_770[] =
{
    { { REQ_DEF}, {    6} },                    
    { {     500}, {  797} }, // list_te_da_GD   
    { {     498}, {  770} }, // te_da_GD        
    { {     499}, {  744} }, // te_pref_timed_GD
    { {     257}, {  771} }, // L_P             
    { {     501}, {  745} }, // te_timed_GD     
    { {       0}, { -347} },                    
};

SR__ s_771[] =
{
    { { REQ_TOKEN}, {  11} },                   
    { {       306}, { 752} }, // AND            
    { {       307}, { 753} }, // FORALL         
    { {       308}, { 754} }, // PREFERENCE     
    { {       323}, { 755} }, // AT             
    { {       324}, { 756} }, // OVER           
    { {       325}, { 757} }, // SOMEWHERE      
    { {       326}, { 758} }, // ANYWHERE       
    { {       327}, { 759} }, // TRANSITION_OVER
    { {       365}, { 760} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_772[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  798} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_773[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -244} }, 
};

SR__ s_774[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 799} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_775[] =
{
    { { REQ_TOKEN}, {   3} },               
    { {       501}, { 800} }, // te_timed_GD
    { {       257}, { 776} }, // L_P        
    { {         0}, {   0} },               
};

SR__ s_776[] =
{
    { { REQ_TOKEN}, {   8} },                   
    { {       323}, { 755} }, // AT             
    { {       324}, { 756} }, // OVER           
    { {       325}, { 757} }, // SOMEWHERE      
    { {       326}, { 758} }, // ANYWHERE       
    { {       327}, { 759} }, // TRANSITION_OVER
    { {       365}, { 760} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_777[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 801} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_778[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 802} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_779[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 803} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_780[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 804} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_781[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 805} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_782[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       410}, { 806} }, // GD                 
    { {       413}, { 137} }, // atomic_formula_term
    { {       414}, { 138} }, // literal_term       
    { {       257}, { 139} }, // L_P                
    { {       416}, { 140} }, // f_comp             
    { {         0}, {   0} },                       
};

SR__ s_783[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       305}, { 807} }, // EFFECT
    { {         0}, {   0} },          
};

SR__ s_784[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -268} }, 
};

SR__ s_785[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -289} }, 
};

SR__ s_786[] =
{
    { { REQ_DEF}, {    6} },                     
    { {     504}, {  808} }, // list_te_da_effect
    { {     503}, {  809} }, // te_da_effect     
    { {     257}, {  810} }, // L_P              
    { {     505}, {  767} }, // te_timed_effect  
    { {     506}, {  768} }, // te_modality      
    { {       0}, { -349} },                     
};

SR__ s_787[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       257}, { 811} }, // L_P
    { {         0}, {   0} },       
};

SR__ s_788[] =
{
    { { REQ_TOKEN}, {   5} },                 
    { {       439}, { 812} }, // da_GD        
    { {       440}, { 465} }, // pref_timed_GD
    { {       257}, { 567} }, // L_P          
    { {       442}, { 466} }, // timed_GD     
    { {         0}, {   0} },                 
};

SR__ s_789[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 813} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_790[] =
{
    { { REQ_TOKEN}, {   6} },                   
    { {       426}, { 814} }, // f_head         
    { {       257}, { 460} }, // L_P            
    { {       389}, { 245} }, // function_symbol
    { {       365}, { 120} }, // name           
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_791[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 815} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_792[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 816} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_793[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 817} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_794[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 818} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_795[] =
{
    { { REQ_TOKEN}, {   9} },               
    { {       495}, { 819} }, // te_interval
    { {       445}, { 672} }, // interval   
    { {       365}, { 673} }, // name       
    { {       496}, { 674} }, // bracket    
    { {       331}, { 575} }, // ALL        
    { {       361}, {  10} }, // NAME       
    { {       259}, { 675} }, // L_B        
    { {       260}, { 676} }, // R_B        
    { {         0}, {   0} },               
};

SR__ s_796[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -241} }, 
};

SR__ s_797[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -348} }, 
};

SR__ s_798[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 820} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_799[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -245} }, 
};

SR__ s_800[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 821} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_801[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 822} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_802[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 823} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_803[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 824} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_804[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 825} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_805[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 826} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_806[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 827} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_807[] =
{
    { { REQ_TOKEN}, {   6} },                        
    { {       491}, { 828} }, // emptyOr_te_da_effect
    { {       257}, { 765} }, // L_P                 
    { {       503}, { 766} }, // te_da_effect        
    { {       505}, { 767} }, // te_timed_effect     
    { {       506}, { 768} }, // te_modality         
    { {         0}, {   0} },                        
};

SR__ s_808[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 829} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_809[] =
{
    { { REQ_DEF}, {    6} },                     
    { {     504}, {  830} }, // list_te_da_effect
    { {     503}, {  809} }, // te_da_effect     
    { {     257}, {  810} }, // L_P              
    { {     505}, {  767} }, // te_timed_effect  
    { {     506}, {  768} }, // te_modality      
    { {       0}, { -349} },                     
};

SR__ s_810[] =
{
    { { REQ_TOKEN}, {  14} },                   
    { {       306}, { 786} }, // AND            
    { {       307}, { 787} }, // FORALL         
    { {       313}, { 788} }, // WHEN           
    { {       323}, { 789} }, // AT             
    { {       454}, { 790} }, // assign_op_t    
    { {       324}, { 791} }, // OVER           
    { {       325}, { 792} }, // SOMEWHERE      
    { {       326}, { 793} }, // ANYWHERE       
    { {       327}, { 794} }, // TRANSITION_OVER
    { {       365}, { 795} }, // name           
    { {       318}, { 608} }, // INCREASE       
    { {       319}, { 609} }, // DECREASE       
    { {       361}, {  10} }, // NAME           
    { {         0}, {   0} },                   
};

SR__ s_811[] =
{
    { { REQ_DEF}, {    6} },                       
    { {     386}, {  831} }, // typed_list_variable
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     387}, {  153} }, // variable           
    { {     333}, {  154} }, // Q_M                
    { {       0}, { -321} },                       
};

SR__ s_812[] =
{
    { { REQ_TOKEN}, {   3} },                   
    { {       505}, { 832} }, // te_timed_effect
    { {       257}, { 833} }, // L_P            
    { {         0}, {   0} },                   
};

SR__ s_813[] =
{
    { { REQ_TOKEN}, {   8} },                           
    { {       430}, { 834} }, // cond_effect            
    { {       453}, { 835} }, // f_assign_da            
    { {       507}, { 836} }, // te_fluent              
    { {       257}, { 837} }, // L_P                    
    { {       431}, { 511} }, // p_effect               
    { {       384}, { 739} }, // atomic_formula_skeleton
    { {       413}, { 359} }, // atomic_formula_term    
    { {         0}, {   0} },                           
};

SR__ s_814[] =
{
    { { REQ_TOKEN}, {   4} },           
    { {       455}, { 838} }, // f_exp_t
    { {       257}, { 666} }, // L_P    
    { {       261}, { 667} }, // NS_T   
    { {         0}, {   0} },           
};

SR__ s_815[] =
{
    { { REQ_TOKEN}, {   4} },                           
    { {       507}, { 839} }, // te_fluent              
    { {       384}, { 739} }, // atomic_formula_skeleton
    { {       257}, { 740} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_816[] =
{
    { { REQ_TOKEN}, {   4} },                           
    { {       507}, { 840} }, // te_fluent              
    { {       384}, { 739} }, // atomic_formula_skeleton
    { {       257}, { 740} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_817[] =
{
    { { REQ_TOKEN}, {   4} },                           
    { {       507}, { 841} }, // te_fluent              
    { {       384}, { 739} }, // atomic_formula_skeleton
    { {       257}, { 740} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_818[] =
{
    { { REQ_TOKEN}, {   4} },                           
    { {       507}, { 842} }, // te_fluent              
    { {       384}, { 739} }, // atomic_formula_skeleton
    { {       257}, { 740} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_819[] =
{
    { { REQ_TOKEN}, {   4} },                           
    { {       507}, { 843} }, // te_fluent              
    { {       384}, { 739} }, // atomic_formula_skeleton
    { {       257}, { 740} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_820[] =
{
    { { REQ_TOKEN}, {   5} },                    
    { {       498}, { 844} }, // te_da_GD        
    { {       499}, { 744} }, // te_pref_timed_GD
    { {       257}, { 771} }, // L_P             
    { {       501}, { 745} }, // te_timed_GD     
    { {         0}, {   0} },                    
};

SR__ s_821[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -246} }, 
};

SR__ s_822[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -247} }, 
};

SR__ s_823[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -248} }, 
};

SR__ s_824[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -249} }, 
};

SR__ s_825[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -250} }, 
};

SR__ s_826[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -251} }, 
};

SR__ s_827[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -252} }, 
};

SR__ s_828[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -230} }, 
};

SR__ s_829[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -253} }, 
};

SR__ s_830[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -350} }, 
};

SR__ s_831[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 845} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_832[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 846} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_833[] =
{
    { { REQ_TOKEN}, {   5} },               
    { {       323}, { 847} }, // AT         
    { {       454}, { 790} }, // assign_op_t
    { {       318}, { 608} }, // INCREASE   
    { {       319}, { 609} }, // DECREASE   
    { {         0}, {   0} },               
};

SR__ s_834[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 848} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_835[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 849} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_836[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 850} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_837[] =
{
    { { REQ_TOKEN}, {  13} },              
    { {       306}, { 558} }, // AND       
    { {       432}, { 687} }, // assign_op 
    { {       310}, { 851} }, // NOT       
    { {       314}, { 403} }, // ASSIGN    
    { {       385}, { 852} }, // predicate 
    { {       262}, { 404} }, // EQ        
    { {       316}, { 405} }, // SCALE_UP  
    { {       317}, { 406} }, // SCALE_DOWN
    { {       318}, { 407} }, // INCREASE  
    { {       319}, { 408} }, // DECREASE  
    { {       365}, { 114} }, // name      
    { {       361}, {  10} }, // NAME      
    { {         0}, {   0} },              
};

SR__ s_838[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 853} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_839[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 854} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_840[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 855} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_841[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 856} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_842[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 857} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_843[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 858} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_844[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 859} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_845[] =
{
    { { REQ_TOKEN}, {   5} },                   
    { {       503}, { 860} }, // te_da_effect   
    { {       257}, { 810} }, // L_P            
    { {       505}, { 767} }, // te_timed_effect
    { {       506}, { 768} }, // te_modality    
    { {         0}, {   0} },                   
};

SR__ s_846[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -257} }, 
};

SR__ s_847[] =
{
    { { REQ_TOKEN}, {  15} },                     
    { {       493}, { 861} }, // te_time_specifier
    { {       444}, { 525} }, // time_specifier   
    { {       456}, { 526} }, // f_exp_da         
    { {       365}, { 527} }, // name             
    { {       257}, { 528} }, // L_P              
    { {       329}, { 473} }, // START            
    { {       330}, { 474} }, // END              
    { {       332}, { 529} }, // Q_M_DURATION     
    { {       418}, { 530} }, // f_exp            
    { {       361}, {  10} }, // NAME             
    { {       422}, { 242} }, // number           
    { {       426}, { 244} }, // f_head           
    { {       270}, { 170} }, // NUM              
    { {       389}, { 245} }, // function_symbol  
    { {         0}, {   0} },                     
};

SR__ s_848[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -258} }, 
};

SR__ s_849[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -259} }, 
};

SR__ s_850[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -261} }, 
};

SR__ s_851[] =
{
    { { REQ_TOKEN}, {   4} },                           
    { {       384}, { 763} }, // atomic_formula_skeleton
    { {       413}, { 457} }, // atomic_formula_term    
    { {       257}, { 862} }, // L_P                    
    { {         0}, {   0} },                           
};

SR__ s_852[] =
{
    { { REQ_DEF}, {   13} },                       
    { {     386}, {  150} }, // typed_list_variable
    { {     421}, {  234} }, // list_term          
    { {     511}, {  151} }, // list_variable      
    { {     512}, {  152} }, // nvList_variable    
    { {     419}, {  235} }, // term               
    { {     387}, {  863} }, // variable           
    { {     365}, {  236} }, // name               
    { {     420}, {  238} }, // function_term      
    { {     333}, {  154} }, // Q_M                
    { {     361}, {   10} }, // NAME               
    { {     257}, {  239} }, // L_P                
    { {       0}, { -321} },                       
};

SR__ s_853[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -260} }, 
};

SR__ s_854[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -262} }, 
};

SR__ s_855[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -263} }, 
};

SR__ s_856[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -264} }, 
};

SR__ s_857[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -265} }, 
};

SR__ s_858[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -266} }, 
};

SR__ s_859[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -242} }, 
};

SR__ s_860[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       258}, { 864} }, // R_P
    { {         0}, {   0} },       
};

SR__ s_861[] =
{
    { { REQ_TOKEN}, {   6} },                       
    { {       430}, { 834} }, // cond_effect        
    { {       453}, { 835} }, // f_assign_da        
    { {       257}, { 664} }, // L_P                
    { {       431}, { 511} }, // p_effect           
    { {       413}, { 359} }, // atomic_formula_term
    { {         0}, {   0} },                       
};

SR__ s_862[] =
{
    { { REQ_TOKEN}, {   5} },             
    { {       385}, { 852} }, // predicate
    { {       262}, { 404} }, // EQ       
    { {       365}, { 114} }, // name     
    { {       361}, {  10} }, // NAME     
    { {         0}, {   0} },             
};

SR__ s_863[] =
{
    { { REQ_DEF}, {    5} },                 
    { {     511}, {  204} }, // list_variable
    { {     387}, {  205} }, // variable     
    { {     333}, {  154} }, // Q_M          
    { {     257}, {  -86} }, // L_P          
    { {     258}, {  -86} }, // R_P          
    { {     361}, {  -86} }, // NAME         
    { {       0}, { -321} },                 
};

SR__ s_864[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -256} }, 
};


// State array:
SR__ *s_state[] =
{
  s_0,  s_1,  s_2,  s_3,  s_4,  s_5,  s_6,  s_7,  s_8,  s_9,
  s_10,  s_11,  s_12,  s_13,  s_14,  s_15,  s_16,  s_17,  s_18,  s_19,
  s_20,  s_21,  s_22,  s_23,  s_24,  s_25,  s_26,  s_27,  s_28,  s_29,
  s_30,  s_31,  s_32,  s_33,  s_34,  s_35,  s_36,  s_37,  s_38,  s_39,
  s_40,  s_41,  s_42,  s_43,  s_44,  s_45,  s_46,  s_47,  s_48,  s_49,
  s_50,  s_51,  s_52,  s_53,  s_54,  s_55,  s_56,  s_57,  s_58,  s_59,
  s_60,  s_61,  s_62,  s_63,  s_64,  s_65,  s_66,  s_67,  s_68,  s_69,
  s_70,  s_71,  s_72,  s_73,  s_74,  s_75,  s_76,  s_77,  s_78,  s_79,
  s_80,  s_81,  s_82,  s_83,  s_84,  s_85,  s_86,  s_87,  s_88,  s_89,
  s_90,  s_91,  s_92,  s_93,  s_94,  s_95,  s_96,  s_97,  s_98,  s_99,
  s_100,  s_101,  s_102,  s_103,  s_104,  s_105,  s_106,  s_107,  s_108,  s_109,
  s_110,  s_111,  s_112,  s_113,  s_114,  s_115,  s_116,  s_117,  s_118,  s_119,
  s_120,  s_121,  s_122,  s_123,  s_124,  s_125,  s_126,  s_127,  s_128,  s_129,
  s_130,  s_131,  s_132,  s_133,  s_134,  s_135,  s_136,  s_137,  s_138,  s_139,
  s_140,  s_141,  s_142,  s_143,  s_144,  s_145,  s_146,  s_147,  s_148,  s_149,
  s_150,  s_151,  s_152,  s_153,  s_154,  s_155,  s_156,  s_157,  s_158,  s_159,
  s_160,  s_161,  s_162,  s_163,  s_164,  s_165,  s_166,  s_167,  s_168,  s_169,
  s_170,  s_171,  s_172,  s_173,  s_174,  s_175,  s_176,  s_177,  s_178,  s_179,
  s_180,  s_181,  s_182,  s_183,  s_184,  s_185,  s_186,  s_187,  s_188,  s_189,
  s_190,  s_191,  s_192,  s_193,  s_194,  s_195,  s_196,  s_197,  s_198,  s_199,
  s_200,  s_201,  s_202,  s_203,  s_204,  s_205,  s_206,  s_207,  s_208,  s_209,
  s_210,  s_211,  s_212,  s_213,  s_214,  s_215,  s_216,  s_217,  s_218,  s_219,
  s_220,  s_221,  s_222,  s_223,  s_224,  s_225,  s_226,  s_227,  s_228,  s_229,
  s_230,  s_231,  s_232,  s_233,  s_234,  s_235,  s_236,  s_237,  s_238,  s_239,
  s_240,  s_241,  s_242,  s_243,  s_244,  s_245,  s_246,  s_247,  s_248,  s_249,
  s_250,  s_251,  s_252,  s_253,  s_254,  s_255,  s_256,  s_257,  s_258,  s_259,
  s_260,  s_261,  s_262,  s_263,  s_264,  s_265,  s_266,  s_267,  s_268,  s_269,
  s_270,  s_271,  s_272,  s_273,  s_274,  s_275,  s_276,  s_277,  s_278,  s_279,
  s_280,  s_281,  s_282,  s_283,  s_284,  s_285,  s_286,  s_287,  s_288,  s_289,
  s_290,  s_291,  s_292,  s_293,  s_294,  s_295,  s_296,  s_297,  s_298,  s_299,
  s_300,  s_301,  s_302,  s_303,  s_304,  s_305,  s_306,  s_307,  s_308,  s_309,
  s_310,  s_311,  s_312,  s_313,  s_314,  s_315,  s_316,  s_317,  s_318,  s_319,
  s_320,  s_321,  s_322,  s_323,  s_324,  s_325,  s_326,  s_327,  s_328,  s_329,
  s_330,  s_331,  s_332,  s_333,  s_334,  s_335,  s_336,  s_337,  s_338,  s_339,
  s_340,  s_341,  s_342,  s_343,  s_344,  s_345,  s_346,  s_347,  s_348,  s_349,
  s_350,  s_351,  s_352,  s_353,  s_354,  s_355,  s_356,  s_357,  s_358,  s_359,
  s_360,  s_361,  s_362,  s_363,  s_364,  s_365,  s_366,  s_367,  s_368,  s_369,
  s_370,  s_371,  s_372,  s_373,  s_374,  s_375,  s_376,  s_377,  s_378,  s_379,
  s_380,  s_381,  s_382,  s_383,  s_384,  s_385,  s_386,  s_387,  s_388,  s_389,
  s_390,  s_391,  s_392,  s_393,  s_394,  s_395,  s_396,  s_397,  s_398,  s_399,
  s_400,  s_401,  s_402,  s_403,  s_404,  s_405,  s_406,  s_407,  s_408,  s_409,
  s_410,  s_411,  s_412,  s_413,  s_414,  s_415,  s_416,  s_417,  s_418,  s_419,
  s_420,  s_421,  s_422,  s_423,  s_424,  s_425,  s_426,  s_427,  s_428,  s_429,
  s_430,  s_431,  s_432,  s_433,  s_434,  s_435,  s_436,  s_437,  s_438,  s_439,
  s_440,  s_441,  s_442,  s_443,  s_444,  s_445,  s_446,  s_447,  s_448,  s_449,
  s_450,  s_451,  s_452,  s_453,  s_454,  s_455,  s_456,  s_457,  s_458,  s_459,
  s_460,  s_461,  s_462,  s_463,  s_464,  s_465,  s_466,  s_467,  s_468,  s_469,
  s_470,  s_471,  s_472,  s_473,  s_474,  s_475,  s_476,  s_477,  s_478,  s_479,
  s_480,  s_481,  s_482,  s_483,  s_484,  s_485,  s_486,  s_487,  s_488,  s_489,
  s_490,  s_491,  s_492,  s_493,  s_494,  s_495,  s_496,  s_497,  s_498,  s_499,
  s_500,  s_501,  s_502,  s_503,  s_504,  s_505,  s_506,  s_507,  s_508,  s_509,
  s_510,  s_511,  s_512,  s_513,  s_514,  s_515,  s_516,  s_517,  s_518,  s_519,
  s_520,  s_521,  s_522,  s_523,  s_524,  s_525,  s_526,  s_527,  s_528,  s_529,
  s_530,  s_531,  s_532,  s_533,  s_534,  s_535,  s_536,  s_537,  s_538,  s_539,
  s_540,  s_541,  s_542,  s_543,  s_544,  s_545,  s_546,  s_547,  s_548,  s_549,
  s_550,  s_551,  s_552,  s_553,  s_554,  s_555,  s_556,  s_557,  s_558,  s_559,
  s_560,  s_561,  s_562,  s_563,  s_564,  s_565,  s_566,  s_567,  s_568,  s_569,
  s_570,  s_571,  s_572,  s_573,  s_574,  s_575,  s_576,  s_577,  s_578,  s_579,
  s_580,  s_581,  s_582,  s_583,  s_584,  s_585,  s_586,  s_587,  s_588,  s_589,
  s_590,  s_591,  s_592,  s_593,  s_594,  s_595,  s_596,  s_597,  s_598,  s_599,
  s_600,  s_601,  s_602,  s_603,  s_604,  s_605,  s_606,  s_607,  s_608,  s_609,
  s_610,  s_611,  s_612,  s_613,  s_614,  s_615,  s_616,  s_617,  s_618,  s_619,
  s_620,  s_621,  s_622,  s_623,  s_624,  s_625,  s_626,  s_627,  s_628,  s_629,
  s_630,  s_631,  s_632,  s_633,  s_634,  s_635,  s_636,  s_637,  s_638,  s_639,
  s_640,  s_641,  s_642,  s_643,  s_644,  s_645,  s_646,  s_647,  s_648,  s_649,
  s_650,  s_651,  s_652,  s_653,  s_654,  s_655,  s_656,  s_657,  s_658,  s_659,
  s_660,  s_661,  s_662,  s_663,  s_664,  s_665,  s_666,  s_667,  s_668,  s_669,
  s_670,  s_671,  s_672,  s_673,  s_674,  s_675,  s_676,  s_677,  s_678,  s_679,
  s_680,  s_681,  s_682,  s_683,  s_684,  s_685,  s_686,  s_687,  s_688,  s_689,
  s_690,  s_691,  s_692,  s_693,  s_694,  s_695,  s_696,  s_697,  s_698,  s_699,
  s_700,  s_701,  s_702,  s_703,  s_704,  s_705,  s_706,  s_707,  s_708,  s_709,
  s_710,  s_711,  s_712,  s_713,  s_714,  s_715,  s_716,  s_717,  s_718,  s_719,
  s_720,  s_721,  s_722,  s_723,  s_724,  s_725,  s_726,  s_727,  s_728,  s_729,
  s_730,  s_731,  s_732,  s_733,  s_734,  s_735,  s_736,  s_737,  s_738,  s_739,
  s_740,  s_741,  s_742,  s_743,  s_744,  s_745,  s_746,  s_747,  s_748,  s_749,
  s_750,  s_751,  s_752,  s_753,  s_754,  s_755,  s_756,  s_757,  s_758,  s_759,
  s_760,  s_761,  s_762,  s_763,  s_764,  s_765,  s_766,  s_767,  s_768,  s_769,
  s_770,  s_771,  s_772,  s_773,  s_774,  s_775,  s_776,  s_777,  s_778,  s_779,
  s_780,  s_781,  s_782,  s_783,  s_784,  s_785,  s_786,  s_787,  s_788,  s_789,
  s_790,  s_791,  s_792,  s_793,  s_794,  s_795,  s_796,  s_797,  s_798,  s_799,
  s_800,  s_801,  s_802,  s_803,  s_804,  s_805,  s_806,  s_807,  s_808,  s_809,
  s_810,  s_811,  s_812,  s_813,  s_814,  s_815,  s_816,  s_817,  s_818,  s_819,
  s_820,  s_821,  s_822,  s_823,  s_824,  s_825,  s_826,  s_827,  s_828,  s_829,
  s_830,  s_831,  s_832,  s_833,  s_834,  s_835,  s_836,  s_837,  s_838,  s_839,
  s_840,  s_841,  s_842,  s_843,  s_844,  s_845,  s_846,  s_847,  s_848,  s_849,
  s_850,  s_851,  s_852,  s_853,  s_854,  s_855,  s_856,  s_857,  s_858,  s_859,
  s_860,  s_861,  s_862,  s_863,  s_864,
};

} // anonymous namespace ends



// If the parsing function call uses arguments, then provide an overloaded
// function.  The code below doesn't rely on parameters, so no arguments are
// required.  Furthermore, parse uses a function try block to allow us to do
// ACCEPT and ABORT from anywhere, even from within members called by actions,
// simply throwing the appropriate exceptions.

ParserBase::ParserBase()
:
    d_stackIdx__(-1),
    // $insert debuginit
    d_debug__(false),
    d_nErrors__(0),
    // $insert requiredtokens
    d_requiredTokens__(0),
    d_acceptedTokens__(d_requiredTokens__),
    d_token__(_UNDETERMINED_),
    d_nextToken__(_UNDETERMINED_)
{}


void Parser::print__()
{
// $insert print
}

void ParserBase::clearin()
{
    d_token__ = d_nextToken__ = _UNDETERMINED_;
}

void ParserBase::push__(size_t state)
{
    if (static_cast<size_t>(d_stackIdx__ + 1) == d_stateStack__.size())
    {
        size_t newSize = d_stackIdx__ + STACK_EXPANSION;
        d_stateStack__.resize(newSize);
        d_valueStack__.resize(newSize);
    }
    ++d_stackIdx__;
    d_stateStack__[d_stackIdx__] = d_state__ = state;
    *(d_vsp__ = &d_valueStack__[d_stackIdx__]) = d_val__;
}

void ParserBase::popToken__()
{
    d_token__ = d_nextToken__;

    d_val__ = d_nextVal__;
    d_nextVal__ = STYPE__();

    d_nextToken__ = _UNDETERMINED_;
}
     
void ParserBase::pushToken__(int token)
{
    d_nextToken__ = d_token__;
    d_nextVal__ = d_val__;
    d_token__ = token;
}
     
void ParserBase::pop__(size_t count)
{
    if (d_stackIdx__ < static_cast<int>(count))
    {
        ABORT();
    }

    d_stackIdx__ -= count;
    d_state__ = d_stateStack__[d_stackIdx__];
    d_vsp__ = &d_valueStack__[d_stackIdx__];
}

inline size_t ParserBase::top__() const
{
    return d_stateStack__[d_stackIdx__];
}

void Parser::executeAction(int production)
try
{
    if (d_token__ != _UNDETERMINED_)
        pushToken__(d_token__);     // save an already available token

                                    // save default non-nested block $$
    if (int size = s_productionInfo[production].d_size)
        d_val__ = d_vsp__[1 - size];

    switch (production)
    {
        // $insert actioncases
        
        case 1:
#line 119 "grammar"
        {}
        break;

        case 2:
#line 120 "grammar"
        {}
        break;

        case 17:
#line 173 "grammar"
        {
         std::string a = d_scanner.matched();
         std::cout << "name "+a << std::endl ;
         
         }
        break;

    }
}
catch (std::exception const &exc)
{
    exceptionHandler__(exc);
}

inline void ParserBase::reduce__(PI__ const &pi)
{
    d_token__ = pi.d_nonTerm;
    pop__(pi.d_size);

}

// If d_token__ is _UNDETERMINED_ then if d_nextToken__ is _UNDETERMINED_ another
// token is obtained from lex(). Then d_nextToken__ is assigned to d_token__.
void Parser::nextToken()
{
    if (d_token__ != _UNDETERMINED_)        // no need for a token: got one
        return;                             // already

    if (d_nextToken__ != _UNDETERMINED_)
    {
        popToken__();                       // consume pending token
    }
    else
    {
        ++d_acceptedTokens__;               // accept another token (see
                                            // errorRecover())
        d_token__ = lex();
        if (d_token__ <= 0)
            d_token__ = _EOF_;
    }
    print();
}

// if the final transition is negative, then we should reduce by the rule
// given by its positive value. Note that the `recovery' parameter is only
// used with the --debug option
int Parser::lookup(bool recovery)
{
    // $insert threading
    SR__ *sr = s_state[d_state__];        // get the appropriate state-table
    int lastIdx = sr->d_lastIdx;        // sentinel-index in the SR__ array

    SR__ *lastElementPtr = sr + lastIdx;
    SR__ *elementPtr = sr + 1;            // start the search at s_xx[1]

    lastElementPtr->d_token = d_token__;// set search-token

    while (elementPtr->d_token != d_token__)
        ++elementPtr;

    if (elementPtr == lastElementPtr)   // reached the last element
    {
        if (elementPtr->d_action < 0)   // default reduction
        {
            return elementPtr->d_action;                
        }

        // No default reduction, so token not found, so error.
        throw UNEXPECTED_TOKEN__;
    }

    // not at the last element: inspect the nature of the action
    // (< 0: reduce, 0: ACCEPT, > 0: shift)

    int action = elementPtr->d_action;


    return action;
}

    // When an error has occurred, pop elements off the stack until the top
    // state has an error-item. If none is found, the default recovery
    // mode (which is to abort) is activated. 
    //
    // If EOF is encountered without being appropriate for the current state,
    // then the error recovery will fall back to the default recovery mode.
    // (i.e., parsing terminates)
void Parser::errorRecovery()
try
{
    if (d_acceptedTokens__ >= d_requiredTokens__)// only generate an error-
    {                                           // message if enough tokens 
        ++d_nErrors__;                          // were accepted. Otherwise
        error("Syntax error");                  // simply skip input

    }


    // get the error state
    while (not (s_state[top__()][0].d_type & ERR_ITEM))
    {
        pop__();
    }

    // In the error state, lookup a token allowing us to proceed.
    // Continuation may be possible following multiple reductions,
    // but eventuall a shift will be used, requiring the retrieval of
    // a terminal token. If a retrieved token doesn't match, the catch below 
    // will ensure the next token is requested in the while(true) block
    // implemented below:

    int lastToken = d_token__;                  // give the unexpected token a
                                                // chance to be processed
                                                // again.

    pushToken__(_error_);                       // specify _error_ as next token
    push__(lookup(true));                       // push the error state

    d_token__ = lastToken;                      // reactivate the unexpected
                                                // token (we're now in an
                                                // ERROR state).

    bool gotToken = true;                       // the next token is a terminal

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
            {
                gotToken = d_token__ == _UNDETERMINED_;
                nextToken();                    // obtain next token
            }
            
            int action = lookup(true);

            if (action > 0)                 // push a new state
            {
                push__(action);
                popToken__();

                if (gotToken)
                {

                    d_acceptedTokens__ = 0;
                    return;
                }
            }
            else if (action < 0)
            {
                // no actions executed on recovery but save an already 
                // available token:
                if (d_token__ != _UNDETERMINED_)
                    pushToken__(d_token__);
 
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else
                ABORT();                    // abort when accepting during
                                            // error recovery
        }
        catch (...)
        {
            if (d_token__ == _EOF_)
                ABORT();                    // saw inappropriate _EOF_
                      
            popToken__();                   // failing token now skipped
        }
    }
}
catch (ErrorRecovery__)       // This is: DEFAULT_RECOVERY_MODE
{
    ABORT();
}

    // The parsing algorithm:
    // Initially, state 0 is pushed on the stack, and d_token__ as well as
    // d_nextToken__ are initialized to _UNDETERMINED_. 
    //
    // Then, in an eternal loop:
    //
    //  1. If a state does not have REQ_TOKEN no token is assigned to
    //     d_token__. If the state has REQ_TOKEN, nextToken() is called to
    //      determine d_nextToken__ and d_token__ is set to
    //     d_nextToken__. nextToken() will not call lex() unless d_nextToken__ is 
    //     _UNDETERMINED_. 
    //
    //  2. lookup() is called: 
    //     d_token__ is stored in the final element's d_token field of the
    //     state's SR_ array. 
    //
    //  3. The current token is looked up in the state's SR_ array
    //
    //  4. Depending on the result of the lookup() function the next state is
    //     shifted on the parser's stack, a reduction by some rule is applied,
    //     or the parsing function returns ACCEPT(). When a reduction is
    //     called for, any action that may have been defined for that
    //     reduction is executed.
    //
    //  5. An error occurs if d_token__ is not found, and the state has no
    //     default reduction. Error handling was described at the top of this
    //     file.

int Parser::parse()
try 
{
    push__(0);                              // initial state
    clearin();                              // clear the tokens.

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
                nextToken();                // obtain next token


            int action = lookup(false);     // lookup d_token__ in d_state__

            if (action > 0)                 // SHIFT: push a new state
            {
                push__(action);
                popToken__();               // token processed
            }
            else if (action < 0)            // REDUCE: execute and pop.
            {
                executeAction(-action);
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else 
                ACCEPT();
        }
        catch (ErrorRecovery__)
        {
            errorRecovery();
        }
    }
}
catch (Return__ retValue)
{
    return retValue;
}



